// Code generated by go-swagger; DO NOT EDIT.

// This file is part of MinIO Console Server
// Copyright (c) 2023 MinIO, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "ws"
  ],
  "swagger": "2.0",
  "info": {
    "title": "MinIO Console Server",
    "version": "0.1.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/admin/info": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Returns information about the deployment",
        "operationId": "AdminInfo",
        "parameters": [
          {
            "type": "boolean",
            "default": false,
            "name": "defaultOnly",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminInfoResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets": {
      "get": {
        "tags": [
          "Bucket"
        ],
        "summary": "List Buckets",
        "operationId": "ListBuckets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listBucketsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bucket"
        ],
        "summary": "Make bucket",
        "operationId": "MakeBucket",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/makeBucketRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/makeBucketsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/max-share-exp": {
      "get": {
        "tags": [
          "Bucket"
        ],
        "summary": "Get max expiration time for share link in seconds",
        "operationId": "GetMaxShareLinkExp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/maxShareLinkExpResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/delete-objects": {
      "post": {
        "tags": [
          "Object"
        ],
        "summary": "Delete Multiple Objects",
        "operationId": "DeleteMultipleObjects",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "all_versions",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "bypass",
            "in": "query"
          },
          {
            "name": "files",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/deleteFile"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects": {
      "get": {
        "security": [
          {
            "key": []
          },
          {
            "anonymous": []
          }
        ],
        "tags": [
          "Object"
        ],
        "summary": "List Objects",
        "operationId": "ListObjects",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "recursive",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "with_versions",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "with_metadata",
            "in": "query"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listObjectsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Object"
        ],
        "summary": "Delete Object",
        "operationId": "DeleteObject",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "recursive",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "all_versions",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "non_current_versions",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "bypass",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/download": {
      "get": {
        "security": [
          {
            "key": []
          },
          {
            "anonymous": []
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "Object"
        ],
        "summary": "Download Object",
        "operationId": "Download Object",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "preview",
            "in": "query"
          },
          {
            "type": "string",
            "default": "",
            "name": "override_file_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/download-multiple": {
      "post": {
        "security": [
          {
            "key": []
          },
          {
            "anonymous": []
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "Object"
        ],
        "summary": "Download Multiple Objects",
        "operationId": "DownloadMultipleObjects",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "objectList",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/metadata": {
      "get": {
        "tags": [
          "Object"
        ],
        "summary": "Gets the metadata of an object",
        "operationId": "GetObjectMetadata",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "versionID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/metadata"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/restore": {
      "put": {
        "tags": [
          "Object"
        ],
        "summary": "Restore Object to a selected version",
        "operationId": "PutObjectRestore",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/share": {
      "get": {
        "tags": [
          "Object"
        ],
        "summary": "Shares an Object on a url",
        "operationId": "ShareObject",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "expires",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/tags": {
      "put": {
        "tags": [
          "Object"
        ],
        "summary": "Put Object's tags",
        "operationId": "PutObjectTags",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putObjectTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/upload": {
      "post": {
        "security": [
          {
            "key": []
          },
          {
            "anonymous": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "Object"
        ],
        "summary": "Uploads an Object.",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/rewind/{date}": {
      "get": {
        "tags": [
          "Bucket"
        ],
        "summary": "Get objects in a bucket for a rewind date",
        "operationId": "GetBucketRewind",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "date",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewindResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/versioning": {
      "get": {
        "tags": [
          "Bucket"
        ],
        "summary": "Bucket Versioning",
        "operationId": "GetBucketVersioning",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketVersioningResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bucket"
        ],
        "summary": "Set Bucket Versioning",
        "operationId": "SetBucketVersioning",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setBucketVersioning"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{name}": {
      "get": {
        "tags": [
          "Bucket"
        ],
        "summary": "Bucket Info",
        "operationId": "BucketInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucket"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{name}/quota": {
      "get": {
        "tags": [
          "Bucket"
        ],
        "summary": "Get Bucket Quota",
        "operationId": "GetBucketQuota",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketQuota"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/download-shared-object/{url}": {
      "get": {
        "security": [],
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "Public"
        ],
        "summary": "Downloads an object from a presigned url",
        "operationId": "DownloadSharedObject",
        "parameters": [
          {
            "type": "string",
            "name": "url",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/license/acknowledge": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "Acknowledge the license",
        "operationId": "LicenseAcknowledge",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/login": {
      "get": {
        "security": [],
        "tags": [
          "Auth"
        ],
        "summary": "Returns login strategy, form or sso.",
        "operationId": "LoginDetail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginDetails"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "post": {
        "security": [],
        "tags": [
          "Auth"
        ],
        "summary": "Login to Console",
        "operationId": "Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful login."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout from Console.",
        "operationId": "Logout",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/logoutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/session": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Endpoint to check if your session is still valid",
        "operationId": "SessionCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sessionResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiError": {
      "type": "object",
      "properties": {
        "detailedMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "BackendProperties": {
      "type": "object",
      "properties": {
        "backendType": {
          "type": "string"
        },
        "offlineDrives": {
          "type": "integer"
        },
        "onlineDrives": {
          "type": "integer"
        },
        "rrSCParity": {
          "type": "integer"
        },
        "standardSCParity": {
          "type": "integer"
        }
      }
    },
    "adminInfoResponse": {
      "type": "object",
      "properties": {
        "advancedMetricsStatus": {
          "type": "string",
          "enum": [
            "not configured",
            "available",
            "unavailable"
          ]
        },
        "backend": {
          "$ref": "#/definitions/BackendProperties"
        },
        "buckets": {
          "type": "integer"
        },
        "objects": {
          "type": "integer"
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/serverProperties"
          }
        },
        "usage": {
          "type": "integer"
        },
        "widgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/widget"
          }
        }
      }
    },
    "bucket": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "access": {
          "$ref": "#/definitions/bucketAccess"
        },
        "creation_date": {
          "type": "string"
        },
        "definition": {
          "type": "string"
        },
        "details": {
          "type": "object",
          "properties": {
            "locking": {
              "type": "boolean"
            },
            "quota": {
              "type": "object",
              "properties": {
                "quota": {
                  "type": "integer",
                  "format": "int64"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "hard"
                  ]
                }
              }
            },
            "replication": {
              "type": "boolean"
            },
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "versioning": {
              "type": "boolean"
            },
            "versioningSuspended": {
              "type": "boolean"
            }
          }
        },
        "name": {
          "type": "string",
          "minLength": 3
        },
        "objects": {
          "type": "integer",
          "format": "int64"
        },
        "rw_access": {
          "type": "object",
          "properties": {
            "read": {
              "type": "boolean"
            },
            "write": {
              "type": "boolean"
            }
          }
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "bucketAccess": {
      "type": "string",
      "default": "PRIVATE",
      "enum": [
        "PRIVATE",
        "PUBLIC",
        "CUSTOM"
      ]
    },
    "bucketObject": {
      "type": "object",
      "properties": {
        "content_type": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "expiration": {
          "type": "string"
        },
        "expiration_rule_id": {
          "type": "string"
        },
        "is_delete_marker": {
          "type": "boolean"
        },
        "is_latest": {
          "type": "boolean"
        },
        "last_modified": {
          "type": "string"
        },
        "legal_hold_status": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "retention_mode": {
          "type": "string"
        },
        "retention_until_date": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "user_metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "user_tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "version_id": {
          "type": "string"
        }
      }
    },
    "bucketQuota": {
      "type": "object",
      "properties": {
        "quota": {
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": [
            "hard"
          ]
        }
      }
    },
    "bucketVersioningResponse": {
      "type": "object",
      "properties": {
        "MFADelete": {
          "type": "string"
        },
        "excludeFolders": {
          "type": "boolean"
        },
        "excludedPrefixes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "prefix": {
                "type": "string"
              }
            }
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "deleteFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "recursive": {
          "type": "boolean"
        },
        "versionID": {
          "type": "string"
        }
      }
    },
    "environmentConstants": {
      "type": "object",
      "properties": {
        "maxConcurrentDownloads": {
          "type": "integer"
        },
        "maxConcurrentUploads": {
          "type": "integer"
        }
      }
    },
    "getBucketRetentionConfig": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/objectRetentionMode"
        },
        "unit": {
          "$ref": "#/definitions/objectRetentionUnit"
        },
        "validity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "listBucketsResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "title": "list of resulting buckets",
          "items": {
            "$ref": "#/definitions/bucket"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "number of buckets accessible to the user"
        }
      }
    },
    "listObjectsResponse": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "title": "list of resulting objects",
          "items": {
            "$ref": "#/definitions/bucketObject"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "number of objects"
        }
      }
    },
    "loginDetails": {
      "type": "object",
      "properties": {
        "animatedLogin": {
          "type": "boolean"
        },
        "isK8S": {
          "type": "boolean"
        },
        "loginStrategy": {
          "type": "string",
          "enum": [
            "form",
            "service-account",
            "redirect-service-account"
          ]
        },
        "redirectRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/redirectRule"
          }
        }
      }
    },
    "loginRequest": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "features": {
          "type": "object",
          "properties": {
            "hide_menu": {
              "type": "boolean"
            }
          }
        },
        "secretKey": {
          "type": "string"
        },
        "sts": {
          "type": "string"
        }
      }
    },
    "loginResponse": {
      "type": "object",
      "properties": {
        "IDPRefreshToken": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        }
      }
    },
    "logoutRequest": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        }
      }
    },
    "makeBucketRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "makeBucketsResponse": {
      "type": "object",
      "properties": {
        "bucketName": {
          "type": "string"
        }
      }
    },
    "maxShareLinkExpResponse": {
      "type": "object",
      "required": [
        "exp"
      ],
      "properties": {
        "exp": {
          "type": "number",
          "format": "int64"
        }
      }
    },
    "metadata": {
      "type": "object",
      "properties": {
        "objectMetadata": {
          "type": "object",
          "additionalProperties": true
        }
      }
    },
    "objectRetentionMode": {
      "type": "string",
      "enum": [
        "governance",
        "compliance"
      ]
    },
    "objectRetentionUnit": {
      "type": "string",
      "enum": [
        "days",
        "years"
      ]
    },
    "permissionResource": {
      "type": "object",
      "properties": {
        "conditionOperator": {
          "type": "string"
        },
        "prefixes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "object",
      "properties": {
        "STSAccessKeyID": {
          "type": "string"
        },
        "STSSecretAccessKey": {
          "type": "string"
        },
        "STSSessionToken": {
          "type": "string"
        },
        "accountAccessKey": {
          "type": "string"
        },
        "customStyleOb": {
          "type": "string"
        },
        "hm": {
          "type": "boolean"
        },
        "ob": {
          "type": "boolean"
        }
      }
    },
    "putObjectTagsRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "redirectRule": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "redirect": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        }
      }
    },
    "resultTarget": {
      "type": "object",
      "properties": {
        "legendFormat": {
          "type": "string"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/widgetResult"
          }
        },
        "resultType": {
          "type": "string"
        }
      }
    },
    "rewindItem": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "delete_flag": {
          "type": "boolean"
        },
        "is_latest": {
          "type": "boolean"
        },
        "last_modified": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "version_id": {
          "type": "string"
        }
      }
    },
    "rewindResponse": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rewindItem"
          }
        }
      }
    },
    "serverDrives": {
      "type": "object",
      "properties": {
        "availableSpace": {
          "type": "integer"
        },
        "drivePath": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "healing": {
          "type": "boolean"
        },
        "model": {
          "type": "string"
        },
        "rootDisk": {
          "type": "boolean"
        },
        "state": {
          "type": "string"
        },
        "totalSpace": {
          "type": "integer"
        },
        "usedSpace": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "serverProperties": {
      "type": "object",
      "properties": {
        "commitID": {
          "type": "string"
        },
        "drives": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/serverDrives"
          }
        },
        "endpoint": {
          "type": "string"
        },
        "network": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "poolNumber": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "uptime": {
          "type": "integer"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "sessionResponse": {
      "type": "object",
      "properties": {
        "allowResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/permissionResource"
          }
        },
        "customStyles": {
          "type": "string"
        },
        "distributedMode": {
          "type": "boolean"
        },
        "envConstants": {
          "$ref": "#/definitions/environmentConstants"
        },
        "features": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operator": {
          "type": "boolean"
        },
        "permissions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "serverEndPoint": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ok"
          ]
        }
      }
    },
    "setBucketVersioning": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "excludeFolders": {
          "type": "boolean"
        },
        "excludePrefixes": {
          "type": "array",
          "maxLength": 10,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "widget": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "options": {
          "type": "object",
          "properties": {
            "reduceOptions": {
              "type": "object",
              "properties": {
                "calcs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resultTarget"
          }
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "widgetResult": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {}
        }
      }
    }
  },
  "parameters": {
    "limit": {
      "type": "number",
      "format": "int32",
      "default": 20,
      "name": "limit",
      "in": "query"
    },
    "offset": {
      "type": "number",
      "format": "int32",
      "default": 0,
      "name": "offset",
      "in": "query"
    }
  },
  "securityDefinitions": {
    "anonymous": {
      "type": "apiKey",
      "name": "X-Anonymous",
      "in": "header"
    },
    "key": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "http://min.io",
      "tokenUrl": "http://min.io"
    }
  },
  "security": [
    {
      "key": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "ws"
  ],
  "swagger": "2.0",
  "info": {
    "title": "MinIO Console Server",
    "version": "0.1.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/admin/info": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Returns information about the deployment",
        "operationId": "AdminInfo",
        "parameters": [
          {
            "type": "boolean",
            "default": false,
            "name": "defaultOnly",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/adminInfoResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets": {
      "get": {
        "tags": [
          "Bucket"
        ],
        "summary": "List Buckets",
        "operationId": "ListBuckets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listBucketsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bucket"
        ],
        "summary": "Make bucket",
        "operationId": "MakeBucket",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/makeBucketRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/makeBucketsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/max-share-exp": {
      "get": {
        "tags": [
          "Bucket"
        ],
        "summary": "Get max expiration time for share link in seconds",
        "operationId": "GetMaxShareLinkExp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/maxShareLinkExpResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/delete-objects": {
      "post": {
        "tags": [
          "Object"
        ],
        "summary": "Delete Multiple Objects",
        "operationId": "DeleteMultipleObjects",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "all_versions",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "bypass",
            "in": "query"
          },
          {
            "name": "files",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/deleteFile"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects": {
      "get": {
        "security": [
          {
            "key": []
          },
          {
            "anonymous": []
          }
        ],
        "tags": [
          "Object"
        ],
        "summary": "List Objects",
        "operationId": "ListObjects",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "recursive",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "with_versions",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "with_metadata",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int32",
            "default": 20,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listObjectsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Object"
        ],
        "summary": "Delete Object",
        "operationId": "DeleteObject",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "recursive",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "all_versions",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "non_current_versions",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "bypass",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/download": {
      "get": {
        "security": [
          {
            "key": []
          },
          {
            "anonymous": []
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "Object"
        ],
        "summary": "Download Object",
        "operationId": "Download Object",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "preview",
            "in": "query"
          },
          {
            "type": "string",
            "default": "",
            "name": "override_file_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/download-multiple": {
      "post": {
        "security": [
          {
            "key": []
          },
          {
            "anonymous": []
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "Object"
        ],
        "summary": "Download Multiple Objects",
        "operationId": "DownloadMultipleObjects",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "objectList",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/metadata": {
      "get": {
        "tags": [
          "Object"
        ],
        "summary": "Gets the metadata of an object",
        "operationId": "GetObjectMetadata",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "versionID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/metadata"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/restore": {
      "put": {
        "tags": [
          "Object"
        ],
        "summary": "Restore Object to a selected version",
        "operationId": "PutObjectRestore",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/share": {
      "get": {
        "tags": [
          "Object"
        ],
        "summary": "Shares an Object on a url",
        "operationId": "ShareObject",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "expires",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/tags": {
      "put": {
        "tags": [
          "Object"
        ],
        "summary": "Put Object's tags",
        "operationId": "PutObjectTags",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "version_id",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putObjectTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/objects/upload": {
      "post": {
        "security": [
          {
            "key": []
          },
          {
            "anonymous": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "Object"
        ],
        "summary": "Uploads an Object.",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/rewind/{date}": {
      "get": {
        "tags": [
          "Bucket"
        ],
        "summary": "Get objects in a bucket for a rewind date",
        "operationId": "GetBucketRewind",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "date",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "prefix",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewindResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{bucket_name}/versioning": {
      "get": {
        "tags": [
          "Bucket"
        ],
        "summary": "Bucket Versioning",
        "operationId": "GetBucketVersioning",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketVersioningResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bucket"
        ],
        "summary": "Set Bucket Versioning",
        "operationId": "SetBucketVersioning",
        "parameters": [
          {
            "type": "string",
            "name": "bucket_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/setBucketVersioning"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{name}": {
      "get": {
        "tags": [
          "Bucket"
        ],
        "summary": "Bucket Info",
        "operationId": "BucketInfo",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucket"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/buckets/{name}/quota": {
      "get": {
        "tags": [
          "Bucket"
        ],
        "summary": "Get Bucket Quota",
        "operationId": "GetBucketQuota",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/bucketQuota"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/download-shared-object/{url}": {
      "get": {
        "security": [],
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "Public"
        ],
        "summary": "Downloads an object from a presigned url",
        "operationId": "DownloadSharedObject",
        "parameters": [
          {
            "type": "string",
            "name": "url",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/license/acknowledge": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "Acknowledge the license",
        "operationId": "LicenseAcknowledge",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/login": {
      "get": {
        "security": [],
        "tags": [
          "Auth"
        ],
        "summary": "Returns login strategy, form or sso.",
        "operationId": "LoginDetail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loginDetails"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "post": {
        "security": [],
        "tags": [
          "Auth"
        ],
        "summary": "Login to Console",
        "operationId": "Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful login."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout from Console.",
        "operationId": "Logout",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/logoutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/session": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Endpoint to check if your session is still valid",
        "operationId": "SessionCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sessionResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiError": {
      "type": "object",
      "properties": {
        "detailedMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "BackendProperties": {
      "type": "object",
      "properties": {
        "backendType": {
          "type": "string"
        },
        "offlineDrives": {
          "type": "integer"
        },
        "onlineDrives": {
          "type": "integer"
        },
        "rrSCParity": {
          "type": "integer"
        },
        "standardSCParity": {
          "type": "integer"
        }
      }
    },
    "BucketDetails": {
      "type": "object",
      "properties": {
        "locking": {
          "type": "boolean"
        },
        "quota": {
          "type": "object",
          "properties": {
            "quota": {
              "type": "integer",
              "format": "int64"
            },
            "type": {
              "type": "string",
              "enum": [
                "hard"
              ]
            }
          }
        },
        "replication": {
          "type": "boolean"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "versioning": {
          "type": "boolean"
        },
        "versioningSuspended": {
          "type": "boolean"
        }
      }
    },
    "BucketDetailsQuota": {
      "type": "object",
      "properties": {
        "quota": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "enum": [
            "hard"
          ]
        }
      }
    },
    "BucketRwAccess": {
      "type": "object",
      "properties": {
        "read": {
          "type": "boolean"
        },
        "write": {
          "type": "boolean"
        }
      }
    },
    "BucketVersioningResponseExcludedPrefixesItems0": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string"
        }
      }
    },
    "LoginRequestFeatures": {
      "type": "object",
      "properties": {
        "hide_menu": {
          "type": "boolean"
        }
      }
    },
    "WidgetOptions": {
      "type": "object",
      "properties": {
        "reduceOptions": {
          "type": "object",
          "properties": {
            "calcs": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "WidgetOptionsReduceOptions": {
      "type": "object",
      "properties": {
        "calcs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "adminInfoResponse": {
      "type": "object",
      "properties": {
        "advancedMetricsStatus": {
          "type": "string",
          "enum": [
            "not configured",
            "available",
            "unavailable"
          ]
        },
        "backend": {
          "$ref": "#/definitions/BackendProperties"
        },
        "buckets": {
          "type": "integer"
        },
        "objects": {
          "type": "integer"
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/serverProperties"
          }
        },
        "usage": {
          "type": "integer"
        },
        "widgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/widget"
          }
        }
      }
    },
    "bucket": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "access": {
          "$ref": "#/definitions/bucketAccess"
        },
        "creation_date": {
          "type": "string"
        },
        "definition": {
          "type": "string"
        },
        "details": {
          "type": "object",
          "properties": {
            "locking": {
              "type": "boolean"
            },
            "quota": {
              "type": "object",
              "properties": {
                "quota": {
                  "type": "integer",
                  "format": "int64"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "hard"
                  ]
                }
              }
            },
            "replication": {
              "type": "boolean"
            },
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "versioning": {
              "type": "boolean"
            },
            "versioningSuspended": {
              "type": "boolean"
            }
          }
        },
        "name": {
          "type": "string",
          "minLength": 3
        },
        "objects": {
          "type": "integer",
          "format": "int64"
        },
        "rw_access": {
          "type": "object",
          "properties": {
            "read": {
              "type": "boolean"
            },
            "write": {
              "type": "boolean"
            }
          }
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "bucketAccess": {
      "type": "string",
      "default": "PRIVATE",
      "enum": [
        "PRIVATE",
        "PUBLIC",
        "CUSTOM"
      ]
    },
    "bucketObject": {
      "type": "object",
      "properties": {
        "content_type": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "expiration": {
          "type": "string"
        },
        "expiration_rule_id": {
          "type": "string"
        },
        "is_delete_marker": {
          "type": "boolean"
        },
        "is_latest": {
          "type": "boolean"
        },
        "last_modified": {
          "type": "string"
        },
        "legal_hold_status": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "retention_mode": {
          "type": "string"
        },
        "retention_until_date": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "user_metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "user_tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "version_id": {
          "type": "string"
        }
      }
    },
    "bucketQuota": {
      "type": "object",
      "properties": {
        "quota": {
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": [
            "hard"
          ]
        }
      }
    },
    "bucketVersioningResponse": {
      "type": "object",
      "properties": {
        "MFADelete": {
          "type": "string"
        },
        "excludeFolders": {
          "type": "boolean"
        },
        "excludedPrefixes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BucketVersioningResponseExcludedPrefixesItems0"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "deleteFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "recursive": {
          "type": "boolean"
        },
        "versionID": {
          "type": "string"
        }
      }
    },
    "environmentConstants": {
      "type": "object",
      "properties": {
        "maxConcurrentDownloads": {
          "type": "integer"
        },
        "maxConcurrentUploads": {
          "type": "integer"
        }
      }
    },
    "getBucketRetentionConfig": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/objectRetentionMode"
        },
        "unit": {
          "$ref": "#/definitions/objectRetentionUnit"
        },
        "validity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "listBucketsResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "title": "list of resulting buckets",
          "items": {
            "$ref": "#/definitions/bucket"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "number of buckets accessible to the user"
        }
      }
    },
    "listObjectsResponse": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "title": "list of resulting objects",
          "items": {
            "$ref": "#/definitions/bucketObject"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "title": "number of objects"
        }
      }
    },
    "loginDetails": {
      "type": "object",
      "properties": {
        "animatedLogin": {
          "type": "boolean"
        },
        "isK8S": {
          "type": "boolean"
        },
        "loginStrategy": {
          "type": "string",
          "enum": [
            "form",
            "service-account",
            "redirect-service-account"
          ]
        },
        "redirectRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/redirectRule"
          }
        }
      }
    },
    "loginRequest": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "features": {
          "type": "object",
          "properties": {
            "hide_menu": {
              "type": "boolean"
            }
          }
        },
        "secretKey": {
          "type": "string"
        },
        "sts": {
          "type": "string"
        }
      }
    },
    "loginResponse": {
      "type": "object",
      "properties": {
        "IDPRefreshToken": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        }
      }
    },
    "logoutRequest": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        }
      }
    },
    "makeBucketRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "makeBucketsResponse": {
      "type": "object",
      "properties": {
        "bucketName": {
          "type": "string"
        }
      }
    },
    "maxShareLinkExpResponse": {
      "type": "object",
      "required": [
        "exp"
      ],
      "properties": {
        "exp": {
          "type": "number",
          "format": "int64"
        }
      }
    },
    "metadata": {
      "type": "object",
      "properties": {
        "objectMetadata": {
          "type": "object",
          "additionalProperties": true
        }
      }
    },
    "objectRetentionMode": {
      "type": "string",
      "enum": [
        "governance",
        "compliance"
      ]
    },
    "objectRetentionUnit": {
      "type": "string",
      "enum": [
        "days",
        "years"
      ]
    },
    "permissionResource": {
      "type": "object",
      "properties": {
        "conditionOperator": {
          "type": "string"
        },
        "prefixes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "object",
      "properties": {
        "STSAccessKeyID": {
          "type": "string"
        },
        "STSSecretAccessKey": {
          "type": "string"
        },
        "STSSessionToken": {
          "type": "string"
        },
        "accountAccessKey": {
          "type": "string"
        },
        "customStyleOb": {
          "type": "string"
        },
        "hm": {
          "type": "boolean"
        },
        "ob": {
          "type": "boolean"
        }
      }
    },
    "putObjectTagsRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "redirectRule": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "redirect": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        }
      }
    },
    "resultTarget": {
      "type": "object",
      "properties": {
        "legendFormat": {
          "type": "string"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/widgetResult"
          }
        },
        "resultType": {
          "type": "string"
        }
      }
    },
    "rewindItem": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "delete_flag": {
          "type": "boolean"
        },
        "is_latest": {
          "type": "boolean"
        },
        "last_modified": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "version_id": {
          "type": "string"
        }
      }
    },
    "rewindResponse": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rewindItem"
          }
        }
      }
    },
    "serverDrives": {
      "type": "object",
      "properties": {
        "availableSpace": {
          "type": "integer"
        },
        "drivePath": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "healing": {
          "type": "boolean"
        },
        "model": {
          "type": "string"
        },
        "rootDisk": {
          "type": "boolean"
        },
        "state": {
          "type": "string"
        },
        "totalSpace": {
          "type": "integer"
        },
        "usedSpace": {
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "serverProperties": {
      "type": "object",
      "properties": {
        "commitID": {
          "type": "string"
        },
        "drives": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/serverDrives"
          }
        },
        "endpoint": {
          "type": "string"
        },
        "network": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "poolNumber": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "uptime": {
          "type": "integer"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "sessionResponse": {
      "type": "object",
      "properties": {
        "allowResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/permissionResource"
          }
        },
        "customStyles": {
          "type": "string"
        },
        "distributedMode": {
          "type": "boolean"
        },
        "envConstants": {
          "$ref": "#/definitions/environmentConstants"
        },
        "features": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operator": {
          "type": "boolean"
        },
        "permissions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "serverEndPoint": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ok"
          ]
        }
      }
    },
    "setBucketVersioning": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "excludeFolders": {
          "type": "boolean"
        },
        "excludePrefixes": {
          "type": "array",
          "maxLength": 10,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "widget": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "options": {
          "type": "object",
          "properties": {
            "reduceOptions": {
              "type": "object",
              "properties": {
                "calcs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resultTarget"
          }
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "widgetResult": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {}
        }
      }
    }
  },
  "parameters": {
    "limit": {
      "type": "number",
      "format": "int32",
      "default": 20,
      "name": "limit",
      "in": "query"
    },
    "offset": {
      "type": "number",
      "format": "int32",
      "default": 0,
      "name": "offset",
      "in": "query"
    }
  },
  "securityDefinitions": {
    "anonymous": {
      "type": "apiKey",
      "name": "X-Anonymous",
      "in": "header"
    },
    "key": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "http://min.io",
      "tokenUrl": "http://min.io"
    }
  },
  "security": [
    {
      "key": []
    }
  ]
}`))
}
