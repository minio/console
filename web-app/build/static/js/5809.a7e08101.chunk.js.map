{"version":3,"file":"static/js/5809.a7e08101.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/SummaryItems/BucketTags.tsx","screens/Console/Common/Hooks/useApi.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { AddIcon, Box, Loader, Tag } from \"mds\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { IAM_SCOPES } from \"../../../../../common/SecureComponent/permissions\";\nimport { SecureComponent } from \"../../../../../common/SecureComponent\";\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../../store\";\nimport useApi from \"../../../Common/Hooks/useApi\";\nimport withSuspense from \"../../../Common/Components/withSuspense\";\n\nconst AddBucketTagModal = withSuspense(\n  React.lazy(() => import(\"../AddBucketTagModal\")),\n);\nconst DeleteBucketTagModal = withSuspense(\n  React.lazy(() => import(\"../DeleteBucketTagModal\")),\n);\n\ntype BucketTagProps = {\n  bucketName: string;\n};\n\ninterface Details {\n  tags: object;\n}\n\ninterface Bucket {\n  details: Details;\n  name: string;\n}\n\nconst BucketTags = ({ bucketName }: BucketTagProps) => {\n  const dispatch = useAppDispatch();\n\n  const [tags, setTags] = useState<any>(null);\n  const [tagModalOpen, setTagModalOpen] = useState<boolean>(false);\n  const [tagKeys, setTagKeys] = useState<string[]>([]);\n  const [selectedTag, setSelectedTag] = useState<string[]>([\"\", \"\"]);\n  const [deleteTagModalOpen, setDeleteTagModalOpen] = useState<boolean>(false);\n\n  const closeAddTagModal = (refresh: boolean) => {\n    setTagModalOpen(false);\n    if (refresh) {\n      fetchTags();\n    }\n  };\n\n  const deleteTag = (tagKey: string, tagLabel: string) => {\n    setSelectedTag([tagKey, tagLabel]);\n    setDeleteTagModalOpen(true);\n  };\n\n  const closeDeleteTagModal = (refresh: boolean) => {\n    setDeleteTagModalOpen(false);\n\n    if (refresh) {\n      fetchTags();\n    }\n  };\n\n  const onTagLoaded = (res: Bucket) => {\n    if (!!res && res?.details != null) {\n      if (res.details.tags) {\n        setTags(res?.details?.tags);\n        setTagKeys(Object.keys(res?.details?.tags));\n\n        return;\n      }\n      setTags([]);\n      setTagKeys([]);\n    }\n  };\n\n  const onTagLoadFailed = (err: ErrorResponseHandler) => {\n    dispatch(setErrorSnackMessage(err));\n  };\n\n  const [isLoading, invokeTagsApi] = useApi(onTagLoaded, onTagLoadFailed);\n\n  const fetchTags = () => {\n    invokeTagsApi(\"GET\", `/api/v1/buckets/${bucketName}`);\n  };\n\n  useEffect(() => {\n    fetchTags();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [bucketName]);\n\n  return (\n    <Box>\n      {isLoading ? <Loader style={{ width: 16, height: 16 }} /> : null}\n      <SecureComponent\n        scopes={[IAM_SCOPES.S3_GET_BUCKET_TAGGING, IAM_SCOPES.S3_GET_ACTIONS]}\n        resource={bucketName}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            marginTop: 5,\n          }}\n        >\n          <Box sx={{ display: \"flex\", gap: 8, flexWrap: \"wrap\" }}>\n            {tagKeys &&\n              tagKeys.map((tagKey: any, index: any) => {\n                const tag = get(tags, `${tagKey}`, \"\");\n                if (tag !== \"\") {\n                  return (\n                    <SecureComponent\n                      key={`chip-${index}`}\n                      scopes={[\n                        IAM_SCOPES.S3_PUT_BUCKET_TAGGING,\n                        IAM_SCOPES.S3_PUT_ACTIONS,\n                      ]}\n                      resource={bucketName}\n                      matchAll\n                      errorProps={{\n                        deleteIcon: null,\n                        onDelete: null,\n                      }}\n                    >\n                      <Tag\n                        label={`${tagKey} : ${tag}`}\n                        id={`tag-${tagKey}-${tag}`}\n                        onDelete={() => {\n                          deleteTag(tagKey, tag);\n                        }}\n                      />\n                    </SecureComponent>\n                  );\n                }\n                return null;\n              })}\n            <SecureComponent\n              scopes={[\n                IAM_SCOPES.S3_PUT_BUCKET_TAGGING,\n                IAM_SCOPES.S3_PUT_ACTIONS,\n              ]}\n              resource={bucketName}\n              errorProps={{ disabled: true, onClick: null }}\n            >\n              <Tag\n                label=\"Add tag\"\n                icon={<AddIcon />}\n                id={\"create-tag\"}\n                variant={\"outlined\"}\n                onClick={() => {\n                  setTagModalOpen(true);\n                }}\n                sx={{ cursor: \"pointer\", maxWidth: 90 }}\n              />\n            </SecureComponent>\n          </Box>\n        </Box>\n      </SecureComponent>\n\n      {/** Modals **/}\n\n      {tagModalOpen && (\n        <AddBucketTagModal\n          modalOpen={tagModalOpen}\n          currentTags={tags}\n          bucketName={bucketName}\n          onCloseAndUpdate={closeAddTagModal}\n        />\n      )}\n      {deleteTagModalOpen && (\n        <DeleteBucketTagModal\n          deleteOpen={deleteTagModalOpen}\n          currentTags={tags}\n          bucketName={bucketName}\n          onCloseAndUpdate={closeDeleteTagModal}\n          selectedTag={selectedTag}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default BucketTags;\n","import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction,\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any, headers?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data, headers)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n"],"names":["AddBucketTagModal","withSuspense","React","DeleteBucketTagModal","_ref","bucketName","dispatch","useAppDispatch","tags","setTags","useState","tagModalOpen","setTagModalOpen","tagKeys","setTagKeys","selectedTag","setSelectedTag","deleteTagModalOpen","setDeleteTagModalOpen","isLoading","invokeTagsApi","useApi","res","details","_res$details","_res$details2","Object","keys","err","setErrorSnackMessage","fetchTags","useEffect","_jsxs","Box","children","_jsx","Loader","style","width","height","SecureComponent","scopes","IAM_SCOPES","S3_GET_BUCKET_TAGGING","S3_GET_ACTIONS","resource","sx","display","flexFlow","marginTop","gap","flexWrap","map","tagKey","index","tag","get","S3_PUT_BUCKET_TAGGING","S3_PUT_ACTIONS","matchAll","errorProps","deleteIcon","onDelete","Tag","label","id","deleteTag","tagLabel","disabled","onClick","icon","AddIcon","variant","cursor","maxWidth","modalOpen","currentTags","onCloseAndUpdate","refresh","deleteOpen","onSuccess","onError","setIsLoading","callApi","method","url","data","headers","api","invoke","then","catch"],"sourceRoot":""}