{"version":3,"file":"static/js/12.fcd89e94.chunk.js","mappings":"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","sources":["screens/Console/Buckets/VersioningInfo.tsx","screens/Console/Buckets/BucketDetails/SummaryItems/EditActionButton.tsx","screens/Console/Buckets/BucketDetails/SummaryItems/EditablePropertyItem.tsx","screens/Console/Buckets/BucketDetails/SummaryItems/ReportedUsage.tsx","screens/Console/Buckets/BucketDetails/SummaryItems/BucketQuotaSize.tsx","screens/Console/Buckets/BucketDetails/BucketSummaryPanel.tsx","screens/Console/Buckets/BucketDetails/SummaryItems/LabelWithIcon.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { DisabledIcon, EnabledIcon, Box } from \"mds\";\nimport { BucketVersioningResponse } from \"api/consoleApi\";\nimport LabelWithIcon from \"./BucketDetails/SummaryItems/LabelWithIcon\";\n\nconst VersioningInfo = ({\n  versioningState = {},\n}: {\n  versioningState?: BucketVersioningResponse;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 2,\n      }}\n    >\n      <Box sx={{ fontWeight: \"medium\", display: \"flex\", gap: 2 }}>\n        {versioningState.excludeFolders ? (\n          <LabelWithIcon\n            icon={\n              versioningState.excludeFolders ? (\n                <EnabledIcon style={{ color: \"green\" }} />\n              ) : (\n                <DisabledIcon />\n              )\n            }\n            label={\n              <label style={{ textDecoration: \"normal\" }}>\n                Exclude Folders\n              </label>\n            }\n          />\n        ) : null}\n      </Box>\n      {versioningState.excludedPrefixes?.length ? (\n        <Box\n          sx={{\n            fontWeight: \"medium\",\n            display: \"flex\",\n            justifyItems: \"end\",\n            placeItems: \"flex-start\",\n            flexDirection: \"column\",\n            gap: 1,\n          }}\n        >\n          <Box>Excluded Prefixes :</Box>\n          <div\n            style={{\n              maxHeight: \"200px\",\n              overflowY: \"auto\",\n              placeItems: \"flex-start\",\n              justifyItems: \"end\",\n              flexDirection: \"column\",\n              display: \"flex\",\n            }}\n          >\n            {versioningState.excludedPrefixes?.map((it) => (\n              <div>\n                <strong>{it.prefix}</strong>\n              </div>\n            ))}\n          </div>\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n\nexport default VersioningInfo;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { EditIcon, IconButton } from \"mds\";\n\ntype EditActionButtonProps = {\n  disabled?: boolean;\n  onClick: () => void | any;\n  [x: string]: any;\n};\n\nconst EditActionButton = ({\n  disabled,\n  onClick,\n  ...restProps\n}: EditActionButtonProps) => {\n  return (\n    <IconButton\n      size={\"small\"}\n      disabled={disabled}\n      onClick={onClick}\n      {...restProps}\n    >\n      <EditIcon />\n    </IconButton>\n  );\n};\n\nexport default EditActionButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { ActionLink, Box, HelpTip, ValuePair } from \"mds\";\nimport { SecureComponent } from \"../../../../../common/SecureComponent\";\n\nimport EditActionButton from \"./EditActionButton\";\n\ntype EditablePropertyItemProps = {\n  isLoading: boolean;\n  resourceName: string;\n  iamScopes: string[];\n  property: any;\n  value: any;\n  onEdit: () => void;\n  secureCmpProps?: Record<any, any>;\n  disabled?: boolean;\n  helpTip?: any;\n};\n\nconst SecureAction = ({\n  resourceName,\n  iamScopes,\n  secureCmpProps = {},\n  children,\n}: {\n  resourceName: string;\n  iamScopes: string[];\n  children: any;\n  secureCmpProps?: Record<any, any>;\n}) => {\n  return (\n    <SecureComponent\n      scopes={iamScopes}\n      resource={resourceName}\n      errorProps={{ disabled: true }}\n      {...secureCmpProps}\n    >\n      {children}\n    </SecureComponent>\n  );\n};\n\nconst EditablePropertyItem = ({\n  isLoading = true,\n  resourceName = \"\",\n  iamScopes,\n  secureCmpProps = {},\n  property = null,\n  value = null,\n  onEdit,\n  disabled = false,\n  helpTip,\n}: EditablePropertyItemProps) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"baseline\",\n        justifyContent: \"flex-start\",\n        gap: 10,\n      }}\n    >\n      <ValuePair\n        label={property}\n        value={\n          helpTip ? (\n            <SecureAction\n              resourceName={resourceName}\n              iamScopes={iamScopes}\n              secureCmpProps={secureCmpProps}\n            >\n              <HelpTip placement=\"left\" content={helpTip}>\n                <ActionLink\n                  isLoading={isLoading}\n                  onClick={onEdit}\n                  label={value}\n                  sx={{ fontWeight: \"bold\", textTransform: \"capitalize\" }}\n                  disabled={disabled}\n                />\n              </HelpTip>\n            </SecureAction>\n          ) : (\n            <SecureAction\n              resourceName={resourceName}\n              iamScopes={iamScopes}\n              secureCmpProps={secureCmpProps}\n            >\n              <ActionLink\n                isLoading={isLoading}\n                onClick={onEdit}\n                label={value}\n                sx={{ fontWeight: \"bold\", textTransform: \"capitalize\" }}\n                disabled={disabled}\n              />\n            </SecureAction>\n          )\n        }\n      />\n      <SecureAction\n        resourceName={resourceName}\n        iamScopes={iamScopes}\n        secureCmpProps={secureCmpProps}\n      >\n        <EditActionButton\n          onClick={onEdit}\n          sx={{\n            background: \"#f8f8f8\",\n            marginLeft: \"3px\",\n            top: 3,\n            \"& .min-icon\": {\n              width: \"16px\",\n              height: \"16px\",\n            },\n          }}\n          disabled={disabled}\n        />\n      </SecureAction>\n    </Box>\n  );\n};\n\nexport default EditablePropertyItem;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { ReportedUsageFullIcon, Box } from \"mds\";\nimport { niceBytes } from \"../../../../../common/utils\";\n\nconst ReportedUsage = ({ bucketSize }: { bucketSize: string }) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n\n        \"& .min-icon\": {\n          height: 37,\n          width: 37,\n        },\n      }}\n    >\n      <ReportedUsageFullIcon />\n\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"flex-start\",\n          justifyContent: \"center\",\n          flexFlow: \"column\",\n          marginLeft: \"20px\",\n          fontSize: \"19px\",\n        }}\n      >\n        <label\n          style={{\n            fontWeight: 600,\n          }}\n        >\n          Reported Usage:\n        </label>\n        <label>{niceBytes(bucketSize)}</label>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ReportedUsage;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { HardBucketQuotaIcon, Box } from \"mds\";\nimport { niceBytes } from \"../../../../../common/utils\";\n\nconst BucketQuotaSize = ({ quota }: { quota: any }) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n\n        \"& .min-icon\": {\n          height: 37,\n          width: 37,\n        },\n      }}\n    >\n      <HardBucketQuotaIcon />\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"flex-start\",\n          justifyContent: \"center\",\n          flexFlow: \"column\",\n          marginLeft: \"20px\",\n          fontSize: \"19px\",\n        }}\n      >\n        <label\n          style={{\n            fontWeight: 600,\n            textTransform: \"capitalize\",\n          }}\n        >\n          {quota?.type} Quota\n        </label>\n        <label> {niceBytes(`${quota?.quota}`, true)}</label>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BucketQuotaSize;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { api } from \"api\";\nimport {\n  BucketEncryptionInfo,\n  BucketQuota,\n  BucketVersioningResponse,\n  GetBucketRetentionConfig,\n} from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport {\n  Box,\n  DisabledIcon,\n  EnabledIcon,\n  Grid,\n  SectionTitle,\n  ValuePair,\n} from \"mds\";\nimport { twoColCssGridLayoutConfig } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport {\n  selDistSet,\n  setErrorSnackMessage,\n  setHelpName,\n} from \"../../../../systemSlice\";\nimport {\n  selBucketDetailsInfo,\n  selBucketDetailsLoading,\n  setBucketDetailsLoad,\n} from \"./bucketDetailsSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport VersioningInfo from \"../VersioningInfo\";\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport LabelWithIcon from \"./SummaryItems/LabelWithIcon\";\nimport EditablePropertyItem from \"./SummaryItems/EditablePropertyItem\";\nimport ReportedUsage from \"./SummaryItems/ReportedUsage\";\nimport BucketQuotaSize from \"./SummaryItems/BucketQuotaSize\";\n\nconst SetAccessPolicy = withSuspense(\n  React.lazy(() => import(\"./SetAccessPolicy\")),\n);\nconst SetRetentionConfig = withSuspense(\n  React.lazy(() => import(\"./SetRetentionConfig\")),\n);\nconst EnableBucketEncryption = withSuspense(\n  React.lazy(() => import(\"./EnableBucketEncryption\")),\n);\nconst EnableVersioningModal = withSuspense(\n  React.lazy(() => import(\"./EnableVersioningModal\")),\n);\nconst BucketTags = withSuspense(\n  React.lazy(() => import(\"./SummaryItems/BucketTags\")),\n);\nconst EnableQuota = withSuspense(React.lazy(() => import(\"./EnableQuota\")));\n\nconst BucketSummary = () => {\n  const dispatch = useAppDispatch();\n  const params = useParams();\n\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n  const bucketInfo = useSelector(selBucketDetailsInfo);\n  const distributedSetup = useSelector(selDistSet);\n\n  const [encryptionCfg, setEncryptionCfg] =\n    useState<BucketEncryptionInfo | null>(null);\n  const [bucketSize, setBucketSize] = useState<number | \"0\">(\"0\");\n  const [hasObjectLocking, setHasObjectLocking] = useState<boolean | undefined>(\n    false,\n  );\n  const [accessPolicyScreenOpen, setAccessPolicyScreenOpen] =\n    useState<boolean>(false);\n  const [replicationRules, setReplicationRules] = useState<boolean>(false);\n  const [loadingObjectLocking, setLoadingLocking] = useState<boolean>(true);\n  const [loadingSize, setLoadingSize] = useState<boolean>(true);\n  const [bucketLoading, setBucketLoading] = useState<boolean>(true);\n  const [loadingEncryption, setLoadingEncryption] = useState<boolean>(true);\n  const [loadingVersioning, setLoadingVersioning] = useState<boolean>(true);\n  const [loadingQuota, setLoadingQuota] = useState<boolean>(true);\n  const [loadingReplication, setLoadingReplication] = useState<boolean>(true);\n  const [loadingRetention, setLoadingRetention] = useState<boolean>(true);\n  const [versioningInfo, setVersioningInfo] =\n    useState<BucketVersioningResponse>();\n  const [quotaEnabled, setQuotaEnabled] = useState<boolean>(false);\n  const [quota, setQuota] = useState<BucketQuota | null>(null);\n  const [encryptionEnabled, setEncryptionEnabled] = useState<boolean>(false);\n  const [retentionEnabled, setRetentionEnabled] = useState<boolean>(false);\n  const [retentionConfig, setRetentionConfig] =\n    useState<GetBucketRetentionConfig | null>(null);\n  const [retentionConfigOpen, setRetentionConfigOpen] =\n    useState<boolean>(false);\n  const [enableEncryptionScreenOpen, setEnableEncryptionScreenOpen] =\n    useState<boolean>(false);\n  const [enableQuotaScreenOpen, setEnableQuotaScreenOpen] =\n    useState<boolean>(false);\n  const [enableVersioningOpen, setEnableVersioningOpen] =\n    useState<boolean>(false);\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket_detail_summary\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const bucketName = params.bucketName || \"\";\n\n  let accessPolicy = \"PRIVATE\";\n  let policyDefinition = \"\";\n\n  if (bucketInfo !== null && bucketInfo.access && bucketInfo.definition) {\n    accessPolicy = bucketInfo.access;\n    policyDefinition = bucketInfo.definition;\n  }\n\n  const displayGetBucketObjectLockConfiguration = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_BUCKET_OBJECT_LOCK_CONFIGURATION,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  const displayGetBucketEncryptionConfiguration = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_BUCKET_ENCRYPTION_CONFIGURATION,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  const displayGetBucketQuota = hasPermission(bucketName, [\n    IAM_SCOPES.ADMIN_GET_BUCKET_QUOTA,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setBucketLoading(true);\n    } else {\n      setBucketLoading(false);\n    }\n  }, [loadingBucket, setBucketLoading]);\n\n  useEffect(() => {\n    if (loadingEncryption) {\n      if (displayGetBucketEncryptionConfiguration) {\n        api.buckets\n          .getBucketEncryptionInfo(bucketName)\n          .then((res) => {\n            if (res.data.algorithm) {\n              setEncryptionEnabled(true);\n              setEncryptionCfg(res.data);\n            }\n            setLoadingEncryption(false);\n          })\n          .catch((err) => {\n            err = errorToHandler(err.error);\n            if (\n              err.errorMessage ===\n              \"The server side encryption configuration was not found\"\n            ) {\n              setEncryptionEnabled(false);\n              setEncryptionCfg(null);\n            }\n            setLoadingEncryption(false);\n          });\n      } else {\n        setEncryptionEnabled(false);\n        setEncryptionCfg(null);\n        setLoadingEncryption(false);\n      }\n    }\n  }, [loadingEncryption, bucketName, displayGetBucketEncryptionConfiguration]);\n\n  useEffect(() => {\n    if (loadingVersioning && distributedSetup) {\n      api.buckets\n        .getBucketVersioning(bucketName)\n        .then((res) => {\n          setVersioningInfo(res.data);\n          setLoadingVersioning(false);\n        })\n        .catch((err) => {\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          setLoadingVersioning(false);\n        });\n    }\n  }, [loadingVersioning, dispatch, bucketName, distributedSetup]);\n\n  useEffect(() => {\n    if (loadingQuota && distributedSetup) {\n      if (displayGetBucketQuota) {\n        api.buckets\n          .getBucketQuota(bucketName)\n          .then((res) => {\n            setQuota(res.data);\n            if (res.data.quota) {\n              setQuotaEnabled(true);\n            } else {\n              setQuotaEnabled(false);\n            }\n            setLoadingQuota(false);\n          })\n          .catch((err) => {\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n            setQuotaEnabled(false);\n            setLoadingQuota(false);\n          });\n      } else {\n        setQuotaEnabled(false);\n        setLoadingQuota(false);\n      }\n    }\n  }, [\n    loadingQuota,\n    setLoadingVersioning,\n    dispatch,\n    bucketName,\n    distributedSetup,\n    displayGetBucketQuota,\n  ]);\n\n  useEffect(() => {\n    if (loadingVersioning && distributedSetup) {\n      if (displayGetBucketObjectLockConfiguration) {\n        api.buckets\n          .getBucketObjectLockingStatus(bucketName)\n          .then((res) => {\n            setHasObjectLocking(res.data.object_locking_enabled);\n            setLoadingLocking(false);\n          })\n          .catch((err) => {\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n            setLoadingLocking(false);\n          });\n      } else {\n        setLoadingLocking(false);\n      }\n    }\n  }, [\n    loadingObjectLocking,\n    dispatch,\n    bucketName,\n    loadingVersioning,\n    distributedSetup,\n    displayGetBucketObjectLockConfiguration,\n  ]);\n\n  useEffect(() => {\n    if (loadingSize) {\n      api.buckets\n        .listBuckets()\n        .then((res) => {\n          const resBuckets = get(res.data, \"buckets\", []);\n\n          const bucketInfo = resBuckets.find(\n            (bucket) => bucket.name === bucketName,\n          );\n\n          const size = get(bucketInfo, \"size\", \"0\");\n\n          setLoadingSize(false);\n          setBucketSize(size);\n        })\n        .catch((err) => {\n          setLoadingSize(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [loadingSize, dispatch, bucketName]);\n\n  useEffect(() => {\n    if (loadingReplication && distributedSetup) {\n      api.buckets\n        .getBucketReplication(bucketName)\n        .then((res) => {\n          const r = res.data.rules ? res.data.rules : [];\n          setReplicationRules(r.length > 0);\n          setLoadingReplication(false);\n        })\n        .catch((err) => {\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          setLoadingReplication(false);\n        });\n    }\n  }, [loadingReplication, dispatch, bucketName, distributedSetup]);\n\n  useEffect(() => {\n    if (loadingRetention && hasObjectLocking) {\n      api.buckets\n        .getBucketRetentionConfig(bucketName)\n        .then((res) => {\n          setLoadingRetention(false);\n          setRetentionEnabled(true);\n          setRetentionConfig(res.data);\n        })\n        .catch((err) => {\n          setRetentionEnabled(false);\n          setLoadingRetention(false);\n          setRetentionConfig(null);\n        });\n    }\n  }, [loadingRetention, hasObjectLocking, bucketName]);\n\n  const loadAllBucketData = () => {\n    dispatch(setBucketDetailsLoad(true));\n    setBucketLoading(true);\n    setLoadingSize(true);\n    setLoadingVersioning(true);\n    setLoadingEncryption(true);\n    setLoadingRetention(true);\n  };\n\n  const setBucketVersioning = () => {\n    setEnableVersioningOpen(true);\n  };\n  const setBucketQuota = () => {\n    setEnableQuotaScreenOpen(true);\n  };\n\n  const closeEnableBucketEncryption = () => {\n    setEnableEncryptionScreenOpen(false);\n    setLoadingEncryption(true);\n  };\n  const closeEnableBucketQuota = () => {\n    setEnableQuotaScreenOpen(false);\n    setLoadingQuota(true);\n  };\n\n  const closeSetAccessPolicy = () => {\n    setAccessPolicyScreenOpen(false);\n    loadAllBucketData();\n  };\n\n  const closeRetentionConfig = () => {\n    setRetentionConfigOpen(false);\n    loadAllBucketData();\n  };\n\n  const closeEnableVersioning = (refresh: boolean) => {\n    setEnableVersioningOpen(false);\n    if (refresh) {\n      loadAllBucketData();\n    }\n  };\n\n  let versioningStatus = versioningInfo?.status;\n  let versioningText = \"Unversioned (Default)\";\n  if (versioningStatus === \"Enabled\") {\n    versioningText = \"Versioned\";\n  } else if (versioningStatus === \"Suspended\") {\n    versioningText = \"Suspended\";\n  }\n\n  return (\n    <Fragment>\n      {enableEncryptionScreenOpen && (\n        <EnableBucketEncryption\n          open={enableEncryptionScreenOpen}\n          selectedBucket={bucketName}\n          encryptionEnabled={encryptionEnabled}\n          encryptionCfg={encryptionCfg}\n          closeModalAndRefresh={closeEnableBucketEncryption}\n        />\n      )}\n      {enableQuotaScreenOpen && (\n        <EnableQuota\n          open={enableQuotaScreenOpen}\n          selectedBucket={bucketName}\n          enabled={quotaEnabled}\n          cfg={quota}\n          closeModalAndRefresh={closeEnableBucketQuota}\n        />\n      )}\n      {accessPolicyScreenOpen && (\n        <SetAccessPolicy\n          bucketName={bucketName}\n          open={accessPolicyScreenOpen}\n          actualPolicy={accessPolicy}\n          actualDefinition={policyDefinition}\n          closeModalAndRefresh={closeSetAccessPolicy}\n        />\n      )}\n      {retentionConfigOpen && (\n        <SetRetentionConfig\n          bucketName={bucketName}\n          open={retentionConfigOpen}\n          closeModalAndRefresh={closeRetentionConfig}\n        />\n      )}\n      {enableVersioningOpen && (\n        <EnableVersioningModal\n          closeVersioningModalAndRefresh={closeEnableVersioning}\n          modalOpen={enableVersioningOpen}\n          selectedBucket={bucketName}\n          versioningInfo={versioningInfo}\n          objectLockingEnabled={!!hasObjectLocking}\n        />\n      )}\n\n      <SectionTitle separator sx={{ marginBottom: 15 }}>\n        Summary\n      </SectionTitle>\n      <Grid container>\n        <SecureComponent\n          scopes={[IAM_SCOPES.S3_GET_BUCKET_POLICY, IAM_SCOPES.S3_GET_ACTIONS]}\n          resource={bucketName}\n        >\n          <Grid item xs={12}>\n            <Box sx={twoColCssGridLayoutConfig}>\n              <Box sx={twoColCssGridLayoutConfig}>\n                <SecureComponent\n                  scopes={[\n                    IAM_SCOPES.S3_GET_BUCKET_POLICY,\n                    IAM_SCOPES.S3_GET_ACTIONS,\n                  ]}\n                  resource={bucketName}\n                >\n                  <EditablePropertyItem\n                    iamScopes={[\n                      IAM_SCOPES.S3_PUT_BUCKET_POLICY,\n                      IAM_SCOPES.S3_PUT_ACTIONS,\n                    ]}\n                    resourceName={bucketName}\n                    property={\"Access Policy:\"}\n                    value={accessPolicy.toLowerCase()}\n                    onEdit={() => {\n                      setAccessPolicyScreenOpen(true);\n                    }}\n                    isLoading={bucketLoading}\n                    helpTip={\n                      <Fragment>\n                        <strong>Private</strong> policy limits access to\n                        credentialled accounts with appropriate permissions\n                        <br />\n                        <strong>Public</strong> policy anyone will be able to\n                        upload, download and delete files from this Bucket once\n                        logged in\n                        <br />\n                        <strong>Custom</strong> policy can be written to define\n                        which accounts are authorized to access this Bucket\n                        <br />\n                        <br />\n                        To allow Bucket access without credentials, use the{\" \"}\n                        <a href={`/buckets/${bucketName}/admin/prefix`}>\n                          Anonymous\n                        </a>{\" \"}\n                        setting\n                      </Fragment>\n                    }\n                  />\n                </SecureComponent>\n\n                <SecureComponent\n                  scopes={[\n                    IAM_SCOPES.S3_GET_BUCKET_ENCRYPTION_CONFIGURATION,\n                    IAM_SCOPES.S3_GET_ACTIONS,\n                  ]}\n                  resource={bucketName}\n                >\n                  <EditablePropertyItem\n                    iamScopes={[\n                      IAM_SCOPES.S3_PUT_BUCKET_ENCRYPTION_CONFIGURATION,\n                      IAM_SCOPES.S3_PUT_ACTIONS,\n                    ]}\n                    resourceName={bucketName}\n                    property={\"Encryption:\"}\n                    value={encryptionEnabled ? \"Enabled\" : \"Disabled\"}\n                    onEdit={() => {\n                      setEnableEncryptionScreenOpen(true);\n                    }}\n                    isLoading={loadingEncryption}\n                    helpTip={\n                      <Fragment>\n                        MinIO supports enabling automatic{\" \"}\n                        <a\n                          href=\"https://min.io/docs/minio/kubernetes/upstream/administration/server-side-encryption/server-side-encryption-sse-kms.html\"\n                          target=\"blank\"\n                        >\n                          SSE-KMS\n                        </a>{\" \"}\n                        and{\" \"}\n                        <a\n                          href=\"https://min.io/docs/minio/kubernetes/upstream/administration/server-side-encryption/server-side-encryption-sse-s3.html\"\n                          target=\"blank\"\n                        >\n                          SSE-S3\n                        </a>{\" \"}\n                        encryption of all objects written to a bucket using a\n                        specific External Key (EK) stored on the external KMS.\n                      </Fragment>\n                    }\n                  />\n                </SecureComponent>\n\n                <SecureComponent\n                  scopes={[\n                    IAM_SCOPES.S3_GET_REPLICATION_CONFIGURATION,\n                    IAM_SCOPES.S3_GET_ACTIONS,\n                  ]}\n                  resource={bucketName}\n                >\n                  <ValuePair\n                    label={\"Replication:\"}\n                    value={\n                      <LabelWithIcon\n                        icon={\n                          replicationRules ? <EnabledIcon /> : <DisabledIcon />\n                        }\n                        label={\n                          <label className={\"muted\"}>\n                            {replicationRules ? \"Enabled\" : \"Disabled\"}\n                          </label>\n                        }\n                      />\n                    }\n                  />\n                </SecureComponent>\n\n                <SecureComponent\n                  scopes={[\n                    IAM_SCOPES.S3_GET_BUCKET_OBJECT_LOCK_CONFIGURATION,\n                    IAM_SCOPES.S3_GET_ACTIONS,\n                  ]}\n                  resource={bucketName}\n                >\n                  <ValuePair\n                    label={\"Object Locking:\"}\n                    value={\n                      <LabelWithIcon\n                        icon={\n                          hasObjectLocking ? <EnabledIcon /> : <DisabledIcon />\n                        }\n                        label={\n                          <label className={\"muted\"}>\n                            {hasObjectLocking ? \"Enabled\" : \"Disabled\"}\n                          </label>\n                        }\n                      />\n                    }\n                  />\n                </SecureComponent>\n                <Box>\n                  <ValuePair\n                    label={\"Tags:\"}\n                    value={<BucketTags bucketName={bucketName} />}\n                  />\n                </Box>\n                <EditablePropertyItem\n                  iamScopes={[IAM_SCOPES.ADMIN_SET_BUCKET_QUOTA]}\n                  resourceName={bucketName}\n                  property={\"Quota:\"}\n                  value={quotaEnabled ? \"Enabled\" : \"Disabled\"}\n                  onEdit={setBucketQuota}\n                  isLoading={loadingQuota}\n                  helpTip={\n                    <Fragment>\n                      Setting a{\" \"}\n                      <a\n                        href=\"https://min.io/docs/minio/linux/reference/minio-mc/mc-quota-set.html\"\n                        target=\"blank\"\n                      >\n                        quota\n                      </a>{\" \"}\n                      assigns a hard limit to a bucket beyond which MinIO does\n                      not allow writes.\n                    </Fragment>\n                  }\n                />\n              </Box>\n              <Box\n                sx={{\n                  display: \"grid\",\n                  gridTemplateColumns: \"1fr\",\n                  alignItems: \"flex-start\",\n                }}\n              >\n                <ReportedUsage bucketSize={`${bucketSize}`} />\n                {quotaEnabled && quota ? (\n                  <BucketQuotaSize quota={quota} />\n                ) : null}\n              </Box>\n            </Box>\n          </Grid>\n        </SecureComponent>\n\n        {distributedSetup && (\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_BUCKET_VERSIONING,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n          >\n            <Grid item xs={12} sx={{ marginTop: 5 }}>\n              <SectionTitle separator sx={{ marginBottom: 15 }}>\n                Versioning\n              </SectionTitle>\n\n              <Box sx={twoColCssGridLayoutConfig}>\n                <Box sx={twoColCssGridLayoutConfig}>\n                  <EditablePropertyItem\n                    iamScopes={[\n                      IAM_SCOPES.S3_PUT_BUCKET_VERSIONING,\n                      IAM_SCOPES.S3_PUT_ACTIONS,\n                    ]}\n                    resourceName={bucketName}\n                    property={\"Current Status:\"}\n                    value={\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          textDecorationStyle: \"initial\",\n                          placeItems: \"flex-start\",\n                          justifyItems: \"flex-start\",\n                          gap: 3,\n                        }}\n                      >\n                        <div> {versioningText}</div>\n                      </Box>\n                    }\n                    onEdit={setBucketVersioning}\n                    isLoading={loadingVersioning}\n                    disabled={hasObjectLocking}\n                  />\n\n                  {versioningInfo?.status === \"Enabled\" ? (\n                    <VersioningInfo versioningState={versioningInfo} />\n                  ) : null}\n                </Box>\n              </Box>\n            </Grid>\n          </SecureComponent>\n        )}\n\n        {hasObjectLocking && (\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_OBJECT_RETENTION,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n          >\n            <Grid item xs={12} sx={{ marginTop: 5 }}>\n              <SectionTitle separator sx={{ marginBottom: 15 }}>\n                Retention\n              </SectionTitle>\n\n              <Box sx={twoColCssGridLayoutConfig}>\n                <Box sx={twoColCssGridLayoutConfig}>\n                  <EditablePropertyItem\n                    iamScopes={[IAM_SCOPES.ADMIN_SET_BUCKET_QUOTA]}\n                    resourceName={bucketName}\n                    property={\"Retention:\"}\n                    value={retentionEnabled ? \"Enabled\" : \"Disabled\"}\n                    onEdit={() => {\n                      setRetentionConfigOpen(true);\n                    }}\n                    isLoading={loadingRetention}\n                    helpTip={\n                      <Fragment>\n                        MinIO{\" \"}\n                        <a\n                          target=\"blank\"\n                          href=\"https://min.io/docs/minio/macos/administration/object-management.html#object-retention\"\n                        >\n                          Object Locking\n                        </a>{\" \"}\n                        enforces Write-Once Read-Many (WORM) immutability to\n                        protect versioned objects from deletion.\n                      </Fragment>\n                    }\n                  />\n\n                  <ValuePair\n                    label={\"Mode:\"}\n                    value={\n                      <label\n                        className={\"muted\"}\n                        style={{ textTransform: \"capitalize\" }}\n                      >\n                        {retentionConfig && retentionConfig.mode\n                          ? retentionConfig.mode\n                          : \"-\"}\n                      </label>\n                    }\n                  />\n                  <ValuePair\n                    label={\"Validity:\"}\n                    value={\n                      <label\n                        className={\"muted\"}\n                        style={{ textTransform: \"capitalize\" }}\n                      >\n                        {retentionConfig && retentionConfig.validity}{\" \"}\n                        {retentionConfig &&\n                          (retentionConfig.validity === 1\n                            ? retentionConfig.unit?.slice(0, -1)\n                            : retentionConfig.unit)}\n                      </label>\n                    }\n                  />\n                </Box>\n              </Box>\n            </Grid>\n          </SecureComponent>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default BucketSummary;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box } from \"mds\";\n\ntype LabelWithIconProps = {\n  icon: React.ReactNode | null;\n  label: React.ReactNode | null;\n};\n\nconst LabelWithIcon = ({ icon = null, label = null }: LabelWithIconProps) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: 5,\n        marginTop: 3,\n      }}\n    >\n      <Box\n        sx={{\n          height: 16,\n          width: 16,\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        {icon}\n      </Box>\n      <Box>{label}</Box>\n    </Box>\n  );\n};\n\nexport default LabelWithIcon;\n"],"names":["_ref","_versioningState$excl","_versioningState$excl2","versioningState","_jsxs","Box","sx","display","flexDirection","gap","children","_jsx","fontWeight","excludeFolders","LabelWithIcon","icon","EnabledIcon","style","color","DisabledIcon","label","textDecoration","excludedPrefixes","length","justifyItems","placeItems","maxHeight","overflowY","map","it","prefix","disabled","onClick","restProps","IconButton","size","EditIcon","SecureAction","resourceName","iamScopes","secureCmpProps","SecureComponent","scopes","resource","errorProps","_ref2","isLoading","property","value","onEdit","helpTip","alignItems","justifyContent","ValuePair","HelpTip","placement","content","ActionLink","textTransform","EditActionButton","background","marginLeft","top","width","height","bucketSize","ReportedUsageFullIcon","flexFlow","fontSize","niceBytes","quota","HardBucketQuotaIcon","type","SetAccessPolicy","withSuspense","React","SetRetentionConfig","EnableBucketEncryption","EnableVersioningModal","BucketTags","EnableQuota","BucketSummary","_retentionConfig$unit","dispatch","useAppDispatch","params","useParams","loadingBucket","useSelector","selBucketDetailsLoading","bucketInfo","selBucketDetailsInfo","distributedSetup","selDistSet","encryptionCfg","setEncryptionCfg","useState","setBucketSize","hasObjectLocking","setHasObjectLocking","accessPolicyScreenOpen","setAccessPolicyScreenOpen","replicationRules","setReplicationRules","loadingObjectLocking","setLoadingLocking","loadingSize","setLoadingSize","bucketLoading","setBucketLoading","loadingEncryption","setLoadingEncryption","loadingVersioning","setLoadingVersioning","loadingQuota","setLoadingQuota","loadingReplication","setLoadingReplication","loadingRetention","setLoadingRetention","versioningInfo","setVersioningInfo","quotaEnabled","setQuotaEnabled","setQuota","encryptionEnabled","setEncryptionEnabled","retentionEnabled","setRetentionEnabled","retentionConfig","setRetentionConfig","retentionConfigOpen","setRetentionConfigOpen","enableEncryptionScreenOpen","setEnableEncryptionScreenOpen","enableQuotaScreenOpen","setEnableQuotaScreenOpen","enableVersioningOpen","setEnableVersioningOpen","useEffect","setHelpName","bucketName","accessPolicy","policyDefinition","access","definition","displayGetBucketObjectLockConfiguration","hasPermission","IAM_SCOPES","S3_GET_BUCKET_OBJECT_LOCK_CONFIGURATION","S3_GET_ACTIONS","displayGetBucketEncryptionConfiguration","S3_GET_BUCKET_ENCRYPTION_CONFIGURATION","displayGetBucketQuota","ADMIN_GET_BUCKET_QUOTA","api","buckets","getBucketEncryptionInfo","then","res","data","algorithm","catch","err","errorToHandler","error","errorMessage","getBucketVersioning","setErrorSnackMessage","getBucketQuota","getBucketObjectLockingStatus","object_locking_enabled","listBuckets","get","find","bucket","name","getBucketReplication","r","rules","getBucketRetentionConfig","loadAllBucketData","setBucketDetailsLoad","versioningStatus","status","versioningText","Fragment","open","selectedBucket","closeModalAndRefresh","closeEnableBucketEncryption","enabled","cfg","closeEnableBucketQuota","actualPolicy","actualDefinition","closeSetAccessPolicy","closeRetentionConfig","closeVersioningModalAndRefresh","refresh","modalOpen","objectLockingEnabled","SectionTitle","separator","marginBottom","Grid","container","S3_GET_BUCKET_POLICY","item","xs","twoColCssGridLayoutConfig","EditablePropertyItem","S3_PUT_BUCKET_POLICY","S3_PUT_ACTIONS","toLowerCase","href","S3_PUT_BUCKET_ENCRYPTION_CONFIGURATION","target","S3_GET_REPLICATION_CONFIGURATION","className","ADMIN_SET_BUCKET_QUOTA","setBucketQuota","gridTemplateColumns","ReportedUsage","BucketQuotaSize","S3_GET_BUCKET_VERSIONING","marginTop","S3_PUT_BUCKET_VERSIONING","textDecorationStyle","setBucketVersioning","VersioningInfo","S3_GET_OBJECT_RETENTION","mode","validity","unit","slice"],"sourceRoot":""}