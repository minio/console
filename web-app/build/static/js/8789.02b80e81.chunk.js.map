{"version":3,"file":"static/js/8789.02b80e81.chunk.js","mappings":"8IAiCA,QAfA,SACEA,GAEC,IADDC,EAAmCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAUtC,OARA,SAA+BG,GAC7B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACN,SAAUA,EAASO,UAC3BF,EAAAA,EAAAA,KAACN,EAAgB,IAAMK,KAG7B,CAGF,C,6OC6BA,MAAMI,GAAcC,EAAAA,EAAAA,GAAaC,EAAAA,MAAW,IAAM,mCAC5CC,GAAYF,EAAAA,EAAAA,GAChBC,EAAAA,MAAW,IAAM,mCA8UnB,EA3UeE,KACb,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEVC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAkB,IAC/CC,EAASC,IAAaF,EAAAA,EAAAA,WAAkB,IACxCG,EAASC,IAAcJ,EAAAA,EAAAA,UAAgB,KACvCK,EAAQC,IAAaN,EAAAA,EAAAA,UAAiB,KACtCO,EAAYC,IAAiBR,EAAAA,EAAAA,WAAkB,IAC/CS,EAAeC,IAAoBV,EAAAA,EAAAA,UAAmB,KAE7DW,EAAAA,EAAAA,YAAU,KACRT,GAAU,EAAK,GACd,KAEHS,EAAAA,EAAAA,YAAU,KACRT,GAAU,EAAK,GACd,KAEHS,EAAAA,EAAAA,YAAU,KACRjB,GAASkB,EAAAA,EAAAA,IAAY,UAAU,GAE9B,IAEH,MAAMC,GAAgBC,EAAAA,EAAAA,GACpBC,EAAAA,GACAC,EAAAA,IAGIC,GAAcH,EAAAA,EAAAA,GAClBC,EAAAA,GACAG,EAAAA,IAGIC,GAAWL,EAAAA,EAAAA,GAAcC,EAAAA,GAAqBK,EAAAA,IAE9CC,GAAcP,EAAAA,EAAAA,GAClBC,EAAAA,GACAO,EAAAA,IACA,IAqBFX,EAAAA,EAAAA,YAAU,KACR,GAAIV,EACF,GAAIY,EAAe,CACIU,MACnBC,EAAAA,EAAIC,OACDC,aACAC,MAAMC,IACL,IAAIC,EAAsB,GACtBD,EAAIE,KAAKL,SACXI,EAAYD,EAAIE,KAAKL,OAAOM,KAAKC,EAAAA,KAEnC5B,EAAWyB,GACX3B,GAAU,EAAM,IAEjB+B,OAAOC,IACNxC,GAASyC,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeF,EAAIG,SACjDnC,GAAU,EAAM,GAChB,EAENqB,EACF,MACErB,GAAU,EAEd,GACC,CAACD,EAASP,EAAUmB,IAEvB,MAQMyB,EAAkBnC,EAAQE,QAAQkC,GACtCA,EAAYC,SAASnC,KAGjBoC,EAAcC,IAClB9C,EAAS,GAAG+C,EAAAA,GAAUC,UAAUC,mBAAmBH,KAAS,EAGxDI,EAAe,CACnB,CACEC,KAAM,OACNC,QAASP,EACTQ,sBAAuBA,KAAO9B,GAEhC,CACE4B,KAAM,OACNC,QAASP,EACTQ,sBAAuBA,KAAO9B,IAIlC,OACE+B,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAA/D,SAAA,CACNU,IACCZ,EAAAA,EAAAA,KAACG,EAAW,CACVS,WAAYA,EACZsD,eAAgB3C,EAChB4C,2BAnC4BC,IAClCvD,GAAc,GACdW,EAAiB,IACb4C,GACFpD,GAAU,EACZ,IAiCGK,IACCrB,EAAAA,EAAAA,KAACM,EAAS,CACR+D,KAAMhD,EACN6C,eAAgB3C,EAChB+C,aAAc,KACdC,qBAAsBA,KACpBjD,GAAc,EAAM,KAI1BtB,EAAAA,EAAAA,KAACwE,EAAAA,EAAiB,CAACC,MAAO,SAAUC,SAAS1E,EAAAA,EAAAA,KAAC2E,EAAAA,EAAQ,OAEtD3E,EAAAA,EAAAA,KAAC4E,EAAAA,IAAU,CAAA1E,UACT8D,EAAAA,EAAAA,MAACa,EAAAA,IAAI,CAACC,WAAS,EAAA5E,SAAA,EACb8D,EAAAA,EAAAA,MAACa,EAAAA,IAAI,CAACE,MAAI,EAACC,GAAI,GAAIC,GAAIC,EAAAA,GAAYA,YAAYhF,SAAA,EAC7CF,EAAAA,EAAAA,KAACmF,EAAAA,EAAe,CACdC,SAAUvD,EAAAA,GACVwD,OAAQvD,EAAAA,GACRwD,WAAY,CAAEC,UAAU,GAAOrF,UAE/BF,EAAAA,EAAAA,KAACwF,EAAAA,EAAS,CACRC,YAAa,gBACbC,SAAUtE,EACVuE,MAAOxE,EACP8D,GAAI,CAAEW,SAAU,UAGpB5B,EAAAA,EAAAA,MAAC6B,EAAAA,IAAG,CACFZ,GAAI,CACFa,QAAS,QACT5F,SAAA,EAEFF,EAAAA,EAAAA,KAACmF,EAAAA,EAAe,CACdC,SAAUvD,EAAAA,GACVwD,OAAQjD,EAAAA,GACR2D,UAAQ,EACRT,WAAY,CAAEC,UAAU,GAAOrF,UAE/BF,EAAAA,EAAAA,KAACgG,EAAAA,EAAc,CACbC,QACE1E,EAAc1B,OAAS,EACnB,2DACAsC,EACE,iBACA+D,EAAAA,EAAAA,IACE9D,EAAAA,GACA,4BAETlC,UAEDF,EAAAA,EAAAA,KAACmG,EAAAA,IAAM,CACLC,GAAI,gBACJtC,QAASA,KACPxC,GAAc,EAAK,EAErBmD,MAAO,gBACP4B,MAAMrG,EAAAA,EAAAA,KAACsG,EAAAA,IAAe,IACtBf,SAAUhE,EAAc1B,OAAS,IAAMsC,EACvCoE,QAAS,iBAIfvG,EAAAA,EAAAA,KAACmF,EAAAA,EAAe,CACdC,SAAUvD,EAAAA,GACVwD,OAAQrD,EAAAA,GACR+D,UAAQ,EACRT,WAAY,CAAEC,UAAU,GAAOrF,UAE/BF,EAAAA,EAAAA,KAACgG,EAAAA,EAAc,CACbC,QAC2B,IAAzB1E,EAAc1B,OACV,0BACAoC,EACE,mBACAiE,EAAAA,EAAAA,IACEhE,EAAAA,GACA,iBAEThC,UAEDF,EAAAA,EAAAA,KAACmG,EAAAA,IAAM,CACLC,GAAG,yBACHtC,QAASA,KACPjD,GAAc,EAAK,EAErB4D,MAAO,kBACP4B,MAAMrG,EAAAA,EAAAA,KAACwG,EAAAA,IAAU,IACjBD,QAAQ,YACRhB,SAAmC,IAAzBhE,EAAc1B,SAAiBoC,SAI/CjC,EAAAA,EAAAA,KAACmF,EAAAA,EAAe,CACdC,SAAUvD,EAAAA,GACVwD,OAAQoB,EAAAA,GACRV,UAAQ,EACRT,WAAY,CAAEC,UAAU,GAAOrF,UAE/BF,EAAAA,EAAAA,KAACgG,EAAAA,EAAc,CAACC,QAAS,eAAe/F,UACtCF,EAAAA,EAAAA,KAACmG,EAAAA,IAAM,CACLC,GAAI,eACJ3B,MAAO,eACP8B,QAAQ,aACRF,MAAMrG,EAAAA,EAAAA,KAAC0G,EAAAA,IAAO,IACd5C,QAASA,KACPpD,EAAS,GAAG+C,EAAAA,GAAUkD,aAAa,cAO9C5F,IAAWf,EAAAA,EAAAA,KAAC4G,EAAAA,IAAW,KACtB7F,IACAiD,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAA/D,SAAA,CACNe,EAAQpB,OAAS,IAChBmE,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAA/D,SAAA,EACPF,EAAAA,EAAAA,KAAC6E,EAAAA,IAAI,CAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,CAAE4B,aAAc,IAAK3G,UAC1CF,EAAAA,EAAAA,KAACmF,EAAAA,EAAe,CACdC,SAAUvD,EAAAA,GACVwD,OAAQvD,EAAAA,GACRwD,WAAY,CAAEC,UAAU,GAAOrF,UAE/BF,EAAAA,EAAAA,KAAC8G,EAAAA,IAAS,CACRC,YAAanD,EACboD,QAAS,CAAC,CAAEvC,MAAO,SACnBzD,UAAWD,EACXkG,cAAe1F,EACf2F,SACEnF,GAAeE,EAnNbkF,IACxB,MAAQC,QAAQ,MAAEzB,EAAQ,GAAE,QAAE0B,GAAU,GAAU,CAAC,GAAMF,EAEzD,IAAIG,EAAqB,IAAI/F,GAY7B,OAVI8F,EAEFC,EAASC,KAAK5B,GAGd2B,EAAWA,EAASnG,QAAQqG,GAAYA,IAAY7B,IAGtDnE,EAAiB8F,GAEVA,CAAQ,OAoMoDxH,EAE/CmB,QAASmC,EACTqE,WAAW,SACXC,QAAQ,UAId1H,EAAAA,EAAAA,KAAC6E,EAAAA,IAAI,CAACE,MAAI,EAACC,GAAI,GAAG9E,UAChBF,EAAAA,EAAAA,KAAC2H,EAAAA,IAAO,CACNC,MAAO,SACPC,eAAe7H,EAAAA,EAAAA,KAAC8H,EAAAA,IAAU,IAC1BC,MACE/D,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAA/D,SAAA,CAAC,mMAKRF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,4BACoB,KAC1BA,EAAAA,EAAAA,KAAA,KACEgI,KAAK,gHACLZ,OAAO,SACPa,IAAI,WAAU/H,SACf,kBAEG,cAQI,IAAnBe,EAAQpB,SACPG,EAAAA,EAAAA,KAAC6E,EAAAA,IAAI,CAACC,WAAS,EAAA5E,UACbF,EAAAA,EAAAA,KAAC6E,EAAAA,IAAI,CAACE,MAAI,EAACC,GAAI,EAAE9E,UACfF,EAAAA,EAAAA,KAAC2H,EAAAA,IAAO,CACNC,MAAO,SACPC,eAAe7H,EAAAA,EAAAA,KAACkI,EAAAA,IAAS,IACzBH,MACE/D,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAA/D,SAAA,CAAC,mMAKR8D,EAAAA,EAAAA,MAACmB,EAAAA,EAAe,CACdC,SAAUvD,EAAAA,GACVwD,OAAQoB,EAAAA,GACRV,UAAQ,EAAA7F,SAAA,EAERF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,kBACU,KAChBA,EAAAA,EAAAA,KAACmI,EAAAA,IAAU,CACTrE,QAASA,KACPpD,EAAS,GAAG+C,EAAAA,GAAUkD,aAAa,EACnCzG,SACH,mBAEY,0BAa1B,C,8DClXR,MAAMkI,EAAYA,CAACC,EAASC,KACjC,GAAID,EAAEE,WAAaD,EAAEC,UAAW,CAC9B,GAAIF,EAAEE,UAAYD,EAAEC,UAClB,OAAO,EAET,GAAIF,EAAEE,UAAYD,EAAEC,UAClB,OAAQ,CAEZ,CAEA,OAAO,CAAC,EAGGC,EAAaA,CAACH,EAAWC,IAChCD,EAAEI,KAAQH,EAAEG,KACP,EAELJ,EAAEI,KAAQH,EAAEG,MACN,EAGH,EAGI3F,EAAaA,CAACuF,EAAWC,IAChCD,EAAIC,EACC,EAELD,EAAIC,GACE,EAGH,EAGII,EAAoBA,CAC/BL,EACAC,IAEID,EAAEM,OAASL,EAAEK,OACR,EAELN,EAAEM,OAASL,EAAEK,QACP,EAGH,C","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/Groups/Groups.tsx","utils/sortFunctions.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null,\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  AddIcon,\n  Button,\n  DeleteIcon,\n  GroupsIcon,\n  HelpBox,\n  IAMPoliciesIcon,\n  PageLayout,\n  UsersIcon,\n  DataTable,\n  Grid,\n  Box,\n  ProgressBar,\n  ActionLink,\n} from \"mds\";\n\nimport { api } from \"api\";\nimport { stringSort } from \"../../../utils/sortFunctions\";\nimport { actionsTray } from \"../Common/FormComponents/common/styleLibrary\";\nimport {\n  applyPolicyPermissions,\n  CONSOLE_UI_RESOURCE,\n  createGroupPermissions,\n  deleteGroupPermissions,\n  displayGroupsPermissions,\n  getGroupPermissions,\n  IAM_PAGES,\n  permissionTooltipHelper,\n} from \"../../../common/SecureComponent/permissions\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../common/SecureComponent\";\nimport { errorToHandler } from \"../../../api/errors\";\nimport withSuspense from \"../Common/Components/withSuspense\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\nimport SearchBox from \"../Common/SearchBox\";\n\nconst DeleteGroup = withSuspense(React.lazy(() => import(\"./DeleteGroup\")));\nconst SetPolicy = withSuspense(\n  React.lazy(() => import(\"../Policies/SetPolicy\")),\n);\n\nconst Groups = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [records, setRecords] = useState<any[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n  const [policyOpen, setPolicyOpen] = useState<boolean>(false);\n  const [checkedGroups, setCheckedGroups] = useState<string[]>([]);\n\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"groups\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const displayGroups = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    displayGroupsPermissions,\n  );\n\n  const deleteGroup = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    deleteGroupPermissions,\n  );\n\n  const getGroup = hasPermission(CONSOLE_UI_RESOURCE, getGroupPermissions);\n\n  const applyPolicy = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    applyPolicyPermissions,\n    true,\n  );\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target: { value = \"\", checked = false } = {} } = e;\n\n    let elements: string[] = [...checkedGroups]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n\n    setCheckedGroups(elements);\n\n    return elements;\n  };\n\n  useEffect(() => {\n    if (loading) {\n      if (displayGroups) {\n        const fetchRecords = () => {\n          api.groups\n            .listGroups()\n            .then((res) => {\n              let resGroups: string[] = [];\n              if (res.data.groups) {\n                resGroups = res.data.groups.sort(stringSort);\n              }\n              setRecords(resGroups);\n              isLoading(false);\n            })\n            .catch((err) => {\n              dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n              isLoading(false);\n            });\n        };\n        fetchRecords();\n      } else {\n        isLoading(false);\n      }\n    }\n  }, [loading, dispatch, displayGroups]);\n\n  const closeDeleteModalAndRefresh = (refresh: boolean) => {\n    setDeleteOpen(false);\n    setCheckedGroups([]);\n    if (refresh) {\n      isLoading(true);\n    }\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.includes(filter),\n  );\n\n  const viewAction = (group: any) => {\n    navigate(`${IAM_PAGES.GROUPS}/${encodeURIComponent(group)}`);\n  };\n\n  const tableActions = [\n    {\n      type: \"view\",\n      onClick: viewAction,\n      disableButtonFunction: () => !getGroup,\n    },\n    {\n      type: \"edit\",\n      onClick: viewAction,\n      disableButtonFunction: () => !getGroup,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeleteGroup\n          deleteOpen={deleteOpen}\n          selectedGroups={checkedGroups}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      {policyOpen && (\n        <SetPolicy\n          open={policyOpen}\n          selectedGroups={checkedGroups}\n          selectedUser={null}\n          closeModalAndRefresh={() => {\n            setPolicyOpen(false);\n          }}\n        />\n      )}\n      <PageHeaderWrapper label={\"Groups\"} actions={<HelpMenu />} />\n\n      <PageLayout>\n        <Grid container>\n          <Grid item xs={12} sx={actionsTray.actionsTray}>\n            <SecureComponent\n              resource={CONSOLE_UI_RESOURCE}\n              scopes={displayGroupsPermissions}\n              errorProps={{ disabled: true }}\n            >\n              <SearchBox\n                placeholder={\"Search Groups\"}\n                onChange={setFilter}\n                value={filter}\n                sx={{ maxWidth: 380 }}\n              />\n            </SecureComponent>\n            <Box\n              sx={{\n                display: \"flex\",\n              }}\n            >\n              <SecureComponent\n                resource={CONSOLE_UI_RESOURCE}\n                scopes={applyPolicyPermissions}\n                matchAll\n                errorProps={{ disabled: true }}\n              >\n                <TooltipWrapper\n                  tooltip={\n                    checkedGroups.length < 1\n                      ? \"Please select Groups on which you want to apply Policies\"\n                      : applyPolicy\n                        ? \"Select Policy\"\n                        : permissionTooltipHelper(\n                            applyPolicyPermissions,\n                            \"apply policies to Groups\",\n                          )\n                  }\n                >\n                  <Button\n                    id={\"assign-policy\"}\n                    onClick={() => {\n                      setPolicyOpen(true);\n                    }}\n                    label={\"Assign Policy\"}\n                    icon={<IAMPoliciesIcon />}\n                    disabled={checkedGroups.length < 1 || !applyPolicy}\n                    variant={\"regular\"}\n                  />\n                </TooltipWrapper>\n              </SecureComponent>\n              <SecureComponent\n                resource={CONSOLE_UI_RESOURCE}\n                scopes={deleteGroupPermissions}\n                matchAll\n                errorProps={{ disabled: true }}\n              >\n                <TooltipWrapper\n                  tooltip={\n                    checkedGroups.length === 0\n                      ? \"Select Groups to delete\"\n                      : getGroup\n                        ? \"Delete Selected\"\n                        : permissionTooltipHelper(\n                            getGroupPermissions,\n                            \"delete Groups\",\n                          )\n                  }\n                >\n                  <Button\n                    id=\"delete-selected-groups\"\n                    onClick={() => {\n                      setDeleteOpen(true);\n                    }}\n                    label={\"Delete Selected\"}\n                    icon={<DeleteIcon />}\n                    variant=\"secondary\"\n                    disabled={checkedGroups.length === 0 || !getGroup}\n                  />\n                </TooltipWrapper>\n              </SecureComponent>\n              <SecureComponent\n                resource={CONSOLE_UI_RESOURCE}\n                scopes={createGroupPermissions}\n                matchAll\n                errorProps={{ disabled: true }}\n              >\n                <TooltipWrapper tooltip={\"Create Group\"}>\n                  <Button\n                    id={\"create-group\"}\n                    label={\"Create Group\"}\n                    variant=\"callAction\"\n                    icon={<AddIcon />}\n                    onClick={() => {\n                      navigate(`${IAM_PAGES.GROUPS_ADD}`);\n                    }}\n                  />\n                </TooltipWrapper>\n              </SecureComponent>\n            </Box>\n          </Grid>\n          {loading && <ProgressBar />}\n          {!loading && (\n            <Fragment>\n              {records.length > 0 && (\n                <Fragment>\n                  <Grid item xs={12} sx={{ marginBottom: 15 }}>\n                    <SecureComponent\n                      resource={CONSOLE_UI_RESOURCE}\n                      scopes={displayGroupsPermissions}\n                      errorProps={{ disabled: true }}\n                    >\n                      <DataTable\n                        itemActions={tableActions}\n                        columns={[{ label: \"Name\" }]}\n                        isLoading={loading}\n                        selectedItems={checkedGroups}\n                        onSelect={\n                          deleteGroup || getGroup ? selectionChanged : undefined\n                        }\n                        records={filteredRecords}\n                        entityName=\"Groups\"\n                        idField=\"\"\n                      />\n                    </SecureComponent>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <HelpBox\n                      title={\"Groups\"}\n                      iconComponent={<GroupsIcon />}\n                      help={\n                        <Fragment>\n                          A group can have one attached IAM policy, where all\n                          users with membership in that group inherit that\n                          policy. Groups support more simplified management of\n                          user permissions on the MinIO Tenant.\n                          <br />\n                          <br />\n                          You can learn more at our{\" \"}\n                          <a\n                            href=\"https://min.io/docs/minio/linux/administration/identity-access-management/minio-group-management.html?ref=con\"\n                            target=\"_blank\"\n                            rel=\"noopener\"\n                          >\n                            documentation\n                          </a>\n                          .\n                        </Fragment>\n                      }\n                    />\n                  </Grid>\n                </Fragment>\n              )}\n              {records.length === 0 && (\n                <Grid container>\n                  <Grid item xs={8}>\n                    <HelpBox\n                      title={\"Groups\"}\n                      iconComponent={<UsersIcon />}\n                      help={\n                        <Fragment>\n                          A group can have one attached IAM policy, where all\n                          users with membership in that group inherit that\n                          policy. Groups support more simplified management of\n                          user permissions on the MinIO Tenant.\n                          <SecureComponent\n                            resource={CONSOLE_UI_RESOURCE}\n                            scopes={createGroupPermissions}\n                            matchAll\n                          >\n                            <br />\n                            <br />\n                            To get started,{\" \"}\n                            <ActionLink\n                              onClick={() => {\n                                navigate(`${IAM_PAGES.GROUPS_ADD}`);\n                              }}\n                            >\n                              Create a Group\n                            </ActionLink>\n                            .\n                          </SecureComponent>\n                        </Fragment>\n                      }\n                    />\n                  </Grid>\n                </Grid>\n              )}\n            </Fragment>\n          )}\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default Groups;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Policy, User } from \"api/consoleApi\";\n\ninterface policyDetailsInterface {\n  policy: string;\n}\n\nexport const usersSort = (a: User, b: User) => {\n  if (a.accessKey && b.accessKey) {\n    if (a.accessKey > b.accessKey) {\n      return 1;\n    }\n    if (a.accessKey < b.accessKey) {\n      return -1;\n    }\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const policySort = (a: Policy, b: Policy) => {\n  if (a.name! > b.name!) {\n    return 1;\n  }\n  if (a.name! < b.name!) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const stringSort = (a: string, b: string) => {\n  if (a > b) {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const policyDetailsSort = (\n  a: policyDetailsInterface,\n  b: policyDetailsInterface,\n) => {\n  if (a.policy > b.policy) {\n    return 1;\n  }\n  if (a.policy < b.policy) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n"],"names":["WrappedComponent","fallback","arguments","length","undefined","props","_jsx","Suspense","children","DeleteGroup","withSuspense","React","SetPolicy","Groups","dispatch","useAppDispatch","navigate","useNavigate","deleteOpen","setDeleteOpen","useState","loading","isLoading","records","setRecords","filter","setFilter","policyOpen","setPolicyOpen","checkedGroups","setCheckedGroups","useEffect","setHelpName","displayGroups","hasPermission","CONSOLE_UI_RESOURCE","displayGroupsPermissions","deleteGroup","deleteGroupPermissions","getGroup","getGroupPermissions","applyPolicy","applyPolicyPermissions","fetchRecords","api","groups","listGroups","then","res","resGroups","data","sort","stringSort","catch","err","setErrorSnackMessage","errorToHandler","error","filteredRecords","elementItem","includes","viewAction","group","IAM_PAGES","GROUPS","encodeURIComponent","tableActions","type","onClick","disableButtonFunction","_jsxs","Fragment","selectedGroups","closeDeleteModalAndRefresh","refresh","open","selectedUser","closeModalAndRefresh","PageHeaderWrapper","label","actions","HelpMenu","PageLayout","Grid","container","item","xs","sx","actionsTray","SecureComponent","resource","scopes","errorProps","disabled","SearchBox","placeholder","onChange","value","maxWidth","Box","display","matchAll","TooltipWrapper","tooltip","permissionTooltipHelper","Button","id","icon","IAMPoliciesIcon","variant","DeleteIcon","createGroupPermissions","AddIcon","GROUPS_ADD","ProgressBar","marginBottom","DataTable","itemActions","columns","selectedItems","onSelect","e","target","checked","elements","push","element","entityName","idField","HelpBox","title","iconComponent","GroupsIcon","help","href","rel","UsersIcon","ActionLink","usersSort","a","b","accessKey","policySort","name","policyDetailsSort","policy"],"sourceRoot":""}