{"version":3,"file":"static/js/2033.a048316b.chunk.js","mappings":"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AEf,CACET,KAAM,UACNhC,MAAO,UACPuC,QAAS,uDACTC,KAAM,SACNC,YAAa,0BAEZJ,GAEL,CAAClB,GAAa,CACZ,CACEa,KAAM,MACNM,UAAU,EACVtC,MAAO,MACPuC,QACE,sEACFC,KAAM,OAER,CACER,KAAM,WACNhC,MAAO,WACPuC,QAAS,4BACTC,KAAM,SACNC,YAAa,kBAEf,CACET,KAAM,gBACNhC,MAAO,gBACPuC,QAAS,qBACTC,KAAM,SACNC,YAAa,uBAEf,CACET,KAAM,cACNhC,MAAO,cACPuC,QAAS,6BACTC,KAAM,SACNC,YAAa,qBAEf,CACET,KAAM,YACNhC,MAAO,YACPuC,QACE,yEACFC,KAAM,UAER,CACER,KAAM,UACNhC,MAAO,UACPuC,QACE,0EACFC,KAAM,UAER,CACER,KAAM,UACNhC,MAAO,UACPuC,QACE,mEACFC,KAAM,UAER,CACER,KAAM,WACNhC,MAAO,WACPuC,QACE,yGACFC,KAAM,UAER,CACER,KAAM,eACNhC,MAAO,eACPuC,QACE,kEACFC,KAAM,UAER,CACER,KAAM,gBACNhC,MAAO,gBACPuC,QAAS,4DACTC,KAAM,SACNC,YAAa,0BAEZJ,GAEL,CAAChB,GAAc,CACb,CACEW,KAAM,UACNM,UAAU,EACVtC,MAAO,UACPuC,QAAS,+CACTC,KAAM,UACNC,YAAa,iBAEf,CACET,KAAM,MACNM,UAAU,EACVtC,MAAO,MACPuC,QAAS,wDACTC,KAAM,SACNC,YAAa,aAEf,CACET,KAAM,WACNhC,MAAO,WACPuC,QAAS,wBACTC,KAAM,SACNC,YAAa,qBAEZJ,GAEL,CAACjB,GAAa,CACZ,CACEY,KAAM,SACNM,UAAU,EACVtC,MAAO,SACPuC,QAAS,mDACTC,KAAM,MACNC,YAAa,iBAEf,CACET,KAAM,QACNM,UAAU,EACVtC,MAAO,QACPuC,QAAS,oCACTC,KAAM,SACNC,YAAa,eAEf,CACET,KAAM,WACNhC,MAAO,WACPuC,QAAS,gBACTC,KAAM,SACNC,YAAa,kBAEf,CACET,KAAM,WACNhC,MAAO,WACPuC,QAAS,gBACTC,KAAM,SACNC,YAAa,kBAEf,CACET,KAAM,MACNhC,MAAO,MACPuC,QAAS,uDACTC,KAAM,SACNC,YAAa,aAEf,CACET,KAAM,sBACNhC,MAAO,sBACPuC,QAAS,sDACTC,KAAM,WACNC,YAAa,6BAEf,CACET,KAAM,qBACNhC,MAAO,qBACPuC,QAAS,qDACTC,KAAM,WACNC,YAAa,+BAEZJ,GAEL,CAACf,GAAa,CACZ,CACEU,KAAM,UACNM,UAAU,EACVtC,MAAO,UACPuC,QAAS,0CACTC,KAAM,UACNC,YAAa,iBAEf,CACET,KAAM,UACNM,UAAU,EACVtC,MAAO,UACPuC,QAAS,4BACTC,KAAM,SACNC,YAAa,sBAEf,CACET,KAAM,WACNhC,MAAO,WACPuC,QAAS,gBACTC,KAAM,SACNC,YAAa,uBAEf,CACET,KAAM,WACNhC,MAAO,WACPuC,QAAS,gBACTC,KAAM,SACNC,YAAa,uBAEf,CACET,KAAM,QACNhC,MAAO,QACPuC,QAAS,aACTC,KAAM,SACNC,YAAa,oBAEf,CACET,KAAM,MACNhC,MAAO,MACPuC,QAAS,4BACTC,KAAM,UAER,CACER,KAAM,kBACNhC,MAAO,kBACPuC,QACE,mEACFC,KAAM,UAER,CACER,KAAM,gBACNhC,MAAO,gBACPuC,QAAS,gEACTC,KAAM,WACNC,YAAa,uBAEf,CACET,KAAM,YACNhC,MAAO,YACPuC,QAAS,2CACTC,KAAM,UAER,CACER,KAAM,kBACNhC,MAAO,kBACPuC,QAAS,6CACTC,KAAM,UAER,CACER,KAAM,mCACNhC,MAAO,uCACPuC,QAAS,yDACTC,KAAM,SACNC,YAAa,mCAEf,CACET,KAAM,uBACNhC,MAAO,uBACPuC,QAAS,uCACTC,KAAM,SACNC,YAAa,8BAEf,CACET,KAAM,iBACNhC,MAAO,iBACPuC,QAAS,sDACTC,KAAM,SACNC,YAAa,wBAEf,CACET,KAAM,cACNhC,MAAO,cACPuC,QAAS,iCACTC,KAAM,SACNC,YAAa,qBAEf,CACET,KAAM,aACNhC,MAAO,aACPuC,QAAS,8CACTC,KAAM,SACNC,YAAa,uBAEZJ,GAEL,CAACd,GAAsB,CACrB,CACES,KAAM,MACNM,UAAU,EACVtC,MAAO,MACPuC,QACE,oEACFC,KAAM,MACNC,YAAa,aAEf,CACET,KAAM,QACNM,UAAU,EACVtC,MAAO,QACPuC,QACE,oEACFC,KAAM,SACNC,YAAa,eAEf,CACET,KAAM,SACNM,UAAU,EACVtC,MAAO,SACPuC,QACE,gIACFC,KAAM,OACNC,YAAa,mBAEZJ,GAEL,CAACb,GAAiB,CAChB,CACEQ,KAAM,WACNM,UAAU,EACVtC,MAAO,WACPuC,QACE,kEACFC,KAAM,MACNC,YAAa,kBAEf,CACET,KAAM,aACNhC,MAAO,aACPuC,QAAS,2CACTC,KAAM,SACNC,YAAa,uBAEZJ,GAEL,CAACZ,GAAY,CACX,CACEO,KAAM,eACNM,UAAU,EACVtC,MAAO,eACPuC,QAAS,2CACTC,KAAM,UACNC,YAAa,sBAEf,CACET,KAAM,QACNM,UAAU,EACVtC,MAAO,QACPuC,QAAS,YACTC,KAAM,SACNC,YAAa,eAEf,CACET,KAAM,MACNhC,MAAO,MACPuC,QAAS,4BACTC,KAAM,UAER,CACER,KAAM,kBACNhC,MAAO,kBACPuC,QACE,mEACFC,KAAM,aAELH,IAIDU,EAA6C,CACjDC,QAAS,iBACTC,KAAM,cACNC,MAAO,eACPC,KAAM,cACNC,KAAM,cACNC,IAAK,aACLC,MAAO,eACPC,WAAY,kBACZC,cAAe,uBACfC,MAAO,gBAGIC,EAA4BC,GAChCZ,EAAmBY,E","sources":["screens/Console/Account/NotificationEndpointTypeSelectorHelpBox.tsx","screens/Console/EventDestinations/DestinationButton.tsx","screens/Console/EventDestinations/EventTypeSelector.tsx","screens/Console/EventDestinations/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\n\nimport { HelpBox, LambdaNotificationsIcon, Box } from \"mds\";\n\nconst NotificationEndpointTypeSelectorHelpBox = () => {\n  return (\n    <HelpBox\n      iconComponent={<LambdaNotificationsIcon />}\n      title={\"What are Event Destinations?\"}\n      help={\n        <Box sx={{ paddingTop: \"20px\" }}>\n          MinIO bucket notifications allow administrators to send notifications\n          to supported external services on certain object or bucket events.\n          MinIO supports bucket and object-level S3 events similar to the Amazon\n          S3 Event Notifications.\n        </Box>\n      }\n    />\n  );\n};\n\nexport default NotificationEndpointTypeSelectorHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\n\ninterface IDestinationButton {\n  destinationType: string;\n  srcImage: string;\n  title: string;\n}\n\nconst DestinationButtonBase = styled.button(({ theme }) => ({\n  background: get(theme, \"boxBackground\", \"#FFF\"),\n  border: `${get(theme, \"borderColor\", \"#E2E2E2\")} 1px solid`,\n  borderRadius: 5,\n  width: 250,\n  height: 80,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"start\",\n  marginBottom: 16,\n  marginRight: 8,\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  \"&:hover\": {\n    backgroundColor: get(theme, \"buttons.regular.hover.background\", \"#ebebeb\"),\n  },\n  \"& .imageContainer\": {\n    width: 80,\n    \"& .logoButton\": {\n      maxWidth: 46,\n      maxHeight: 46,\n      filter: \"drop-shadow(1px 1px 8px #fff)\",\n    },\n  },\n  \"& .lambdaNotifTitle\": {\n    color: get(theme, \"buttons.callAction.enabled.background\", \"#07193E\"),\n    fontSize: 16,\n    fontFamily: \"Inter,sans-serif\",\n    paddingLeft: 18,\n    fontWeight: \"bold\",\n  },\n}));\n\nconst DestinationButton = ({\n  destinationType,\n  srcImage,\n  title,\n}: IDestinationButton) => {\n  const navigate = useNavigate();\n\n  return (\n    <DestinationButtonBase\n      onClick={() => {\n        navigate(`${IAM_PAGES.EVENT_DESTINATIONS_ADD}/${destinationType}`);\n      }}\n    >\n      <span className={\"imageContainer\"}>\n        <img src={srcImage} className={\"logoButton\"} alt={title} />\n      </span>\n      <span className={\"lambdaNotifTitle\"}>{title}</span>\n    </DestinationButtonBase>\n  );\n};\n\nexport default DestinationButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BackLink, Box, FormLayout, PageLayout } from \"mds\";\nimport { destinationList, DestType } from \"./utils\";\nimport { typesSelection } from \"../Common/FormComponents/common/styleLibrary\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport NotificationEndpointTypeSelectorHelpBox from \"../Account/NotificationEndpointTypeSelectorHelpBox\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport DestinationButton from \"./DestinationButton\";\n\nimport HelpMenu from \"../HelpMenu\";\nimport { useAppDispatch } from \"../../../store\";\nimport { setHelpName } from \"../../../systemSlice\";\n\nconst withLogos = destinationList.filter((elService) => elService.logo !== \"\");\nconst database = withLogos.filter(\n  (elService) => elService.category === DestType.DB,\n);\nconst queue = withLogos.filter(\n  (elService) => elService.category === DestType.Queue,\n);\nconst functions = withLogos.filter(\n  (elService) => elService.category === DestType.Func,\n);\n\nconst EventTypeSelector = () => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setHelpName(\"notification_type_selector\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <Fragment>\n            <BackLink\n              label={\"Event Destinations\"}\n              onClick={() => navigate(IAM_PAGES.EVENT_DESTINATIONS)}\n            />\n          </Fragment>\n        }\n        actions={<HelpMenu />}\n      />\n      <PageLayout>\n        <FormLayout helpBox={<NotificationEndpointTypeSelectorHelpBox />}>\n          <Box>\n            <Box sx={{ fontSize: 16, fontWeight: 600, paddingBottom: 15 }}>\n              Queue\n            </Box>\n            <Box sx={{ ...typesSelection.iconContainer }}>\n              {queue.map((item) => {\n                return (\n                  <DestinationButton\n                    destinationType={item.actionTrigger}\n                    srcImage={item.logo}\n                    title={item.targetTitle}\n                    key={`icon-${item.targetTitle}`}\n                  />\n                );\n              })}\n            </Box>\n            <Box sx={{ fontSize: 16, fontWeight: 600, paddingBottom: 15 }}>\n              Database\n            </Box>\n            <Box sx={{ ...typesSelection.iconContainer }}>\n              {database.map((item) => {\n                return (\n                  <DestinationButton\n                    destinationType={item.actionTrigger}\n                    srcImage={item.logo}\n                    title={item.targetTitle}\n                    key={`icon-${item.targetTitle}`}\n                  />\n                );\n              })}\n            </Box>\n            <Box sx={{ fontSize: 16, fontWeight: 600, paddingBottom: 15 }}>\n              Functions\n            </Box>\n            <Box sx={{ ...typesSelection.iconContainer }}>\n              {functions.map((item) => {\n                return (\n                  <DestinationButton\n                    destinationType={item.actionTrigger}\n                    srcImage={item.logo}\n                    title={item.targetTitle}\n                    key={`icon-${item.targetTitle}`}\n                  />\n                );\n              })}\n            </Box>\n          </Box>\n        </FormLayout>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default EventTypeSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"api/consoleApi\";\nimport { IElementValue } from \"../Configurations/types\";\nimport { TransformedEndpointItem } from \"./types\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nconst notifyKafka = \"notify_kafka\";\nconst notifyAmqp = \"notify_amqp\";\nconst notifyMqtt = \"notify_mqtt\";\nconst notifyRedis = \"notify_redis\";\nconst notifyNats = \"notify_nats\";\nconst notifyElasticsearch = \"notify_elasticsearch\";\nconst notifyWebhooks = \"notify_webhook\";\nconst notifyNsq = \"notify_nsq\";\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[],\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      name: element.service,\n      account_id: element.account_id,\n      status: element.status,\n    };\n  }) as TransformedEndpointItem[];\n};\n\nexport class DestType {\n  static DB: string = \"database\";\n  static Queue: string = \"queue\";\n  static Func: string = \"functions\";\n}\n\nconst getImgBaseURL = () => {\n  return `${document.baseURI}`;\n};\n\nexport const destinationList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"PostgreSQL\",\n    logo: `${getImgBaseURL()}postgres-logo.svg`,\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: `${getImgBaseURL()}kafka-logo.svg`,\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: `${getImgBaseURL()}amqp-logo.svg`,\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: `${getImgBaseURL()}mqtt-logo.svg`,\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: `${getImgBaseURL()}redis-logo.svg`,\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: `${getImgBaseURL()}nats-logo.svg`,\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: `${getImgBaseURL()}mysql-logo.svg`,\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: `${getImgBaseURL()}elasticsearch-logo.svg`,\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: `${getImgBaseURL()}webhooks-logo.svg`,\n    category: DestType.Func,\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: `${getImgBaseURL()}nsq-logo.svg`,\n    category: DestType.Queue,\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue_dir\",\n    label: \"Queue Directory\",\n    required: false,\n\n    tooltip: \"Staging directory for undelivered messages e.g. '/home/events'\",\n    type: \"string\",\n    placeholder: \"Enter Queue Directory\",\n  },\n  {\n    name: \"queue_limit\",\n    label: \"Queue Limit\",\n    required: false,\n\n    tooltip: \"Maximum limit for undelivered messages, defaults to '10000'\",\n    type: \"number\",\n    placeholder: \"Enter Queue Limit\",\n  },\n  {\n    name: \"comment\",\n    label: \"Comment\",\n    required: false,\n    type: \"comment\",\n    placeholder: \"Enter custom notes if any\",\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: \"Brokers\",\n      required: true,\n\n      tooltip: \"Comma separated list of Kafka broker addresses\",\n      type: \"string\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      label: \"Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"sasl_username\",\n      label: \"SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n    },\n    {\n      name: \"sasl_password\",\n      label: \"SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Password\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: \"SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"Client Auth determines the Kafka server's policy for TLS client authorization\",\n      type: \"string\",\n      placeholder: \"Enter TLS Client Auth\",\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: \"Set to 'on' to enable SASL authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS skip verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: \"client TLS cert\",\n      tooltip: \"Path to client certificate for mTLS authorization\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      label: \"client TLS key\",\n      tooltip: \"Path to client key for mTLS authorization\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Key\",\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Version\",\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: \"Exchange\",\n      tooltip: \"Name of the AMQP exchange\",\n      type: \"string\",\n      placeholder: \"Enter Exchange\",\n    },\n    {\n      name: \"exchange_type\",\n      label: \"Exchange Type\",\n      tooltip: \"AMQP exchange type\",\n      type: \"string\",\n      placeholder: \"Enter Exchange Type\",\n    },\n    {\n      name: \"routing_key\",\n      label: \"Routing Key\",\n      tooltip: \"Routing key for publishing\",\n      type: \"string\",\n      placeholder: \"Enter Routing Key\",\n    },\n    {\n      name: \"mandatory\",\n      label: \"Mandatory\",\n      tooltip:\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: \"Durable\",\n      tooltip:\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: \"No Wait\",\n      tooltip:\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: \"Internal\",\n      tooltip:\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: \"Auto Deleted\",\n      tooltip:\n        \"Auto delete queue when set to 'on', when there are no consumers\",\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: \"Delivery Mode\",\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\n      type: \"number\",\n      placeholder: \"Enter Delivery Mode\",\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"Redis server's address e.g. `localhost:6379`\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: \"Key\",\n      tooltip: \"Redis key to store/update events, key is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Key\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"Redis server password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: \"Broker\",\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\n      type: \"uri\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"Name of the MQTT topic to publish\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"MQTT username\",\n      type: \"string\",\n      placeholder: \"Enter Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"MQTT password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\n      type: \"number\",\n      placeholder: \"Enter QOS\",\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: \"Keep Alive Interval\",\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Keep Alive Interval\",\n    },\n    {\n      name: \"reconnect_interval\",\n      label: \"Reconnect Interval\",\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Reconnect Interval\",\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: \"Subject\",\n      tooltip: \"NATS subscription subject\",\n      type: \"string\",\n      placeholder: \"Enter NATS Subject\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"NATS username\",\n      type: \"string\",\n      placeholder: \"Enter NATS Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"NATS password\",\n      type: \"string\",\n      placeholder: \"Enter NATS password\",\n    },\n    {\n      name: \"token\",\n      label: \"Token\",\n      tooltip: \"NATS token\",\n      type: \"string\",\n      placeholder: \"Enter NATS token\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: \"Ping Interval\",\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\n      type: \"duration\",\n      placeholder: \"Enter Ping Interval\",\n    },\n    {\n      name: \"streaming\",\n      label: \"Streaming\",\n      tooltip: \"Set to 'on' to use streaming NATS server\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: \"Streaming async\",\n      tooltip: \"Set to 'on' to enable asynchronous publish\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: \"Streaming max publish ACKS in flight\",\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\n      type: \"number\",\n      placeholder: \"Enter Streaming in flight value\",\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: \"Streaming Cluster ID\",\n      tooltip: \"Unique ID for NATS streaming cluster\",\n      type: \"string\",\n      placeholder: \"Enter Streaming Cluster ID\",\n    },\n    {\n      name: \"cert_authority\",\n      label: \"Cert Authority\",\n      tooltip: \"Path to certificate chain of the target NATS server\",\n      type: \"string\",\n      placeholder: \"Enter Cert Authority\",\n    },\n    {\n      name: \"client_cert\",\n      label: \"Client Cert\",\n      tooltip: \"Client cert for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_key\",\n      label: \"Client Key\",\n      tooltip: \"Client cert key for NATS mTLS authorization\",\n      type: \"string\",\n      placeholder: \"Enter Client Key\",\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"Elasticsearch server's address, with optional authentication info\",\n      type: \"url\",\n      placeholder: \"Enter URL\",\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: \"Index\",\n      tooltip:\n        \"Elasticsearch index to store/update events, index is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Index\",\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: \"Format\",\n      tooltip:\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\n      type: \"enum\",\n      placeholder: \"Enter Format\",\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      tooltip:\n        \"Webhook server endpoint e.g. http://localhost:8080/minio/events\",\n      type: \"url\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      label: \"Auth Token\",\n      tooltip: \"Opaque string or JWT authorization token\",\n      type: \"string\",\n      placeholder: \"Enter auth_token\",\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: \"NSQD Address\",\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\n      type: \"address\",\n      placeholder: \"Enter nsqd_address\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"NSQ topic\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n\nconst serviceToConfigMap: Record<string, string> = {\n  webhook: \"notify_webhook\",\n  amqp: \"notify_amqp\",\n  kafka: \"notify_kafka\",\n  mqtt: \"notify_mqtt\",\n  nats: \"notify_nats\",\n  nsq: \"notify_nsq\",\n  mysql: \"notify_mysql\",\n  postgresql: \"notify_postgres\", //looks different in server response(postgresql as opposed to postgres) from api/admin_notification_endpoints.go\n  elasticsearch: \"notify_elasticsearch\",\n  redis: \"notify_redis\",\n};\n\nexport const getNotificationConfigKey = (serviceName: string) => {\n  return serviceToConfigMap[serviceName];\n};\n"],"names":["NotificationEndpointTypeSelectorHelpBox","_jsx","HelpBox","iconComponent","LambdaNotificationsIcon","title","help","Box","sx","paddingTop","children","DestinationButtonBase","styled","button","_ref","theme","background","get","border","borderRadius","width","height","display","alignItems","justifyContent","marginBottom","marginRight","cursor","overflow","backgroundColor","maxWidth","maxHeight","filter","color","fontSize","fontFamily","paddingLeft","fontWeight","_ref2","destinationType","srcImage","navigate","useNavigate","_jsxs","onClick","IAM_PAGES","EVENT_DESTINATIONS_ADD","className","src","alt","withLogos","destinationList","elService","logo","database","category","DestType","DB","queue","Queue","functions","Func","EventTypeSelector","dispatch","useAppDispatch","useEffect","setHelpName","Fragment","PageHeaderWrapper","label","BackLink","EVENT_DESTINATIONS","actions","HelpMenu","PageLayout","FormLayout","helpBox","paddingBottom","typesSelection","iconContainer","map","item","DestinationButton","actionTrigger","targetTitle","notifyPostgres","notifyMysql","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationTransform","notificationElements","element","service_name","service","account_id","name","status","getImgBaseURL","document","baseURI","commonFields","required","tooltip","type","placeholder","removeEmptyFields","formFields","field","value","notificationEndpointsFields","serviceToConfigMap","webhook","amqp","kafka","mqtt","nats","nsq","mysql","postgresql","elasticsearch","redis","getNotificationConfigKey","serviceName"],"sourceRoot":""}