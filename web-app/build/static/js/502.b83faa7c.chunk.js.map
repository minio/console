{"version":3,"file":"static/js/502.b83faa7c.chunk.js","mappings":"4NAgCA,MA0CA,EA1CyBA,IAKC,IALA,QACxBC,EAAO,UACPC,EAAS,OACTC,EAAM,SACNC,GACkBJ,EAClB,MAAMK,GAAWC,EAAAA,EAAAA,OAEVC,EAAyBC,IAC9BC,EAAAA,EAAAA,WAAkB,GAiBpB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MAAO,+BACPC,YAAa,SACbC,OAAQZ,EACRa,UAAWR,EACXS,UArBoBC,KACtBT,GAA2B,GAC3B,IAAIU,EAAyB,CAAEC,OAAQf,GACvCgB,EAAAA,EAAIjB,OACDkB,2BAA2BlB,EAAQe,GACnCI,MAAK,KACJrB,GAAS,IAEVsB,OAAOC,IACNnB,GAASoB,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeF,EAAIG,SACjD1B,GAAS,IAEV2B,SAAQ,IAAMpB,GAA2B,IAAO,EAUjDqB,WAAWnB,EAAAA,EAAAA,KAACoB,EAAAA,IAAiB,IAC7B7B,QAASA,EACT8B,qBACErB,EAAAA,EAAAA,KAACsB,EAAAA,SAAQ,CAAAC,SAAC,uDAEZ,C","sources":["screens/Console/Buckets/BucketDetails/DeleteAccessRule.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"api\";\nimport { ApiError, HttpResponse, PrefixWrapper } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteAccessRule {\n  modalOpen: boolean;\n  onClose: () => any;\n  bucket: string;\n  toDelete: string;\n}\n\nconst DeleteAccessRule = ({\n  onClose,\n  modalOpen,\n  bucket,\n  toDelete,\n}: IDeleteAccessRule) => {\n  const dispatch = useAppDispatch();\n\n  const [loadingDeleteAccessRule, setLoadingDeleteAccessRule] =\n    useState<boolean>(false);\n\n  const onConfirmDelete = () => {\n    setLoadingDeleteAccessRule(true);\n    let wrapper: PrefixWrapper = { prefix: toDelete };\n    api.bucket\n      .deleteAccessRuleWithBucket(bucket, wrapper)\n      .then(() => {\n        onClose();\n      })\n      .catch((res: HttpResponse<boolean, ApiError>) => {\n        dispatch(setErrorSnackMessage(errorToHandler(res.error)));\n        onClose();\n      })\n      .finally(() => setLoadingDeleteAccessRule(false));\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Anonymous Access Rule`}\n      confirmText={\"Delete\"}\n      isOpen={modalOpen}\n      isLoading={loadingDeleteAccessRule}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={onClose}\n      confirmationContent={\n        <Fragment>Are you sure you want to delete this access rule?</Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteAccessRule;\n"],"names":["_ref","onClose","modalOpen","bucket","toDelete","dispatch","useAppDispatch","loadingDeleteAccessRule","setLoadingDeleteAccessRule","useState","_jsx","ConfirmDialog","title","confirmText","isOpen","isLoading","onConfirm","onConfirmDelete","wrapper","prefix","api","deleteAccessRuleWithBucket","then","catch","res","setErrorSnackMessage","errorToHandler","error","finally","titleIcon","ConfirmDeleteIcon","confirmationContent","Fragment","children"],"sourceRoot":""}