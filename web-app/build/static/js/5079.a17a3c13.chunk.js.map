{"version":3,"file":"static/js/5079.a17a3c13.chunk.js","mappings":"kNAgCA,MA0DA,EA1D6BA,IAMC,IANA,WAC5BC,EAAU,YACVC,EAAW,YACXC,EAAW,iBACXC,EAAgB,WAChBC,GACsBL,EACtB,MAAMM,GAAWC,EAAAA,EAAAA,OACVC,EAAQC,GAAYN,GAOpBO,EAAeC,IAAmBC,EAAAA,EAAAA,IALpBC,IAAMT,GAAiB,KACxBU,GAClBR,GAASS,EAAAA,EAAAA,IAAqBD,MAKhC,IAAKX,EACH,OAAO,KAYT,OACEa,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MAAO,aACPC,YAAa,SACbC,OAAQnB,EACRoB,WAAWL,EAAAA,EAAAA,KAACM,EAAAA,IAAiB,IAC7BC,UAAWb,EACXc,UAhBoBC,KACtB,MAAMC,EAAc,IAAKxB,UAClBwB,EAAYlB,GAEnBG,EAAgB,MAAO,mBAAmBN,SAAmB,CAC3DsB,KAAMD,GACN,EAWAE,QAzBYA,IAAMxB,GAAiB,GA0BnCyB,qBACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CAAC,0CACgC,KACxCF,EAAAA,EAAAA,MAAA,KACEG,MAAO,CACLC,SAAU,IACVC,WAAY,SACZC,SAAU,cACVJ,SAAA,CAEDxB,EAAO,MAAIC,KACT,IAAI,QAIb,C","sources":["screens/Console/Buckets/BucketDetails/DeleteBucketTagModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeleteBucketTagModal {\n  deleteOpen: boolean;\n  currentTags: any;\n  bucketName: string;\n  selectedTag: string[];\n  onCloseAndUpdate: (refresh: boolean) => void;\n}\n\nconst DeleteBucketTagModal = ({\n  deleteOpen,\n  currentTags,\n  selectedTag,\n  onCloseAndUpdate,\n  bucketName,\n}: IDeleteBucketTagModal) => {\n  const dispatch = useAppDispatch();\n  const [tagKey, tagLabel] = selectedTag;\n\n  const onDelSuccess = () => onCloseAndUpdate(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => onCloseAndUpdate(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedTag) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    const cleanObject = { ...currentTags };\n    delete cleanObject[tagKey];\n\n    invokeDeleteApi(\"PUT\", `/api/v1/buckets/${bucketName}/tags`, {\n      tags: cleanObject,\n    });\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Tag`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmationContent={\n        <Fragment>\n          Are you sure you want to delete the tag{\" \"}\n          <b\n            style={{\n              maxWidth: 200,\n              whiteSpace: \"normal\",\n              wordWrap: \"break-word\",\n            }}\n          >\n            {tagKey} : {tagLabel}\n          </b>{\" \"}\n          ?\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteBucketTagModal;\n"],"names":["_ref","deleteOpen","currentTags","selectedTag","onCloseAndUpdate","bucketName","dispatch","useAppDispatch","tagKey","tagLabel","deleteLoading","invokeDeleteApi","useApi","onDelSuccess","err","setErrorSnackMessage","_jsx","ConfirmDialog","title","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","onConfirmDelete","cleanObject","tags","onClose","confirmationContent","_jsxs","Fragment","children","style","maxWidth","whiteSpace","wordWrap"],"sourceRoot":""}