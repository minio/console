{"version":3,"file":"static/js/4103.f42a2340.chunk.js","mappings":"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","sources":["screens/Console/Configurations/SiteReplication/LookupStatus/LookupStatusTable.tsx","screens/Console/Configurations/SiteReplication/LookupStatus/Utils.tsx","screens/Console/Configurations/SiteReplication/LookupStatus/BucketEntityStatus.tsx","screens/Console/Configurations/SiteReplication/LookupStatus/PolicyEntityStatus.tsx","screens/Console/Configurations/SiteReplication/LookupStatus/GroupEntityStatus.tsx","screens/Console/Configurations/SiteReplication/LookupStatus/UserEntityStatus.tsx","screens/Console/Configurations/SiteReplication/EntityReplicationLookup.tsx","screens/Console/Configurations/SiteReplication/SiteReplicationStatus.tsx","screens/Console/Dashboard/BasicDashboard/StatusCountCard.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\nimport { Box, CircleIcon } from \"mds\";\n\nconst LookupTableBase = styled.div(({ theme }) => ({\n  marginTop: 15,\n  table: {\n    width: \"100%\",\n    borderCollapse: \"collapse\",\n    \"& .feature-cell\": {\n      fontWeight: 600,\n      fontSize: 14,\n      paddingLeft: 15,\n    },\n    \"& .status-cell\": {\n      textAlign: \"center\",\n    },\n    \"& .header-cell\": {\n      textAlign: \"center\",\n    },\n    \"& tr\": {\n      height: 38,\n      \"& td\": {\n        borderBottom: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n      },\n      \"& th\": {\n        borderBottom: `2px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n      },\n    },\n    \"& .indicator\": {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      \"& .min-icon\": {\n        height: 15,\n        width: 15,\n      },\n      \"&.active\": {\n        \"& .min-icon\": {\n          fill: get(theme, \"signalColors.good\", \"#4CCB92\"),\n        },\n      },\n      \"&.deactivated\": {\n        \"& .min-icon\": {\n          fill: get(theme, \"signalColors.danger\", \"#C51B3F\"),\n        },\n      },\n    },\n  },\n}));\n\nconst LookupStatusTable = ({\n  matrixData = [],\n  entityName = \"\",\n  entityType = \"\",\n}: {\n  matrixData: any;\n  entityName: string;\n  entityType: string;\n}) => {\n  //Assumes 1st row should be a header row.\n  const [header = [], ...rows] = matrixData;\n\n  const tableHeader = header.map((hC: string, hcIdx: number) => {\n    return (\n      <th className=\"header-cell\" key={`${0}${hcIdx}`}>\n        {hC}\n      </th>\n    );\n  });\n\n  const tableRowsToRender = rows.map((r: any, rIdx: number) => {\n    return (\n      <tr key={`r-${rIdx + 1}`}>\n        {r.map((v: any, cIdx: number) => {\n          let indicator = null;\n\n          if (cIdx === 0) {\n            indicator = v;\n          } else if (v === \"\") {\n            indicator = \"\";\n          }\n          if (v === true) {\n            indicator = (\n              <Box className={`indicator active`}>\n                <CircleIcon />\n              </Box>\n            );\n          } else if (v === false) {\n            indicator = (\n              <Box className={`indicator deactivated`}>\n                <CircleIcon />\n              </Box>\n            );\n          }\n\n          return (\n            <td\n              key={`${rIdx + 1}${cIdx}`}\n              className={cIdx === 0 ? \"feature-cell\" : \"status-cell\"}\n            >\n              {indicator}\n            </td>\n          );\n        })}\n      </tr>\n    );\n  });\n\n  return (\n    <LookupTableBase>\n      <Box sx={{ marginTop: 15, marginBottom: 15 }}>\n        Replication status for {entityType}: <strong>{entityName}</strong>.\n      </Box>\n      <table>\n        <thead>\n          <tr>{tableHeader}</tr>\n        </thead>\n        <tbody>{tableRowsToRender}</tbody>\n      </table>\n    </LookupTableBase>\n  );\n};\n\nexport default LookupStatusTable;\n","import React from \"react\";\nimport { StatsResponseType } from \"../SiteReplicationStatus\";\nimport { Box } from \"mds\";\n\nexport function syncStatus(mismatch: boolean, set: boolean): string | boolean {\n  if (!set) {\n    return \"\";\n  }\n  return !mismatch;\n}\n\nexport function isEntityNotFound(\n  sites: Partial<StatsResponseType>,\n  lookupList: Partial<StatsResponseType>,\n  lookupKey: string,\n) {\n  const siteKeys: string[] = Object.keys(sites);\n  return siteKeys.find((sk: string) => {\n    // there is no way to find the type of this ! as it is an entry in the structure itself.\n    // @ts-ignore\n    const result: Record<string, any> = lookupList[sk] || {};\n    return !result[lookupKey];\n  });\n}\n\nexport const EntityNotFound = ({\n  entityType,\n  entityValue,\n}: {\n  entityType: string;\n  entityValue: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        marginTop: \"45px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      {entityType}:{\" \"}\n      <Box sx={{ marginLeft: \"5px\", marginRight: \"5px\", fontWeight: 600 }}>\n        {entityValue}\n      </Box>{\" \"}\n      not found.\n    </Box>\n  );\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { StatsResponseType } from \"../SiteReplicationStatus\";\nimport LookupStatusTable from \"./LookupStatusTable\";\nimport { EntityNotFound, isEntityNotFound, syncStatus } from \"./Utils\";\n\ntype BucketEntityStatusProps = Partial<StatsResponseType> & {\n  lookupValue?: string;\n};\nconst BucketEntityStatus = ({\n  bucketStats = {},\n  sites = {},\n  lookupValue = \"\",\n}: BucketEntityStatusProps) => {\n  const rowsForStatus = [\n    \"Tags\",\n    \"Policy\",\n    \"Quota\",\n    \"Retention\",\n    \"Encryption\",\n    \"Replication\",\n  ];\n\n  const bucketSites: Record<string, any> = bucketStats[lookupValue] || {};\n\n  if (!lookupValue) return null;\n\n  const siteKeys = Object.keys(sites);\n\n  const notFound = isEntityNotFound(sites, bucketSites, \"HasBucket\");\n  const resultMatrix: any = [];\n  if (notFound) {\n    return <EntityNotFound entityType={\"Bucket\"} entityValue={lookupValue} />;\n  } else {\n    const row = [];\n    for (let sCol = 0; sCol < siteKeys.length; sCol++) {\n      if (sCol === 0) {\n        row.push(\"\");\n      }\n      /**\n       * ----------------------------------\n       * | <blank cell>  | sit-0 | site-1 |\n       * -----------------------------------\n       */\n      row.push(sites[siteKeys[sCol]].name);\n    }\n    resultMatrix.push(row);\n    for (let fi = 0; fi < rowsForStatus.length; fi++) {\n      /**\n       * -------------------------------------------------\n       * | Feature Name  | site-0-status | site-1-status |\n       * --------------------------------------------------\n       */\n      const sfRow = [];\n      const feature = rowsForStatus[fi];\n      let sbStatus: string | boolean = \"\";\n\n      for (let si = 0; si < siteKeys.length; si++) {\n        const bucketSiteDeploymentId = sites[siteKeys[si]].deploymentID;\n\n        const rSite = bucketSites[bucketSiteDeploymentId];\n\n        if (si === 0) {\n          sfRow.push(feature);\n        }\n\n        switch (fi) {\n          case 0:\n            sbStatus = syncStatus(rSite.TagMismatch, rSite.HasTagsSet);\n            sfRow.push(sbStatus);\n            break;\n          case 1:\n            sbStatus = syncStatus(rSite.PolicyMismatch, rSite.HasPolicySet);\n            sfRow.push(sbStatus);\n            break;\n          case 2:\n            sbStatus = syncStatus(rSite.QuotaCfgMismatch, rSite.HasQuotaCfgSet);\n            sfRow.push(sbStatus);\n            break;\n          case 3:\n            sbStatus = syncStatus(\n              rSite.OLockConfigMismatch,\n              rSite.HasOLockConfigSet,\n            );\n            sfRow.push(sbStatus);\n            break;\n          case 4:\n            sbStatus = syncStatus(rSite.SSEConfigMismatch, rSite.HasSSECfgSet);\n            sfRow.push(sbStatus);\n            break;\n          case 5:\n            sbStatus = syncStatus(\n              rSite.ReplicationCfgMismatch,\n              rSite.HasReplicationCfg,\n            );\n            sfRow.push(sbStatus);\n            break;\n        }\n      }\n\n      resultMatrix.push(sfRow);\n    }\n  }\n\n  return (\n    <LookupStatusTable\n      matrixData={resultMatrix}\n      entityName={lookupValue}\n      entityType={\"Bucket\"}\n    />\n  );\n};\n\nexport default BucketEntityStatus;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { StatsResponseType } from \"../SiteReplicationStatus\";\nimport LookupStatusTable from \"./LookupStatusTable\";\nimport { EntityNotFound, isEntityNotFound, syncStatus } from \"./Utils\";\n\ntype PolicyEntityStatusProps = Partial<StatsResponseType> & {\n  lookupValue?: string;\n};\nconst PolicyEntityStatus = ({\n  policyStats = {},\n  sites = {},\n  lookupValue = \"\",\n}: PolicyEntityStatusProps) => {\n  const rowsForStatus = [\"Policy\"];\n\n  const policySites: Record<string, any> = policyStats[lookupValue] || {};\n\n  if (!lookupValue) return null;\n\n  const siteKeys = Object.keys(sites);\n  const notFound = isEntityNotFound(sites, policySites, \"HasPolicy\");\n  const resultMatrix: any = [];\n  if (notFound) {\n    return <EntityNotFound entityType={\"Policy\"} entityValue={lookupValue} />;\n  } else {\n    const row = [];\n    for (let sCol = 0; sCol < siteKeys.length; sCol++) {\n      if (sCol === 0) {\n        row.push(\"\");\n      }\n      row.push(sites[siteKeys[sCol]].name);\n    }\n    resultMatrix.push(row);\n    for (let fi = 0; fi < rowsForStatus.length; fi++) {\n      const sfRow = [];\n      const feature = rowsForStatus[fi];\n      let sbStatus: string | boolean = \"\";\n\n      for (let si = 0; si < siteKeys.length; si++) {\n        const bucketSiteDeploymentId = sites[siteKeys[si]].deploymentID;\n\n        const rSite = policySites[bucketSiteDeploymentId];\n\n        if (si === 0) {\n          sfRow.push(feature);\n        }\n\n        switch (fi) {\n          case 0:\n            sbStatus = syncStatus(rSite.PolicyMismatch, rSite.HasPolicy);\n            sfRow.push(sbStatus);\n            break;\n        }\n      }\n\n      resultMatrix.push(sfRow);\n    }\n  }\n\n  return (\n    <LookupStatusTable\n      matrixData={resultMatrix}\n      entityName={lookupValue}\n      entityType={\"Policy\"}\n    />\n  );\n};\n\nexport default PolicyEntityStatus;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { StatsResponseType } from \"../SiteReplicationStatus\";\nimport LookupStatusTable from \"./LookupStatusTable\";\nimport { EntityNotFound, isEntityNotFound, syncStatus } from \"./Utils\";\n\ntype GroupEntityStatusProps = Partial<StatsResponseType> & {\n  lookupValue?: string;\n};\nconst UserEntityStatus = ({\n  groupStats = {},\n  sites = {},\n  lookupValue = \"\",\n}: GroupEntityStatusProps) => {\n  const rowsForStatus = [\"Info\", \"Policy mapping\"];\n\n  const groupSites: Record<string, any> = groupStats[lookupValue] || {};\n\n  if (!lookupValue) return null;\n\n  const siteKeys = Object.keys(sites);\n  const notFound = isEntityNotFound(sites, groupSites, \"HasGroup\");\n  const resultMatrix: any = [];\n  if (notFound) {\n    return <EntityNotFound entityType={\"Group\"} entityValue={lookupValue} />;\n  } else {\n    const row = [];\n    for (let sCol = 0; sCol < siteKeys.length; sCol++) {\n      if (sCol === 0) {\n        row.push(\"\");\n      }\n      /**\n       * ----------------------------------\n       * | <blank cell>  | sit-0 | site-1 |\n       * -----------------------------------\n       */\n      row.push(sites[siteKeys[sCol]].name);\n    }\n    resultMatrix.push(row);\n    for (let fi = 0; fi < rowsForStatus.length; fi++) {\n      /**\n       * -------------------------------------------------\n       * | Feature Name  | site-0-status | site-1-status |\n       * --------------------------------------------------\n       */\n      const sfRow = [];\n      const feature = rowsForStatus[fi];\n      let sbStatus: string | boolean = \"\";\n\n      for (let si = 0; si < siteKeys.length; si++) {\n        const bucketSiteDeploymentId = sites[siteKeys[si]].deploymentID;\n\n        const rSite = groupSites[bucketSiteDeploymentId];\n\n        if (si === 0) {\n          sfRow.push(feature);\n        }\n\n        switch (fi) {\n          case 0:\n            sbStatus = syncStatus(rSite.GroupDescMismatch, rSite.HasGroup);\n            sfRow.push(sbStatus);\n            break;\n          case 1:\n            sbStatus = syncStatus(rSite.PolicyMismatch, rSite.HasPolicyMapping);\n            sfRow.push(sbStatus);\n            break;\n        }\n      }\n\n      resultMatrix.push(sfRow);\n    }\n  }\n\n  return (\n    <LookupStatusTable\n      matrixData={resultMatrix}\n      entityName={lookupValue}\n      entityType={\"Group\"}\n    />\n  );\n};\n\nexport default UserEntityStatus;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { StatsResponseType } from \"../SiteReplicationStatus\";\nimport LookupStatusTable from \"./LookupStatusTable\";\nimport { EntityNotFound, isEntityNotFound, syncStatus } from \"./Utils\";\n\ntype PolicyEntityStatusProps = Partial<StatsResponseType> & {\n  lookupValue?: string;\n};\nconst UserEntityStatus = ({\n  userStats = {},\n  sites = {},\n  lookupValue = \"\",\n}: PolicyEntityStatusProps) => {\n  const rowsForStatus = [\"Info\", \"Policy mapping\"];\n\n  const userSites: Record<string, any> = userStats[lookupValue] || {};\n\n  if (!lookupValue) return null;\n\n  const siteKeys = Object.keys(sites);\n\n  const notFound = isEntityNotFound(sites, userSites, \"HasUser\");\n\n  const resultMatrix: any = [];\n  if (notFound) {\n    return <EntityNotFound entityType={\"User\"} entityValue={lookupValue} />;\n  } else {\n    const row = [];\n    for (let sCol = 0; sCol < siteKeys.length; sCol++) {\n      if (sCol === 0) {\n        row.push(\"\");\n      }\n      row.push(sites[siteKeys[sCol]].name);\n    }\n    resultMatrix.push(row);\n    for (let fi = 0; fi < rowsForStatus.length; fi++) {\n      const sfRow = [];\n      const feature = rowsForStatus[fi];\n      let sbStatus: string | boolean = \"\";\n\n      for (let si = 0; si < siteKeys.length; si++) {\n        const bucketSiteDeploymentId = sites[siteKeys[si]].deploymentID;\n\n        const rSite = userSites[bucketSiteDeploymentId];\n\n        if (si === 0) {\n          sfRow.push(feature);\n        }\n\n        switch (fi) {\n          case 0:\n            sbStatus = syncStatus(rSite.UserInfoMismatch, rSite.HasUser);\n            sfRow.push(sbStatus);\n            break;\n          case 1:\n            sbStatus = syncStatus(rSite.PolicyMismatch, rSite.HasPolicyMapping);\n            sfRow.push(sbStatus);\n            break;\n        }\n      }\n\n      resultMatrix.push(sfRow);\n    }\n  }\n\n  return (\n    <LookupStatusTable\n      matrixData={resultMatrix}\n      entityName={lookupValue}\n      entityType={\"User\"}\n    />\n  );\n};\n\nexport default UserEntityStatus;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  breakPoints,\n  Button,\n  ClustersIcon,\n  Grid,\n  Loader,\n  Select,\n  InputBox,\n} from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { StatsResponseType } from \"./SiteReplicationStatus\";\nimport BucketEntityStatus from \"./LookupStatus/BucketEntityStatus\";\nimport PolicyEntityStatus from \"./LookupStatus/PolicyEntityStatus\";\nimport GroupEntityStatus from \"./LookupStatus/GroupEntityStatus\";\nimport UserEntityStatus from \"./LookupStatus/UserEntityStatus\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst EntityReplicationLookup = () => {\n  const [entityType, setEntityType] = useState<string>(\"bucket\");\n  const [entityValue, setEntityValue] = useState<string>(\"\");\n\n  const [stats, setStats] = useState<StatsResponseType>({});\n  const [statsLoaded, setStatsLoaded] = useState<boolean>(false);\n\n  const [isStatsLoading, invokeSiteStatsApi] = useApi(\n    (res: any) => {\n      setStats(res);\n      setStatsLoaded(true);\n    },\n    (err: any) => {\n      setStats({});\n      setStatsLoaded(true);\n    },\n  );\n\n  const {\n    bucketStats = {},\n    sites = {},\n    userStats = {},\n    policyStats = {},\n    groupStats = {},\n  } = stats || {};\n\n  const getStats = (entityType: string = \"\", entityValue: string = \"\") => {\n    setStatsLoaded(false);\n    if (entityType && entityValue) {\n      let url = `api/v1/admin/site-replication/status?buckets=false&entityType=${entityType}&entityValue=${entityValue}&groups=false&policies=false&users=false`;\n      invokeSiteStatsApi(\"GET\", url);\n    }\n  };\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: \"grid\",\n          alignItems: \"center\",\n          gridTemplateColumns: \".7fr .9fr 1.2fr .3fr\",\n          [`@media (max-width: ${breakPoints.sm}px)`]: {\n            gridTemplateColumns: \"1fr\",\n          },\n          [`@media (max-width: ${breakPoints.md}px)`]: {\n            gridTemplateColumns: \"1.2fr .7fr .7fr .3fr\",\n          },\n          gap: \"15px\",\n        }}\n      >\n        <Box sx={{ width: \"240px\", flexGrow: \"0\" }}>\n          View Replication Status for a:\n        </Box>\n        <Box\n          sx={{\n            marginLeft: -25,\n            [`@media (max-width: ${breakPoints.sm}px)`]: {\n              marginLeft: 0,\n            },\n          }}\n        >\n          <Select\n            id=\"replicationEntityLookup\"\n            name=\"replicationEntityLookup\"\n            onChange={(value) => {\n              setEntityType(value);\n              setStatsLoaded(false);\n            }}\n            label=\"\"\n            value={entityType}\n            options={[\n              {\n                label: \"Bucket\",\n                value: \"bucket\",\n              },\n              {\n                label: \"User\",\n                value: \"user\",\n              },\n              {\n                label: \"Group\",\n                value: \"group\",\n              },\n              {\n                label: \"Policy\",\n                value: \"policy\",\n              },\n            ]}\n            disabled={false}\n          />\n        </Box>\n\n        <Box\n          sx={{\n            flex: 2,\n          }}\n        >\n          <InputBox\n            id=\"replicationLookupEntityValue\"\n            name=\"replicationLookupEntityValue\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setEntityValue(e.target.value);\n              setStatsLoaded(false);\n            }}\n            placeholder={`test-${entityType}`}\n            label=\"\"\n            value={entityValue}\n          />\n        </Box>\n        <Box\n          sx={{\n            maxWidth: \"80px\",\n          }}\n        >\n          <TooltipWrapper tooltip={\"View across sites\"}>\n            <Button\n              id={\"view-across-sites\"}\n              type={\"button\"}\n              onClick={() => {\n                getStats(entityType, entityValue);\n              }}\n              label={`View`}\n              icon={<ClustersIcon />}\n              collapseOnSmall={false}\n              disabled={!entityValue || !entityType}\n            />\n          </TooltipWrapper>\n        </Box>\n      </Box>\n\n      {isStatsLoading ? (\n        <Grid\n          item\n          xs={12}\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginTop: 45,\n          }}\n        >\n          <Loader style={{ width: 25, height: 25 }} />\n        </Grid>\n      ) : null}\n\n      {statsLoaded ? (\n        <Box>\n          {!isStatsLoading && entityType === \"bucket\" && entityValue ? (\n            <BucketEntityStatus\n              bucketStats={bucketStats}\n              sites={sites}\n              lookupValue={entityValue}\n            />\n          ) : null}\n\n          {!isStatsLoading && entityType === \"user\" && entityValue ? (\n            <UserEntityStatus\n              userStats={userStats}\n              sites={sites}\n              lookupValue={entityValue}\n            />\n          ) : null}\n\n          {!isStatsLoading && entityType === \"group\" && entityValue ? (\n            <GroupEntityStatus\n              groupStats={groupStats}\n              sites={sites}\n              lookupValue={entityValue}\n            />\n          ) : null}\n\n          {!isStatsLoading && entityType === \"policy\" && entityValue ? (\n            <PolicyEntityStatus\n              policyStats={policyStats}\n              sites={sites}\n              lookupValue={entityValue}\n            />\n          ) : null}\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n\nexport default EntityReplicationLookup;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  BackLink,\n  Box,\n  breakPoints,\n  BucketsIcon,\n  Button,\n  Grid,\n  GroupsIcon,\n  IAMPoliciesIcon,\n  Loader,\n  PageLayout,\n  RefreshIcon,\n  UsersIcon,\n  SectionTitle,\n} from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport StatusCountCard from \"../../Dashboard/BasicDashboard/StatusCountCard\";\nimport EntityReplicationLookup from \"./EntityReplicationLookup\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport {\n  ApiError,\n  HttpResponse,\n  SiteReplicationStatusResponse,\n} from \"api/consoleApi\";\n\nexport type StatsResponseType = {\n  maxBuckets?: number;\n  bucketStats?: Record<string, any>;\n  maxGroups?: number;\n  groupStats?: Record<string, any>;\n  maxUsers?: number;\n  userStats?: Record<string, any>;\n  maxPolicies?: number;\n  policyStats?: Record<string, any>;\n  sites?: Record<string, any>;\n};\n\nconst SREntityStatus = ({\n  maxValue = 0,\n  entityStatObj = {},\n  entityTextPlural = \"\",\n  icon = null,\n}: {\n  maxValue: number;\n  entityStatObj: Record<string, any>;\n  entityTextPlural: string;\n  icon?: React.ReactNode;\n}) => {\n  const statEntityLen = Object.keys(entityStatObj || {})?.length;\n  return (\n    <Box\n      withBorders\n      sx={{\n        padding: \"25px\",\n        [`@media (min-width: ${breakPoints.sm}px)`]: {\n          maxWidth: \"100%\",\n        },\n      }}\n    >\n      <StatusCountCard\n        icon={icon}\n        onlineCount={maxValue}\n        offlineCount={statEntityLen}\n        okStatusText={\"Synced\"}\n        notOkStatusText={\"Failed\"}\n        label={entityTextPlural}\n      />\n    </Box>\n  );\n};\n\nconst SiteReplicationStatus = () => {\n  const navigate = useNavigate();\n\n  const [stats, setStats] = useState<StatsResponseType>({});\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const {\n    maxBuckets = 0,\n    bucketStats = {},\n    maxGroups = 0,\n    groupStats = {},\n    maxUsers = 0,\n    userStats = {},\n    maxPolicies = 0,\n    policyStats = {},\n  } = stats || {};\n\n  const getStats = () => {\n    setLoading(true);\n    api.admin\n      .getSiteReplicationStatus({\n        buckets: true,\n        groups: true,\n        policies: true,\n        users: true,\n      })\n      .then((res: HttpResponse<SiteReplicationStatusResponse, ApiError>) => {\n        setStats(res.data);\n      })\n      .catch((res: HttpResponse<SiteReplicationStatusResponse, ApiError>) => {\n        setStats({});\n        dispatch(setErrorSnackMessage(errorToHandler(res.error)));\n      })\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    getStats();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setHelpName(\"replication_status\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            label={\"Site Replication\"}\n            onClick={() => navigate(IAM_PAGES.SITE_REPLICATION)}\n          />\n        }\n        actions={<HelpMenu />}\n      />\n\n      <PageLayout>\n        <SectionTitle\n          actions={\n            <Fragment>\n              <TooltipWrapper tooltip={\"Refresh\"}>\n                <Button\n                  id={\"refresh\"}\n                  onClick={() => {\n                    getStats();\n                  }}\n                  label={\"Refresh\"}\n                  icon={<RefreshIcon />}\n                  variant={\"regular\"}\n                  collapseOnSmall={false}\n                />\n              </TooltipWrapper>\n            </Fragment>\n          }\n          separator\n        >\n          Replication status from all Sites\n        </SectionTitle>\n\n        {!loading ? (\n          <Box\n            sx={{\n              display: \"grid\",\n              marginTop: \"25px\",\n              gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n              [`@media (max-width: ${breakPoints.md}px)`]: {\n                gridTemplateColumns: \"1fr 1fr\",\n              },\n              [`@media (max-width: ${breakPoints.sm}px)`]: {\n                gridTemplateColumns: \"1fr\",\n              },\n              gap: \"30px\",\n            }}\n          >\n            <SREntityStatus\n              entityStatObj={bucketStats}\n              entityTextPlural={\"Buckets\"}\n              maxValue={maxBuckets}\n              icon={<BucketsIcon />}\n            />\n            <SREntityStatus\n              entityStatObj={userStats}\n              entityTextPlural={\"Users\"}\n              maxValue={maxUsers}\n              icon={<UsersIcon />}\n            />\n            <SREntityStatus\n              entityStatObj={groupStats}\n              entityTextPlural={\"Groups\"}\n              maxValue={maxGroups}\n              icon={<GroupsIcon />}\n            />\n            <SREntityStatus\n              entityStatObj={policyStats}\n              entityTextPlural={\"Policies\"}\n              maxValue={maxPolicies}\n              icon={<IAMPoliciesIcon />}\n            />\n          </Box>\n        ) : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: 45,\n            }}\n          >\n            <Loader style={{ width: 25, height: 25 }} />\n          </Grid>\n        )}\n\n        <Box\n          withBorders\n          sx={{\n            minHeight: 450,\n            [`@media (max-width: ${breakPoints.sm}px)`]: {\n              minHeight: 250,\n            },\n            marginTop: \"25px\",\n            padding: \"25px\",\n          }}\n        >\n          <EntityReplicationLookup />\n        </Box>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default SiteReplicationStatus;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\nimport { Box, breakPoints, CircleIcon } from \"mds\";\n\nconst StatusCountBase = styled.div(({ theme }) => ({\n  fontFamily: \"Inter,sans-serif\",\n  maxWidth: \"321px\",\n  display: \"flex\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  cursor: \"default\",\n  color: get(theme, \"signalColors.main\", \"#07193E\"),\n  \"& .mainBox\": {\n    flex: 1,\n    display: \"flex\",\n    padding: \"0 8px 0 8px\",\n    [`@media (max-width: ${breakPoints.sm}px)`]: {\n      padding: \"0 10px 0 10px\",\n    },\n    \"& .indicatorIcon\": {\n      width: \"20px\",\n      height: \"20px\",\n      marginTop: \"8px\",\n      maxWidth: \"26px\",\n      \"& .min-icon\": {\n        width: \"16px\",\n        height: \"16px\",\n      },\n    },\n    \"& .indicatorContainer\": {\n      flex: 1,\n      display: \"flex\",\n      flexFlow: \"column\",\n      \"& .indicatorLabel\": {\n        fontSize: \"16px\",\n        fontWeight: 600,\n      },\n      \"& .counterIndicator\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"5px\",\n        justifyContent: \"space-between\",\n        paddingBottom: 0,\n        fontSize: \"55px\",\n        [`@media (max-width: ${breakPoints.sm}px)`]: {\n          paddingBottom: 10,\n          fontSize: \"35px\",\n        },\n        [`@media (max-width: ${breakPoints.lg}px)`]: {\n          fontSize: \"45px\",\n        },\n        [`@media (max-width: ${breakPoints.xl}px)`]: {\n          fontSize: \"50px\",\n        },\n        flexFlow: \"row\",\n        fontWeight: 600,\n\n        \"& .stat-text\": {\n          color: get(theme, \"mutedText\", \"#87888D\"),\n          fontSize: \"12px\",\n          marginTop: \"8px\",\n        },\n        \"& .stat-value\": {\n          textAlign: \"center\",\n          height: \"50px\",\n        },\n        \"& .min-icon\": {\n          marginRight: \"8px\",\n          marginTop: \"8px\",\n          height: \"10px\",\n          width: \"10px\",\n        },\n      },\n      \"& .onlineCounter\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginTop: \"5px\",\n        \"& .min-icon\": {\n          fill: get(theme, \"signalColors.good\", \"#4CCB92\"),\n        },\n      },\n      \"& .offlineCount\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginTop: \"8px\",\n        \"& .min-icon\": {\n          fill: get(theme, \"signalColors.danger\", \"#C51B3F\"),\n        },\n      },\n    },\n  },\n}));\n\nconst StatusCountCard = ({\n  onlineCount = 0,\n  offlineCount = 0,\n  icon = null,\n  label = \"\",\n  okStatusText = \"Online\",\n  notOkStatusText = \"Offline\",\n}: {\n  icon: any;\n  onlineCount: number;\n  offlineCount: number;\n  label: string;\n  okStatusText?: string;\n  notOkStatusText?: string;\n}) => {\n  return (\n    <StatusCountBase>\n      <Box className={\"mainBox\"}>\n        <Box className={\"indicatorContainer\"}>\n          <Box className={\"indicatorLabel\"}>{label}</Box>\n\n          <Box className={\"counterIndicator\"}>\n            <Box>\n              <Box className=\"stat-value\">{onlineCount}</Box>\n              <Box className={\"onlineCounter\"}>\n                <CircleIcon />\n                <div className=\"stat-text\">{okStatusText}</div>\n              </Box>\n            </Box>\n\n            <Box>\n              <Box className=\"stat-value\">{offlineCount}</Box>\n              <Box className={\"offlineCount\"}>\n                <CircleIcon />{\" \"}\n                <div className=\"stat-text\">{notOkStatusText}</div>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <Box className={\"indicatorIcon\"}>{icon}</Box>\n      </Box>\n    </StatusCountBase>\n  );\n};\n\nexport default StatusCountCard;\n"],"names":["LookupTableBase","styled","div","_ref","theme","marginTop","table","width","borderCollapse","fontWeight","fontSize","paddingLeft","textAlign","height","borderBottom","concat","get","display","alignItems","justifyContent","fill","_ref2","matrixData","entityName","entityType","header","rows","tableHeader","map","hC","hcIdx","_jsx","className","children","tableRowsToRender","r","rIdx","v","cIdx","indicator","Box","CircleIcon","_jsxs","sx","marginBottom","syncStatus","mismatch","set","isEntityNotFound","sites","lookupList","lookupKey","Object","keys","find","sk","EntityNotFound","entityValue","marginLeft","marginRight","bucketStats","lookupValue","rowsForStatus","bucketSites","siteKeys","resultMatrix","row","sCol","length","push","name","fi","sfRow","feature","sbStatus","si","rSite","deploymentID","TagMismatch","HasTagsSet","PolicyMismatch","HasPolicySet","QuotaCfgMismatch","HasQuotaCfgSet","OLockConfigMismatch","HasOLockConfigSet","SSEConfigMismatch","HasSSECfgSet","ReplicationCfgMismatch","HasReplicationCfg","LookupStatusTable","policyStats","policySites","HasPolicy","groupStats","groupSites","GroupDescMismatch","HasGroup","HasPolicyMapping","userStats","userSites","UserInfoMismatch","HasUser","EntityReplicationLookup","setEntityType","useState","setEntityValue","stats","setStats","statsLoaded","setStatsLoaded","isStatsLoading","invokeSiteStatsApi","useApi","res","err","gridTemplateColumns","breakPoints","sm","md","gap","flexGrow","Select","id","onChange","value","label","options","disabled","flex","InputBox","e","target","placeholder","maxWidth","TooltipWrapper","tooltip","Button","type","onClick","arguments","undefined","url","getStats","icon","ClustersIcon","collapseOnSmall","Grid","item","xs","Loader","style","BucketEntityStatus","UserEntityStatus","GroupEntityStatus","PolicyEntityStatus","SREntityStatus","_Object$keys","maxValue","entityStatObj","entityTextPlural","statEntityLen","withBorders","padding","StatusCountCard","onlineCount","offlineCount","okStatusText","notOkStatusText","SiteReplicationStatus","navigate","useNavigate","loading","setLoading","maxBuckets","maxGroups","maxUsers","maxPolicies","api","admin","getSiteReplicationStatus","buckets","groups","policies","users","then","data","catch","dispatch","setErrorSnackMessage","errorToHandler","error","finally","useEffect","useAppDispatch","setHelpName","Fragment","PageHeaderWrapper","BackLink","IAM_PAGES","SITE_REPLICATION","actions","HelpMenu","PageLayout","SectionTitle","RefreshIcon","variant","separator","BucketsIcon","UsersIcon","GroupsIcon","IAMPoliciesIcon","minHeight","StatusCountBase","fontFamily","cursor","color","flexFlow","paddingBottom","lg","xl"],"sourceRoot":""}