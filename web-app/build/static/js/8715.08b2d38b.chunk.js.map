{"version":3,"file":"static/js/8715.08b2d38b.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/EditBucketReplication.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  BackLink,\n  Box,\n  BucketReplicationIcon,\n  Button,\n  FormLayout,\n  Grid,\n  HelpBox,\n  InputBox,\n  PageLayout,\n  ReadBox,\n  Switch,\n} from \"mds\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport QueryMultiSelector from \"screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\n\nconst EditBucketReplication = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  let params = new URLSearchParams(document.location.search);\n\n  const bucketName = params.get(\"bucketName\") || \"\";\n  const ruleID = params.get(\"ruleID\") || \"\";\n\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket-replication-edit\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const backLink = IAM_PAGES.BUCKETS + `/${bucketName}/admin/replication`;\n\n  const [editLoading, setEditLoading] = useState<boolean>(true);\n  const [saveEdit, setSaveEdit] = useState<boolean>(false);\n  const [priority, setPriority] = useState<string>(\"1\");\n  const [destination, setDestination] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [repDeleteMarker, setRepDeleteMarker] = useState<boolean>(false);\n  const [metadataSync, setMetadataSync] = useState<boolean>(false);\n  const [initialTags, setInitialTags] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [targetStorageClass, setTargetStorageClass] = useState<string>(\"\");\n  const [repExisting, setRepExisting] = useState<boolean>(false);\n  const [repDelete, setRepDelete] = useState<boolean>(false);\n  const [ruleState, setRuleState] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (editLoading && bucketName && ruleID) {\n      api.buckets\n\n        .getBucketReplicationRule(bucketName, ruleID)\n        .then((res) => {\n          setPriority(res.data.priority ? res.data.priority.toString() : \"\");\n          const pref = res.data.prefix || \"\";\n          const tag = res.data.tags || \"\";\n          setPrefix(pref);\n          setInitialTags(tag);\n          setTags(tag);\n          setDestination(res.data.destination?.bucket || \"\");\n          setRepDeleteMarker(res.data.delete_marker_replication || false);\n          setTargetStorageClass(res.data.storageClass || \"\");\n          setRepExisting(!!res.data.existingObjects);\n          setRepDelete(!!res.data.deletes_replication);\n          setRuleState(res.data.status === \"Enabled\");\n          setMetadataSync(!!res.data.metadata_replication);\n\n          setEditLoading(false);\n        })\n        .catch((err) => {\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          setEditLoading(false);\n        });\n    }\n  }, [editLoading, dispatch, bucketName, ruleID]);\n\n  useEffect(() => {\n    if (saveEdit && bucketName && ruleID) {\n      const remoteBucketsInfo = {\n        arn: destination,\n        ruleState: ruleState,\n        prefix: prefix,\n        tags: tags,\n        replicateDeleteMarkers: repDeleteMarker,\n        replicateDeletes: repDelete,\n        replicateExistingObjects: repExisting,\n        replicateMetadata: metadataSync,\n        priority: parseInt(priority),\n        storageClass: targetStorageClass,\n      };\n\n      api.buckets\n        .updateMultiBucketReplication(bucketName, ruleID, remoteBucketsInfo)\n        .then(() => {\n          navigate(backLink);\n        })\n        .catch((err) => {\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          setSaveEdit(false);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    saveEdit,\n    bucketName,\n    ruleID,\n    destination,\n    prefix,\n    tags,\n    repDeleteMarker,\n    priority,\n    repDelete,\n    repExisting,\n    ruleState,\n    metadataSync,\n    targetStorageClass,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            label={\"Edit Bucket Replication\"}\n            onClick={() => navigate(backLink)}\n          />\n        }\n        actions={<HelpMenu />}\n      />\n      <PageLayout>\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            setSaveEdit(true);\n          }}\n        >\n          <FormLayout\n            containerPadding={false}\n            withBorders={false}\n            helpBox={\n              <HelpBox\n                iconComponent={<BucketReplicationIcon />}\n                title=\"Bucket Replication Configuration\"\n                help={\n                  <Fragment>\n                    <Box sx={{ paddingTop: \"10px\" }}>\n                      For each write operation to the bucket, MinIO checks all\n                      configured replication rules for the bucket and applies\n                      the matching rule with highest configured priority.\n                    </Box>\n                    <Box sx={{ paddingTop: \"10px\" }}>\n                      MinIO supports enabling replication of existing objects in\n                      a bucket.\n                    </Box>\n                    <Box sx={{ paddingTop: \"10px\" }}>\n                      MinIO does not enable existing object replication by\n                      default. Objects created before replication was configured\n                      or while replication is disabled are not synchronized to\n                      the target deployment unless replication of existing\n                      objects is enabled.\n                    </Box>\n                    <Box sx={{ paddingTop: \"10px\" }}>\n                      MinIO supports replicating delete operations, where MinIO\n                      synchronizes deleting specific object versions and new\n                      delete markers. Delete operation replication uses the same\n                      replication process as all other replication operations.\n                    </Box>{\" \"}\n                  </Fragment>\n                }\n              />\n            }\n          >\n            <Switch\n              checked={ruleState}\n              id=\"ruleState\"\n              name=\"ruleState\"\n              label=\"Rule State\"\n              onChange={(e) => {\n                setRuleState(e.target.checked);\n              }}\n            />\n            <ReadBox label={\"Destination\"} sx={{ width: \"100%\" }}>\n              {destination}\n            </ReadBox>\n            <InputBox\n              id=\"priority\"\n              name=\"priority\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                if (e.target.validity.valid) {\n                  setPriority(e.target.value);\n                }\n              }}\n              label=\"Priority\"\n              value={priority}\n              pattern={\"[0-9]*\"}\n            />\n            <InputBox\n              id=\"storageClass\"\n              name=\"storageClass\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setTargetStorageClass(e.target.value);\n              }}\n              placeholder=\"STANDARD_IA,REDUCED_REDUNDANCY etc\"\n              label=\"Storage Class\"\n              value={targetStorageClass}\n            />\n            <fieldset className={\"inputItem\"}>\n              <legend>Object Filters</legend>\n              <InputBox\n                id=\"prefix\"\n                name=\"prefix\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPrefix(e.target.value);\n                }}\n                placeholder=\"prefix\"\n                label=\"Prefix\"\n                value={prefix}\n              />\n              <QueryMultiSelector\n                name=\"tags\"\n                label=\"Tags\"\n                elements={initialTags}\n                onChange={(vl: string) => {\n                  setTags(vl);\n                }}\n                keyPlaceholder=\"Tag Key\"\n                valuePlaceholder=\"Tag Value\"\n                withBorder\n              />\n            </fieldset>\n            <fieldset className={\"inputItem\"}>\n              <legend>Replication Options</legend>\n              <Switch\n                checked={repExisting}\n                id=\"repExisting\"\n                name=\"repExisting\"\n                label=\"Existing Objects\"\n                onChange={(e) => {\n                  setRepExisting(e.target.checked);\n                }}\n                description={\"Replicate existing objects\"}\n              />\n              <Switch\n                checked={metadataSync}\n                id=\"metadatataSync\"\n                name=\"metadatataSync\"\n                label=\"Metadata Sync\"\n                onChange={(e) => {\n                  setMetadataSync(e.target.checked);\n                }}\n                description={\"Metadata Sync\"}\n              />\n              <Switch\n                checked={repDeleteMarker}\n                id=\"deleteMarker\"\n                name=\"deleteMarker\"\n                label=\"Delete Marker\"\n                onChange={(e) => {\n                  setRepDeleteMarker(e.target.checked);\n                }}\n                description={\"Replicate soft deletes\"}\n              />\n              <Switch\n                checked={repDelete}\n                id=\"repDelete\"\n                name=\"repDelete\"\n                label=\"Deletes\"\n                onChange={(e) => {\n                  setRepDelete(e.target.checked);\n                }}\n                description={\"Replicate versioned deletes\"}\n              />\n            </fieldset>\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"end\",\n                gap: 10,\n                paddingTop: 10,\n              }}\n            >\n              <Button\n                id={\"cancel-edit-replication\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={editLoading || saveEdit}\n                onClick={() => {\n                  navigate(backLink);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save-replication\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                disabled={editLoading || saveEdit}\n                label={\"Save\"}\n              />\n            </Grid>\n          </FormLayout>\n        </form>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default EditBucketReplication;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  Fragment,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport {\n  AddIcon,\n  Box,\n  Grid,\n  HelpIcon,\n  InputBox,\n  InputLabel,\n  Tooltip,\n} from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={\"lineInputBoxes inputItem\"}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBox\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={\"queryDiv\"}>:</span>\n        <InputBox\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          \"& .lineInputBoxes\": {\n            display: \"flex\",\n          },\n          \"& .queryDiv\": {\n            alignSelf: \"center\",\n            margin: \"-15px 4px 0\",\n            fontWeight: 600,\n          },\n        }}\n        className={\"inputItem\"}\n      >\n        <InputLabel>\n          {label}\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <HelpIcon style={{ width: 13, height: 13 }} />\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            padding: 15,\n            height: 150,\n            overflowY: \"auto\",\n            position: \"relative\",\n            marginTop: 15,\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\nexport default QueryMultiSelector;\n"],"names":["EditBucketReplication","dispatch","useAppDispatch","navigate","useNavigate","params","URLSearchParams","document","location","search","bucketName","get","ruleID","useEffect","setHelpName","backLink","IAM_PAGES","BUCKETS","editLoading","setEditLoading","useState","saveEdit","setSaveEdit","priority","setPriority","destination","setDestination","prefix","setPrefix","repDeleteMarker","setRepDeleteMarker","metadataSync","setMetadataSync","initialTags","setInitialTags","tags","setTags","targetStorageClass","setTargetStorageClass","repExisting","setRepExisting","repDelete","setRepDelete","ruleState","setRuleState","api","buckets","getBucketReplicationRule","then","res","_res$data$destination","data","toString","pref","tag","bucket","delete_marker_replication","storageClass","existingObjects","deletes_replication","status","metadata_replication","catch","err","setErrorSnackMessage","errorToHandler","error","remoteBucketsInfo","arn","replicateDeleteMarkers","replicateDeletes","replicateExistingObjects","replicateMetadata","parseInt","updateMultiBucketReplication","_jsxs","Fragment","children","_jsx","PageHeaderWrapper","label","BackLink","onClick","actions","HelpMenu","PageLayout","noValidate","autoComplete","onSubmit","e","preventDefault","FormLayout","containerPadding","withBorders","helpBox","HelpBox","iconComponent","BucketReplicationIcon","title","help","Box","sx","paddingTop","Switch","checked","id","name","onChange","target","ReadBox","width","InputBox","validity","valid","value","pattern","placeholder","className","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","description","Grid","item","xs","display","flexDirection","justifyContent","gap","Button","type","variant","disabled","_ref","tooltip","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","length","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","index","onChangeValue","debounce","queryString","keyVal","insertString","inputs","map","overlayIcon","AddIcon","overlayAction","addEmptyLine","trim","keysList","valuesList","alignSelf","margin","fontWeight","InputLabel","marginLeft","alignItems","Tooltip","placement","HelpIcon","style","height","padding","overflowY","position","marginTop","ref"],"sourceRoot":""}