{"version":3,"file":"static/js/8642.6ba87ff0.chunk.js","mappings":"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","sources":["screens/Console/KMS/ListKeys.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { AddIcon, Button, DataTable, Grid, PageLayout, RefreshIcon } from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../../../common/api\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../common/SecureComponent\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_SCOPES,\n} from \"../../../common/SecureComponent/permissions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { useAppDispatch } from \"../../../store\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../systemSlice\";\nimport SearchBox from \"../Common/SearchBox\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\nconst ListKeys = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [filter, setFilter] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [records, setRecords] = useState<[]>([]);\n\n  const createKey = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.KMS_CREATE_KEY,\n  ]);\n\n  const displayKeys = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.KMS_LIST_KEYS,\n  ]);\n\n  useEffect(() => {\n    fetchRecords();\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n  }, [filter]);\n\n  useEffect(() => {\n    if (loading) {\n      if (displayKeys) {\n        let pattern = filter.trim() === \"\" ? \"*\" : filter.trim();\n        api\n          .invoke(\"GET\", `/api/v1/kms/keys?pattern=${pattern}`)\n          .then((res) => {\n            setLoading(false);\n            setRecords(res.results);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoading(false);\n            dispatch(setErrorSnackMessage(err));\n          });\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [loading, setLoading, setRecords, dispatch, displayKeys, filter]);\n\n  const fetchRecords = () => {\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    dispatch(setHelpName(\"list_keys\"));\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      <PageHeaderWrapper\n        label=\"Key Management Service Keys\"\n        actions={<HelpMenu />}\n      />\n\n      <PageLayout>\n        <Grid container>\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              \"& button\": {\n                marginLeft: \"8px\",\n              },\n            }}\n          >\n            <SecureComponent\n              scopes={[IAM_SCOPES.KMS_LIST_KEYS]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <SearchBox\n                onChange={setFilter}\n                placeholder=\"Search Keys with pattern\"\n                value={filter}\n              />\n            </SecureComponent>\n\n            <SecureComponent\n              scopes={[IAM_SCOPES.KMS_LIST_KEYS]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper tooltip={\"Refresh\"}>\n                <Button\n                  id={\"refresh-keys\"}\n                  variant=\"regular\"\n                  icon={<RefreshIcon />}\n                  onClick={() => setLoading(true)}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n            {createKey ? (\n              <SecureComponent\n                scopes={[IAM_SCOPES.KMS_CREATE_KEY]}\n                resource={CONSOLE_UI_RESOURCE}\n                errorProps={{ disabled: true }}\n              >\n                <TooltipWrapper tooltip={\"Create Key\"}>\n                  <Button\n                    id={\"create-key\"}\n                    label={\"Create Key\"}\n                    variant={\"callAction\"}\n                    icon={<AddIcon />}\n                    onClick={() => navigate(IAM_PAGES.KMS_KEYS_ADD)}\n                  />\n                </TooltipWrapper>\n              </SecureComponent>\n            ) : null}\n          </Grid>\n          <Grid item xs={12} sx={{ marginTop: \"5px\" }}>\n            <SecureComponent\n              scopes={[IAM_SCOPES.KMS_LIST_KEYS]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <DataTable\n                columns={[\n                  { label: \"Name\", elementKey: \"name\" },\n                  { label: \"Created By\", elementKey: \"createdBy\" },\n                  { label: \"Created At\", elementKey: \"createdAt\" },\n                ]}\n                isLoading={loading}\n                records={records}\n                entityName=\"Keys\"\n                idField=\"name\"\n              />\n            </SecureComponent>\n          </Grid>\n        </Grid>\n      </PageLayout>\n    </React.Fragment>\n  );\n};\n\nexport default ListKeys;\n"],"names":["ListKeys","dispatch","useAppDispatch","navigate","useNavigate","filter","setFilter","useState","loading","setLoading","records","setRecords","createKey","hasPermission","CONSOLE_UI_RESOURCE","IAM_SCOPES","KMS_CREATE_KEY","displayKeys","KMS_LIST_KEYS","useEffect","fetchRecords","pattern","trim","api","invoke","then","res","results","catch","err","setErrorSnackMessage","setHelpName","_jsxs","React","children","_jsx","PageHeaderWrapper","label","actions","HelpMenu","PageLayout","Grid","container","item","xs","sx","display","alignItems","justifyContent","marginLeft","SecureComponent","scopes","resource","errorProps","disabled","SearchBox","onChange","placeholder","value","TooltipWrapper","tooltip","Button","id","variant","icon","RefreshIcon","onClick","AddIcon","IAM_PAGES","KMS_KEYS_ADD","marginTop","DataTable","columns","elementKey","isLoading","entityName","idField"],"sourceRoot":""}