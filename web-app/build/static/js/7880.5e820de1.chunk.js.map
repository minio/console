{"version":3,"file":"static/js/7880.5e820de1.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/AddBucketReplication.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  BackLink,\n  Box,\n  BucketReplicationIcon,\n  Button,\n  FormLayout,\n  Grid,\n  HelpBox,\n  InputBox,\n  PageLayout,\n  Select,\n  Switch,\n} from \"mds\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport QueryMultiSelector from \"screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport { getBytes, k8sScalarUnitsExcluding } from \"common/utils\";\nimport get from \"lodash/get\";\nimport InputUnitMenu from \"screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu\";\n\nconst AddBucketReplication = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  let params = new URLSearchParams(document.location.search);\n  const bucketName = params.get(\"bucketName\") || \"\";\n  const nextPriority = params.get(\"nextPriority\") || \"1\";\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [priority, setPriority] = useState<string>(nextPriority);\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [targetURL, setTargetURL] = useState<string>(\"\");\n  const [targetStorageClass, setTargetStorageClass] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [targetBucket, setTargetBucket] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [useTLS, setUseTLS] = useState<boolean>(true);\n  const [repDeleteMarker, setRepDeleteMarker] = useState<boolean>(true);\n  const [repDelete, setRepDelete] = useState<boolean>(true);\n  const [metadataSync, setMetadataSync] = useState<boolean>(true);\n  const [repExisting, setRepExisting] = useState<boolean>(true);\n  const [tags, setTags] = useState<string>(\"\");\n  const [replicationMode, setReplicationMode] = useState<\"async\" | \"sync\">(\n    \"async\",\n  );\n  const [bandwidthScalar, setBandwidthScalar] = useState<string>(\"100\");\n  const [bandwidthUnit, setBandwidthUnit] = useState<string>(\"Gi\");\n  const [healthCheck, setHealthCheck] = useState<string>(\"60\");\n  const [validated, setValidated] = useState<boolean>(false);\n  const backLink = IAM_PAGES.BUCKETS + `/${bucketName}/admin/replication`;\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket-replication-add\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const addRecord = () => {\n    const replicate = [\n      {\n        originBucket: bucketName,\n        destinationBucket: targetBucket,\n      },\n    ];\n\n    const hc = parseInt(healthCheck);\n\n    const endURL = `${useTLS ? \"https://\" : \"http://\"}${targetURL}`;\n\n    const remoteBucketsInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: endURL,\n      region: region,\n      bucketsRelation: replicate,\n      syncMode: replicationMode,\n      bandwidth:\n        replicationMode === \"async\"\n          ? parseInt(getBytes(bandwidthScalar, bandwidthUnit, true))\n          : 0,\n      healthCheckPeriod: hc,\n      prefix: prefix,\n      tags: tags,\n      replicateDeleteMarkers: repDeleteMarker,\n      replicateDeletes: repDelete,\n      replicateExistingObjects: repExisting,\n      priority: parseInt(priority),\n      storageClass: targetStorageClass,\n      replicateMetadata: metadataSync,\n    };\n\n    api.bucketsReplication\n      .setMultiBucketReplication(remoteBucketsInfo)\n      .then((res) => {\n        setAddLoading(false);\n\n        const states = get(res.data, \"replicationState\", []);\n\n        if (states.length > 0) {\n          const itemVal = states[0];\n\n          setAddLoading(false);\n\n          if (itemVal.errorString && itemVal.errorString !== \"\") {\n            dispatch(\n              setErrorSnackMessage({\n                errorMessage: \"There was an error\",\n                detailedError: itemVal.errorString,\n              }),\n            );\n            // navigate(backLink);\n            return;\n          }\n          navigate(backLink);\n          return;\n        }\n        dispatch(\n          setErrorSnackMessage({\n            errorMessage: \"No changes applied\",\n            detailedError: \"\",\n          }),\n        );\n      })\n      .catch((err) => {\n        console.log(\"this is an error!\");\n        setAddLoading(false);\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  useEffect(() => {\n    !validated &&\n      accessKey.length >= 3 &&\n      secretKey.length >= 8 &&\n      targetBucket.length >= 3 &&\n      targetURL.length > 0 &&\n      setValidated(true);\n  }, [targetURL, accessKey, secretKey, targetBucket, validated]);\n\n  useEffect(() => {\n    if (\n      validated &&\n      (accessKey.length < 3 ||\n        secretKey.length < 8 ||\n        targetBucket.length < 3 ||\n        targetURL.length < 1)\n    ) {\n      setValidated(false);\n    }\n  }, [targetURL, accessKey, secretKey, targetBucket, validated]);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            label={\"Add Bucket Replication Rule - \" + bucketName}\n            onClick={() => navigate(backLink)}\n          />\n        }\n        actions={<HelpMenu />}\n      />\n      <PageLayout>\n        <FormLayout\n          title=\"Add Replication Rule\"\n          icon={<BucketReplicationIcon />}\n          helpBox={\n            <HelpBox\n              iconComponent={<BucketReplicationIcon />}\n              title=\"Bucket Replication Configuration\"\n              help={\n                <Fragment>\n                  <Box sx={{ paddconngTop: \"10px\" }}>\n                    The bucket selected in this deployment acts as the “source”\n                    while the configured remote deployment acts as the “target”.\n                  </Box>\n                  <Box sx={{ paddingTop: \"10px\" }}>\n                    For each write operation to this \"source\" bucket, MinIO\n                    checks all configured replication rules and applies the\n                    matching rule with highest configured priority.\n                  </Box>\n                  <Box sx={{ paddingTop: \"10px\" }}>\n                    MinIO supports automatically replicating existing objects in\n                    a bucket; this setting is enabled by default. Please note\n                    that objects created before replication was configured or\n                    while replication is disabled are not synchronized to the\n                    target deployment in case this setting is not enabled.\n                  </Box>\n                  <Box sx={{ paddingTop: \"10px\" }}>\n                    MinIO supports replicating delete operations, where MinIO\n                    synchronizes deleting specific object versions and new\n                    delete markers. Delete operation replication uses the same\n                    replication process as all other replication operations.\n                  </Box>{\" \"}\n                </Fragment>\n              }\n            />\n          }\n        >\n          <form\n            noValidate\n            autoComplete=\"off\"\n            onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n              e.preventDefault();\n              setAddLoading(true);\n              addRecord();\n            }}\n          >\n            <InputBox\n              id=\"priority\"\n              name=\"priority\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                if (e.target.validity.valid) {\n                  setPriority(e.target.value);\n                }\n              }}\n              label=\"Priority\"\n              value={priority}\n              pattern={\"[0-9]*\"}\n            />\n\n            <InputBox\n              id=\"targetURL\"\n              name=\"targetURL\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setTargetURL(e.target.value);\n              }}\n              placeholder=\"play.min.io\"\n              label=\"Target URL\"\n              value={targetURL}\n            />\n\n            <Switch\n              checked={useTLS}\n              id=\"useTLS\"\n              name=\"useTLS\"\n              label=\"Use TLS\"\n              onChange={(e) => {\n                setUseTLS(e.target.checked);\n              }}\n              value=\"yes\"\n            />\n\n            <InputBox\n              id=\"accessKey\"\n              name=\"accessKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setAccessKey(e.target.value);\n              }}\n              label=\"Access Key\"\n              value={accessKey}\n            />\n\n            <InputBox\n              id=\"secretKey\"\n              name=\"secretKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setSecretKey(e.target.value);\n              }}\n              label=\"Secret Key\"\n              value={secretKey}\n            />\n\n            <InputBox\n              id=\"targetBucket\"\n              name=\"targetBucket\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setTargetBucket(e.target.value);\n              }}\n              label=\"Target Bucket\"\n              value={targetBucket}\n            />\n\n            <InputBox\n              id=\"region\"\n              name=\"region\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setRegion(e.target.value);\n              }}\n              label=\"Region\"\n              value={region}\n            />\n\n            <Select\n              id=\"replication_mode\"\n              name=\"replication_mode\"\n              onChange={(value) => {\n                setReplicationMode(value as \"async\" | \"sync\");\n              }}\n              label=\"Replication Mode\"\n              value={replicationMode}\n              options={[\n                { label: \"Asynchronous\", value: \"async\" },\n                { label: \"Synchronous\", value: \"sync\" },\n              ]}\n            />\n\n            {replicationMode === \"async\" && (\n              <Box className={\"inputItem\"}>\n                <InputBox\n                  type=\"number\"\n                  id=\"bandwidth_scalar\"\n                  name=\"bandwidth_scalar\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    if (e.target.validity.valid) {\n                      setBandwidthScalar(e.target.value as string);\n                    }\n                  }}\n                  label=\"Bandwidth\"\n                  value={bandwidthScalar}\n                  min=\"0\"\n                  pattern={\"[0-9]*\"}\n                  overlayObject={\n                    <InputUnitMenu\n                      id={\"quota_unit\"}\n                      onUnitChange={(newValue) => {\n                        setBandwidthUnit(newValue);\n                      }}\n                      unitSelected={bandwidthUnit}\n                      unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\n                      disabled={false}\n                    />\n                  }\n                />\n              </Box>\n            )}\n\n            <InputBox\n              id=\"healthCheck\"\n              name=\"healthCheck\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setHealthCheck(e.target.value as string);\n              }}\n              label=\"Health Check Duration\"\n              value={healthCheck}\n            />\n\n            <InputBox\n              id=\"storageClass\"\n              name=\"storageClass\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setTargetStorageClass(e.target.value);\n              }}\n              placeholder=\"STANDARD_IA,REDUCED_REDUNDANCY etc\"\n              label=\"Storage Class\"\n              value={targetStorageClass}\n            />\n\n            <fieldset className={\"inputItem\"}>\n              <legend>Object Filters</legend>\n              <InputBox\n                id=\"prefix\"\n                name=\"prefix\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPrefix(e.target.value);\n                }}\n                placeholder=\"prefix\"\n                label=\"Prefix\"\n                value={prefix}\n              />\n              <QueryMultiSelector\n                name=\"tags\"\n                label=\"Tags\"\n                elements={\"\"}\n                onChange={(vl: string) => {\n                  setTags(vl);\n                }}\n                keyPlaceholder=\"Tag Key\"\n                valuePlaceholder=\"Tag Value\"\n                withBorder\n              />\n            </fieldset>\n            <fieldset className={\"inputItem\"}>\n              <legend>Replication Options</legend>\n              <Switch\n                checked={repExisting}\n                id=\"repExisting\"\n                name=\"repExisting\"\n                label=\"Existing Objects\"\n                onChange={(e) => {\n                  setRepExisting(e.target.checked);\n                }}\n                description={\"Replicate existing objects\"}\n              />\n              <Switch\n                checked={metadataSync}\n                id=\"metadatataSync\"\n                name=\"metadatataSync\"\n                label=\"Metadata Sync\"\n                onChange={(e) => {\n                  setMetadataSync(e.target.checked);\n                }}\n                description={\"Metadata Sync\"}\n              />\n              <Switch\n                checked={repDeleteMarker}\n                id=\"deleteMarker\"\n                name=\"deleteMarker\"\n                label=\"Delete Marker\"\n                onChange={(e) => {\n                  setRepDeleteMarker(e.target.checked);\n                }}\n                description={\"Replicate soft deletes\"}\n              />\n              <Switch\n                checked={repDelete}\n                id=\"repDelete\"\n                name=\"repDelete\"\n                label=\"Deletes\"\n                onChange={(e) => {\n                  setRepDelete(e.target.checked);\n                }}\n                description={\"Replicate versioned deletes\"}\n              />\n            </fieldset>\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"end\",\n                gap: 10,\n                paddingTop: 10,\n              }}\n            >\n              <Button\n                id={\"cancel\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  navigate(backLink);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"submit\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !validated}\n                label={\"Save\"}\n              />\n            </Grid>\n          </form>\n        </FormLayout>\n      </PageLayout>\n    </Fragment>\n  );\n};\nexport default AddBucketReplication;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { DropdownSelector, SelectorType } from \"mds\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\ninterface IInputUnitBox {\n  id: string;\n  unitSelected: string;\n  unitsList: SelectorType[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst UnitMenuButton = styled.button(({ theme }) => ({\n  border: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n  borderRadius: 3,\n  color: get(theme, \"secondaryText\", \"#5B5C5C\"),\n  backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  fontSize: 12,\n}));\n\nconst InputUnitMenu = ({\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <UnitMenuButton\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </UnitMenuButton>\n      <DropdownSelector\n        id={\"upload-main-menu\"}\n        options={unitsList}\n        selectedOption={\"\"}\n        onSelect={(value) => handleClose(value)}\n        hideTriggerAction={() => {\n          handleClose(\"\");\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={\"end\"}\n      />\n    </Fragment>\n  );\n};\n\nexport default InputUnitMenu;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  Fragment,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport {\n  AddIcon,\n  Box,\n  Grid,\n  HelpIcon,\n  InputBox,\n  InputLabel,\n  Tooltip,\n} from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={\"lineInputBoxes inputItem\"}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBox\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={\"queryDiv\"}>:</span>\n        <InputBox\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          \"& .lineInputBoxes\": {\n            display: \"flex\",\n          },\n          \"& .queryDiv\": {\n            alignSelf: \"center\",\n            margin: \"-15px 4px 0\",\n            fontWeight: 600,\n          },\n        }}\n        className={\"inputItem\"}\n      >\n        <InputLabel>\n          {label}\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <HelpIcon style={{ width: 13, height: 13 }} />\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            padding: 15,\n            height: 150,\n            overflowY: \"auto\",\n            position: \"relative\",\n            marginTop: 15,\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\nexport default QueryMultiSelector;\n"],"names":["AddBucketReplication","dispatch","useAppDispatch","navigate","useNavigate","params","URLSearchParams","document","location","search","bucketName","get","nextPriority","addLoading","setAddLoading","useState","priority","setPriority","accessKey","setAccessKey","secretKey","setSecretKey","targetURL","setTargetURL","targetStorageClass","setTargetStorageClass","prefix","setPrefix","targetBucket","setTargetBucket","region","setRegion","useTLS","setUseTLS","repDeleteMarker","setRepDeleteMarker","repDelete","setRepDelete","metadataSync","setMetadataSync","repExisting","setRepExisting","tags","setTags","replicationMode","setReplicationMode","bandwidthScalar","setBandwidthScalar","bandwidthUnit","setBandwidthUnit","healthCheck","setHealthCheck","validated","setValidated","backLink","IAM_PAGES","BUCKETS","useEffect","setHelpName","length","_jsxs","Fragment","children","_jsx","PageHeaderWrapper","label","BackLink","onClick","actions","HelpMenu","PageLayout","FormLayout","title","icon","BucketReplicationIcon","helpBox","HelpBox","iconComponent","help","Box","sx","paddconngTop","paddingTop","noValidate","autoComplete","onSubmit","e","preventDefault","addRecord","replicate","originBucket","destinationBucket","hc","parseInt","remoteBucketsInfo","bucketsRelation","syncMode","bandwidth","getBytes","healthCheckPeriod","replicateDeleteMarkers","replicateDeletes","replicateExistingObjects","storageClass","replicateMetadata","api","bucketsReplication","setMultiBucketReplication","then","res","states","data","itemVal","errorString","setErrorSnackMessage","errorMessage","detailedError","catch","err","console","log","errorToHandler","error","InputBox","id","name","onChange","target","validity","valid","value","pattern","placeholder","Switch","checked","Select","options","className","type","min","overlayObject","InputUnitMenu","onUnitChange","newValue","unitSelected","unitsList","k8sScalarUnitsExcluding","disabled","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","description","Grid","item","xs","display","flexDirection","justifyContent","gap","Button","variant","color","UnitMenuButton","styled","button","_ref","theme","border","borderRadius","backgroundColor","fontSize","_ref2","anchorEl","setAnchorEl","React","open","Boolean","handleClose","newUnit","undefined","event","currentTarget","DropdownSelector","selectedOption","onSelect","hideTriggerAction","anchorOrigin","tooltip","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","index","onChangeValue","debounce","queryString","keyVal","insertString","inputs","map","toString","overlayIcon","AddIcon","overlayAction","addEmptyLine","trim","keysList","valuesList","alignSelf","margin","fontWeight","InputLabel","marginLeft","alignItems","width","Tooltip","placement","HelpIcon","style","height","withBorders","padding","overflowY","position","marginTop","ref"],"sourceRoot":""}