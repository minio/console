{"version":3,"file":"static/js/2372.6b4933ca.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/DateRangeSelector/DateRangeSelector.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Logs/LogSearch/utils.ts","screens/Console/Common/FormComponents/FilterInputWrapper/FilterInputWrapper.tsx","screens/Console/Logs/LogSearch/LogSearchFullModal.tsx","screens/Console/Common/MissingIntegration/MissingIntegration.tsx","screens/Console/Logs/LogSearch/LogsSearchMain.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport {\n  Button,\n  SyncIcon,\n  Grid,\n  Box,\n  breakPoints,\n  TimeIcon,\n  DateTimeInput,\n} from \"mds\";\nimport { DateTime } from \"luxon\";\n\ninterface IDateRangeSelector {\n  timeStart: DateTime | null;\n  setTimeStart: (value: DateTime | null) => void;\n  timeEnd: DateTime | null;\n  setTimeEnd: (value: DateTime | null) => void;\n  triggerSync?: () => void;\n  label?: string;\n  startLabel?: string;\n  endLabel?: string;\n}\n\nconst DateRangeSelector = ({\n  timeStart,\n  setTimeStart,\n  timeEnd,\n  setTimeEnd,\n  triggerSync,\n  label = \"Filter:\",\n  startLabel = \"Start Time:\",\n  endLabel = \"End Time:\",\n}: IDateRangeSelector) => {\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        \"& .filter-date-input-label, .end-time-input-label\": {\n          display: \"none\",\n        },\n        \"& .MuiInputBase-adornedEnd.filter-date-date-time-input\": {\n          width: \"100%\",\n          border: \"1px solid #eaeaea\",\n          paddingLeft: \"8px\",\n          paddingRight: \"8px\",\n          borderRadius: \"1px\",\n        },\n\n        \"& .MuiInputAdornment-root button\": {\n          height: \"20px\",\n          width: \"20px\",\n          marginRight: \"5px\",\n        },\n        \"& .filter-date-input-wrapper\": {\n          height: \"30px\",\n          width: \"100%\",\n\n          \"& .MuiTextField-root\": {\n            height: \"30px\",\n            width: \"90%\",\n\n            \"& input.Mui-disabled\": {\n              color: \"#000000\",\n              WebkitTextFillColor: \"#101010\",\n            },\n          },\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: \"grid\",\n          height: 40,\n          alignItems: \"center\",\n          gridTemplateColumns: \"auto 2fr auto\",\n          padding: 0,\n          [`@media (max-width: ${breakPoints.sm}px)`]: {\n            padding: 5,\n          },\n          [`@media (max-width: ${breakPoints.md}px)`]: {\n            gridTemplateColumns: \"1fr\",\n            height: \"auto\",\n          },\n          gap: \"5px\",\n        }}\n      >\n        <Box\n          sx={{ fontSize: \"14px\", fontWeight: 500, marginRight: \"5px\" }}\n          className={\"muted\"}\n        >\n          {label}\n        </Box>\n        <Box\n          customBorderPadding={\"0px\"}\n          sx={{\n            display: \"grid\",\n            height: 40,\n            alignItems: \"center\",\n            gridTemplateColumns: \"1fr 1fr\",\n            gap: \"8px\",\n            paddingLeft: \"8px\",\n            paddingRight: \"8px\",\n            [`@media (max-width: ${breakPoints.md}px)`]: {\n              height: \"auto\",\n              gridTemplateColumns: \"1fr\",\n            },\n          }}\n        >\n          <DateTimeInput\n            value={timeStart}\n            onChange={setTimeStart}\n            id=\"stTime\"\n            secondsSelector={false}\n            pickerStartComponent={\n              <Fragment>\n                <TimeIcon />\n                <span>{startLabel}</span>\n              </Fragment>\n            }\n          />\n          <DateTimeInput\n            value={timeEnd}\n            onChange={setTimeEnd}\n            id=\"endTime\"\n            secondsSelector={false}\n            pickerStartComponent={\n              <Fragment>\n                <TimeIcon />\n                <span>{endLabel}</span>\n              </Fragment>\n            }\n          />\n        </Box>\n\n        {triggerSync && (\n          <Box\n            sx={{\n              alignItems: \"flex-end\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <Button\n              id={\"sync\"}\n              type=\"button\"\n              variant=\"callAction\"\n              onClick={triggerSync}\n              icon={<SyncIcon />}\n              label={\"Sync\"}\n            />\n          </Box>\n        )}\n      </Box>\n    </Grid>\n  );\n};\n\nexport default DateRangeSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalBox, Snackbar } from \"mds\";\nimport { CSSObject } from \"styled-components\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  titleIcon?: React.ReactNode;\n  iconColor?: \"default\" | \"delete\" | \"accept\";\n  sx?: CSSObject;\n}\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  wideLimit = true,\n  titleIcon = null,\n  iconColor = \"default\",\n  sx,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar,\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (message === \"\" || (message && message.length < 5)) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <ModalBox\n      onClose={onClose}\n      open={modalOpen}\n      title={title}\n      titleIcon={titleIcon}\n      widthLimit={wideLimit}\n      sx={sx}\n      iconColor={iconColor}\n    >\n      <MainError isModal={true} />\n      <Snackbar\n        onClose={closeSnackBar}\n        open={openSnackbar}\n        message={message}\n        mode={\"inline\"}\n        variant={modalSnackMessage.type === \"error\" ? \"error\" : \"default\"}\n        autoHideDuration={modalSnackMessage.type === \"error\" ? 10 : 5}\n        condensed\n      />\n      {children}\n    </ModalBox>\n  );\n};\n\nexport default ModalWrapper;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const LogSearchColumnLabels = {\n  time: \"Timestamp\",\n  api_name: \"API Name\",\n  access_key: \"Access Key\",\n  bucket: \"Bucket\",\n  object: \"Object\",\n  remote_host: \"Remote Host\",\n  request_id: \"Request ID\",\n  user_agent: \"User Agent\",\n  response_status: \"Response Status\",\n  response_status_code: \"Response Status Code\",\n  request_content_length: \"Request Content Length\",\n  response_content_length: \"Response Content Length\",\n  time_to_response_ns: \"Time to Response NS\",\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { InputBox, InputLabel, Box } from \"mds\";\n\ninterface IFilterInputWrapper {\n  value: string;\n  onChange: (txtVar: string) => any;\n  label: string;\n  placeholder?: string;\n  id: string;\n  name: string;\n}\n\nconst FilterInputWrapper = ({\n  label,\n  onChange,\n  value,\n  placeholder = \"\",\n  id,\n  name,\n}: IFilterInputWrapper) => {\n  return (\n    <Fragment>\n      <Box\n        sx={{\n          flexGrow: 1,\n          margin: \"0 15px\",\n        }}\n      >\n        <InputLabel>{label}</InputLabel>\n        <InputBox\n          placeholder={placeholder}\n          id={id}\n          name={name}\n          label=\"\"\n          onChange={(val) => {\n            onChange(val.target.value);\n          }}\n          sx={{\n            \"& input\": {\n              height: 30,\n            },\n          }}\n          value={value}\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default FilterInputWrapper;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid } from \"mds\";\nimport get from \"lodash/get\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { IReqInfoSearchResults } from \"./types\";\nimport { LogSearchColumnLabels } from \"./utils\";\n\ninterface ILogSearchFullModal {\n  modalOpen: boolean;\n  logSearchElement: IReqInfoSearchResults;\n  onClose: () => void;\n}\n\nconst LogSearchFullModal = ({\n  modalOpen,\n  logSearchElement,\n  onClose,\n}: ILogSearchFullModal) => {\n  const jsonItems = Object.keys(logSearchElement);\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={modalOpen}\n        title=\"Full Log Information\"\n        onClose={() => {\n          onClose();\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12}>\n            <table>\n              <tbody>\n                {jsonItems.map((objectKey: string, index: number) => (\n                  <tr key={`logSearch-${index.toString()}`}>\n                    <th\n                      style={{\n                        fontWeight: 700,\n                        paddingRight: \"10px\",\n                        textAlign: \"left\",\n                      }}\n                    >\n                      {get(LogSearchColumnLabels, objectKey, `${objectKey}`)}\n                    </th>\n                    <td>{get(logSearchElement, objectKey, \"\")}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            <Button\n              id={\"close-log-search\"}\n              variant=\"callAction\"\n              color=\"primary\"\n              onClick={onClose}\n              label={\"Close\"}\n            />\n          </Grid>\n        </Grid>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default LogSearchFullModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { HelpBox, Grid } from \"mds\";\n\ninterface IMissingIntegration {\n  iconComponent: any;\n  entity: string;\n  documentationLink: string;\n}\n\nconst MissingIntegration = ({\n  iconComponent,\n  entity,\n  documentationLink,\n}: IMissingIntegration) => {\n  return (\n    <Grid\n      container\n      sx={{\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Grid item xs={8}>\n        <HelpBox\n          title={`${entity} not available`}\n          iconComponent={iconComponent}\n          help={\n            <Fragment>\n              This feature is not available.\n              <br />\n              Please configure{\" \"}\n              <a href={documentationLink} target=\"_blank\" rel=\"noopener\">\n                {entity}\n              </a>{\" \"}\n              first to use this feature.\n            </Fragment>\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MissingIntegration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport { CSSObject } from \"styled-components\";\nimport {\n  Box,\n  breakPoints,\n  Button,\n  DataTable,\n  ExpandOptionsButton,\n  Grid,\n  PageLayout,\n  SearchIcon,\n} from \"mds\";\nimport { DateTime } from \"luxon\";\nimport { IReqInfoSearchResults, ISearchResponse } from \"./types\";\nimport { niceBytes, nsToSeconds } from \"../../../../common/utils\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { LogSearchColumnLabels } from \"./utils\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_SCOPES,\n} from \"../../../../common/SecureComponent/permissions\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { SecureComponent } from \"../../../../common/SecureComponent\";\nimport api from \"../../../../common/api\";\nimport FilterInputWrapper from \"../../Common/FormComponents/FilterInputWrapper/FilterInputWrapper\";\nimport LogSearchFullModal from \"./LogSearchFullModal\";\nimport DateRangeSelector from \"../../Common/FormComponents/DateRangeSelector/DateRangeSelector\";\nimport MissingIntegration from \"../../Common/MissingIntegration/MissingIntegration\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\n\nconst filtersContainer: CSSObject = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginBottom: 12,\n};\n\nconst LogsSearchMain = () => {\n  const dispatch = useAppDispatch();\n  const features = useSelector(selFeatures);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [timeStart, setTimeStart] = useState<DateTime | null>(null);\n  const [timeEnd, setTimeEnd] = useState<DateTime | null>(null);\n  const [filterOpen, setFilterOpen] = useState<boolean>(false);\n  const [records, setRecords] = useState<IReqInfoSearchResults[]>([]);\n  const [bucket, setBucket] = useState<string>(\"\");\n  const [apiName, setApiName] = useState<string>(\"\");\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [userAgent, setUserAgent] = useState<string>(\"\");\n  const [object, setObject] = useState<string>(\"\");\n  const [requestID, setRequestID] = useState<string>(\"\");\n  const [responseStatus, setResponseStatus] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\" | undefined>(\n    \"DESC\",\n  );\n  const [columnsShown, setColumnsShown] = useState<string[]>([\n    \"time\",\n    \"api_name\",\n    \"access_key\",\n    \"bucket\",\n    \"object\",\n    \"remote_host\",\n    \"request_id\",\n    \"user_agent\",\n    \"response_status\",\n  ]);\n  const [nextPage, setNextPage] = useState<number>(0);\n  const [alreadyFetching, setAlreadyFetching] = useState<boolean>(false);\n  const [logSearchExtrasOpen, setLogSearchExtrasOpen] =\n    useState<boolean>(false);\n  const [selectedItem, setSelectedItem] =\n    useState<IReqInfoSearchResults | null>(null);\n\n  let recordsResp: any = null;\n  const logSearchEnabled = features && features.includes(\"log-search\");\n\n  const fetchRecords = useCallback(() => {\n    if (!alreadyFetching && logSearchEnabled) {\n      setAlreadyFetching(true);\n      let queryParams = `${bucket !== \"\" ? `&fp=bucket:${bucket}` : \"\"}${\n        object !== \"\" ? `&fp=object:${object}` : \"\"\n      }${apiName !== \"\" ? `&fp=api_name:${apiName}` : \"\"}${\n        accessKey !== \"\" ? `&fp=access_key:${accessKey}` : \"\"\n      }${requestID !== \"\" ? `&fp=request_id:${requestID}` : \"\"}${\n        userAgent !== \"\" ? `&fp=user_agent:${userAgent}` : \"\"\n      }${responseStatus !== \"\" ? `&fp=response_status:${responseStatus}` : \"\"}`;\n\n      queryParams = queryParams.trim();\n\n      if (queryParams.endsWith(\",\")) {\n        queryParams = queryParams.slice(0, -1);\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/logs/search?q=reqinfo${\n            queryParams !== \"\" ? `${queryParams}` : \"\"\n          }&pageSize=100&pageNo=${nextPage}&order=${\n            sortOrder === \"DESC\" ? \"timeDesc\" : \"timeAsc\"\n          }${\n            timeStart !== null ? `&timeStart=${timeStart.toUTC().toISO()}` : \"\"\n          }${timeEnd !== null ? `&timeEnd=${timeEnd.toUTC().toISO()}` : \"\"}`,\n        )\n        .then((res: ISearchResponse) => {\n          const fetchedResults = res.results || [];\n\n          setLoading(false);\n          setAlreadyFetching(false);\n          setRecords(fetchedResults);\n          setNextPage(nextPage + 1);\n\n          if (recordsResp !== null) {\n            recordsResp();\n          }\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setAlreadyFetching(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    } else {\n      setLoading(false);\n      setAlreadyFetching(false);\n    }\n  }, [\n    alreadyFetching,\n    logSearchEnabled,\n    bucket,\n    object,\n    apiName,\n    accessKey,\n    requestID,\n    userAgent,\n    responseStatus,\n    nextPage,\n    sortOrder,\n    timeStart,\n    timeEnd,\n    recordsResp,\n    dispatch,\n  ]);\n\n  useEffect(() => {\n    if (loading) {\n      setRecords([]);\n      fetchRecords();\n    }\n  }, [loading, sortOrder, fetchRecords]);\n\n  const triggerLoad = () => {\n    setNextPage(0);\n    setLoading(true);\n  };\n\n  const selectColumn = (colID: string) => {\n    let newArray: string[];\n\n    const columnShown = columnsShown.findIndex((item) => item === colID);\n\n    // Column Exist, We remove from Array\n    if (columnShown >= 0) {\n      newArray = columnsShown.filter((element) => element !== colID);\n    } else {\n      // Column not visible, we include it in the array\n      newArray = [...columnsShown, colID];\n    }\n\n    setColumnsShown(newArray);\n  };\n\n  const sortChange = (sortData: any) => {\n    const newSortDirection = get(sortData, \"sortDirection\", \"DESC\");\n    setSortOrder(newSortDirection);\n    setNextPage(0);\n    setLoading(true);\n  };\n\n  const loadMoreRecords = (_: { startIndex: number; stopIndex: number }) => {\n    fetchRecords();\n    return new Promise((resolve) => {\n      recordsResp = resolve;\n    });\n  };\n\n  const openExtraInformation = (item: IReqInfoSearchResults) => {\n    setSelectedItem(item);\n    setLogSearchExtrasOpen(true);\n  };\n\n  const closeViewExtraInformation = () => {\n    setSelectedItem(null);\n    setLogSearchExtrasOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(setHelpName(\"audit_logs\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      {logSearchExtrasOpen && selectedItem !== null && (\n        <LogSearchFullModal\n          logSearchElement={selectedItem}\n          modalOpen={logSearchExtrasOpen}\n          onClose={closeViewExtraInformation}\n        />\n      )}\n\n      <PageHeaderWrapper label=\"Audit Logs\" actions={<HelpMenu />} />\n\n      <PageLayout>\n        {!logSearchEnabled ? (\n          <MissingIntegration\n            entity={\"Audit Logs\"}\n            iconComponent={<SearchIcon />}\n            documentationLink=\"https://min.io/docs/minio/windows/operations/monitoring/minio-logging.html?ref=con\"\n          />\n        ) : (\n          <Fragment>\n            {\" \"}\n            <Box withBorders sx={{ marginBottom: 15 }}>\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  display: \"flex\",\n                  padding: 15,\n                  [`@media (max-width: ${breakPoints.lg}px)`]: {\n                    flexFlow: \"column\",\n                  },\n                }}\n              >\n                <Box>\n                  <DateRangeSelector\n                    setTimeEnd={(time) => setTimeEnd(time)}\n                    setTimeStart={(time) => setTimeStart(time)}\n                    timeEnd={timeEnd}\n                    timeStart={timeStart}\n                  />\n                </Box>\n                <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                  <ExpandOptionsButton\n                    label={`${filterOpen ? \"Hide\" : \"Show\"} advanced Filters`}\n                    open={filterOpen}\n                    onClick={() => {\n                      setFilterOpen(!filterOpen);\n                    }}\n                  />\n                </Box>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  display: filterOpen ? \"block\" : \"none\",\n                  overflowY: \"hidden\",\n                  marginBottom: filterOpen ? 12 : 0,\n                }}\n              >\n                <Box\n                  sx={{\n                    marginLeft: 15,\n                    marginBottom: 15,\n                    fontSize: 12,\n                    color: \"#9C9C9C\",\n                  }}\n                >\n                  Enable your preferred options to get filtered records.\n                  <br />\n                  You can use '*' to match any character, '.' to signify a\n                  single character or '\\' to scape an special character (E.g.\n                  mybucket-*)\n                </Box>\n                <Box sx={filtersContainer}>\n                  <FilterInputWrapper\n                    onChange={setBucket}\n                    value={bucket}\n                    label={\"Bucket\"}\n                    id=\"bucket\"\n                    name=\"bucket\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setApiName}\n                    value={apiName}\n                    label={\"API Name\"}\n                    id=\"api_name\"\n                    name=\"api_name\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setAccessKey}\n                    value={accessKey}\n                    label={\"Access Key\"}\n                    id=\"access_key\"\n                    name=\"access_key\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setUserAgent}\n                    value={userAgent}\n                    label={\"User Agent\"}\n                    id=\"user_agent\"\n                    name=\"user_agent\"\n                  />\n                </Box>\n                <Box sx={filtersContainer}>\n                  <FilterInputWrapper\n                    onChange={setObject}\n                    value={object}\n                    label={\"Object\"}\n                    id=\"object\"\n                    name=\"object\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setRequestID}\n                    value={requestID}\n                    label={\"Request ID\"}\n                    id=\"request_id\"\n                    name=\"request_id\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setResponseStatus}\n                    value={responseStatus}\n                    label={\"Response Status\"}\n                    id=\"response_status\"\n                    name=\"response_status\"\n                  />\n                </Box>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  marginBottom: 15,\n                  padding: \"0 15px 0 15px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                }}\n              >\n                <Button\n                  id={\"get-information\"}\n                  type=\"button\"\n                  variant=\"callAction\"\n                  onClick={triggerLoad}\n                  label={\"Get Information\"}\n                />\n              </Grid>\n            </Box>\n            <Grid item xs={12}>\n              <SecureComponent\n                scopes={[IAM_SCOPES.ADMIN_HEALTH_INFO]}\n                resource={CONSOLE_UI_RESOURCE}\n                errorProps={{ disabled: true }}\n              >\n                <DataTable\n                  columns={[\n                    {\n                      label: LogSearchColumnLabels.time,\n                      elementKey: \"time\",\n                      enableSort: true,\n                    },\n                    {\n                      label: LogSearchColumnLabels.api_name,\n                      elementKey: \"api_name\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.access_key,\n                      elementKey: \"access_key\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.bucket,\n                      elementKey: \"bucket\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.object,\n                      elementKey: \"object\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.remote_host,\n                      elementKey: \"remote_host\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.request_id,\n                      elementKey: \"request_id\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.user_agent,\n                      elementKey: \"user_agent\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.response_status,\n                      elementKey: \"response_status\",\n                      renderFunction: (element) => (\n                        <Fragment>\n                          <span>\n                            {element.response_status_code} (\n                            {element.response_status})\n                          </span>\n                        </Fragment>\n                      ),\n                      renderFullObject: true,\n                    },\n                    {\n                      label: LogSearchColumnLabels.request_content_length,\n                      elementKey: \"request_content_length\",\n                      renderFunction: niceBytes,\n                    },\n                    {\n                      label: LogSearchColumnLabels.response_content_length,\n                      elementKey: \"response_content_length\",\n                      renderFunction: niceBytes,\n                    },\n                    {\n                      label: LogSearchColumnLabels.time_to_response_ns,\n                      elementKey: \"time_to_response_ns\",\n                      renderFunction: nsToSeconds,\n                      contentTextAlign: \"right\",\n                    },\n                  ]}\n                  isLoading={loading}\n                  records={records}\n                  entityName=\"Logs\"\n                  customEmptyMessage={\n                    \"There is no information with this criteria\"\n                  }\n                  idField=\"request_id\"\n                  columnsSelector\n                  columnsShown={columnsShown}\n                  onColumnChange={selectColumn}\n                  customPaperHeight={\n                    filterOpen ? \"calc(100vh - 520px)\" : \"calc(100vh - 320px)\"\n                  }\n                  sortEnabled={{\n                    currentSort: \"time\",\n                    currentDirection: sortOrder,\n                    onSortClick: sortChange,\n                  }}\n                  infiniteScrollConfig={{\n                    recordsCount: 1000000,\n                    loadMoreRecords: loadMoreRecords,\n                  }}\n                  itemActions={[\n                    {\n                      type: \"view\",\n                      onClick: openExtraInformation,\n                    },\n                  ]}\n                  textSelectable\n                />\n              </SecureComponent>\n            </Grid>\n          </Fragment>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default LogsSearchMain;\n"],"names":["_ref","timeStart","setTimeStart","timeEnd","setTimeEnd","triggerSync","label","startLabel","endLabel","_jsx","Grid","item","xs","sx","display","width","border","paddingLeft","paddingRight","borderRadius","height","marginRight","color","WebkitTextFillColor","children","_jsxs","Box","alignItems","gridTemplateColumns","padding","breakPoints","sm","md","gap","fontSize","fontWeight","className","customBorderPadding","DateTimeInput","value","onChange","id","secondsSelector","pickerStartComponent","Fragment","TimeIcon","justifyContent","Button","type","variant","onClick","icon","SyncIcon","onClose","modalOpen","title","wideLimit","titleIcon","iconColor","dispatch","useAppDispatch","openSnackbar","setOpenSnackbar","useState","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","detailedErrorMsg","length","ModalBox","open","widthLimit","MainError","isModal","Snackbar","closeSnackBar","mode","autoHideDuration","condensed","LogSearchColumnLabels","time","api_name","access_key","bucket","object","remote_host","request_id","user_agent","response_status","response_status_code","request_content_length","response_content_length","time_to_response_ns","placeholder","name","flexGrow","margin","InputLabel","InputBox","val","target","logSearchElement","jsonItems","Object","keys","ModalWrapper","container","map","objectKey","index","style","textAlign","get","toString","iconComponent","entity","documentationLink","alignContent","HelpBox","help","href","rel","filtersContainer","marginBottom","LogsSearchMain","features","selFeatures","loading","setLoading","filterOpen","setFilterOpen","records","setRecords","setBucket","apiName","setApiName","accessKey","setAccessKey","userAgent","setUserAgent","setObject","requestID","setRequestID","responseStatus","setResponseStatus","sortOrder","setSortOrder","columnsShown","setColumnsShown","nextPage","setNextPage","alreadyFetching","setAlreadyFetching","logSearchExtrasOpen","setLogSearchExtrasOpen","selectedItem","setSelectedItem","recordsResp","logSearchEnabled","includes","fetchRecords","useCallback","queryParams","trim","endsWith","slice","api","invoke","toUTC","toISO","then","res","fetchedResults","results","catch","err","setErrorSnackMessage","setHelpName","LogSearchFullModal","closeViewExtraInformation","PageHeaderWrapper","actions","HelpMenu","PageLayout","withBorders","lg","flexFlow","DateRangeSelector","ExpandOptionsButton","overflowY","marginLeft","FilterInputWrapper","triggerLoad","SecureComponent","scopes","IAM_SCOPES","ADMIN_HEALTH_INFO","resource","CONSOLE_UI_RESOURCE","errorProps","disabled","DataTable","columns","elementKey","enableSort","renderFunction","element","renderFullObject","niceBytes","nsToSeconds","contentTextAlign","isLoading","entityName","customEmptyMessage","idField","columnsSelector","onColumnChange","colID","newArray","findIndex","filter","customPaperHeight","sortEnabled","currentSort","currentDirection","onSortClick","sortData","newSortDirection","infiniteScrollConfig","recordsCount","loadMoreRecords","_","Promise","resolve","itemActions","textSelectable","MissingIntegration","SearchIcon"],"sourceRoot":""}