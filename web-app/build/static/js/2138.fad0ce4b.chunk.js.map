{"version":3,"file":"static/js/2138.fad0ce4b.chunk.js","mappings":"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","sources":["screens/Console/EventDestinations/CustomForms/ResetConfigurationModal.tsx","screens/Console/IDP/AddIDPConfigurationHelpbox.tsx","screens/Console/IDP/LDAP/LDAPResultsBlock.tsx","screens/Console/IDP/LDAP/LDAPEntitiesQuery.tsx","screens/Console/IDP/LDAP/IDPLDAPConfigurationDetails.tsx","screens/Console/IDP/utils.tsx","screens/Console/Policies/PolicySelectors.tsx","utils/sortFunctions.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\nimport { ConfirmDeleteIcon, ProgressBar } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IResetConfiguration {\n  configurationName: string;\n  closeResetModalAndRefresh: (reloadConfiguration: boolean) => void;\n  resetOpen: boolean;\n}\n\nconst ResetConfigurationModal = ({\n  configurationName,\n  closeResetModalAndRefresh,\n  resetOpen,\n}: IResetConfiguration) => {\n  const dispatch = useAppDispatch();\n  const [resetLoading, setResetLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (resetLoading) {\n      api.configs\n        .resetConfig(configurationName)\n        .then(() => {\n          setResetLoading(false);\n          closeResetModalAndRefresh(true);\n        })\n        .catch((err) => {\n          setResetLoading(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [closeResetModalAndRefresh, configurationName, resetLoading, dispatch]);\n\n  const resetConfiguration = () => {\n    setResetLoading(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Restore Defaults`}\n      confirmText={\"Yes, Reset Configuration\"}\n      isOpen={resetOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={resetLoading}\n      onConfirm={resetConfiguration}\n      onClose={() => {\n        closeResetModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <Fragment>\n          {resetLoading && <ProgressBar />}\n          <Fragment>\n            Are you sure you want to restore these configurations to default\n            values?\n            <br />\n            <b\n              style={{\n                maxWidth: \"200px\",\n                whiteSpace: \"normal\",\n                wordWrap: \"break-word\",\n              }}\n            >\n              Please note that this may cause your system to not be accessible\n            </b>\n          </Fragment>\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default ResetConfigurationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { HelpIconFilled, Box } from \"mds\";\n\ninterface IContent {\n  icon: React.ReactNode;\n  text: string;\n  iconDescription: string;\n}\n\ninterface IAddIDPConfigurationHelpBoxProps {\n  helpText: string;\n  docLink: string;\n  docText: string;\n  contents: IContent[];\n}\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\n\nconst AddIDPConfigurationHelpBox = ({\n  helpText,\n  docLink,\n  docText,\n  contents,\n}: IAddIDPConfigurationHelpBoxProps) => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n          paddingBottom: \"20px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>{helpText}</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        {contents.map((content, index) => (\n          <Fragment key={`feature-item-${index}`}>\n            {content.icon && (\n              <Box sx={{ paddingBottom: \"20px\" }}>\n                <FeatureItem\n                  icon={content.icon}\n                  description={content.iconDescription}\n                />\n              </Box>\n            )}\n            <Box sx={{ paddingBottom: \"20px\" }}>{content.text}</Box>\n          </Fragment>\n        ))}\n        <Box sx={{ paddingBottom: \"20px\" }}>\n          <a href={docLink} target=\"_blank\" rel=\"noopener\">\n            {docText}\n          </a>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddIDPConfigurationHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Box, CollapseCaret, GroupsMenuIcon, SectionTitle } from \"mds\";\nimport { LdapEntities } from \"api/consoleApi\";\n\ninterface IResultBlock {\n  entityName: \"Group\" | \"User\" | \"Policy\";\n  results: LdapEntities;\n}\n\ninterface IEntityResultName {\n  name: string;\n}\n\ninterface IEntityResultItem {\n  blockName: \"Policies\" | \"Groups\" | \"Users\";\n  results: string[];\n}\n\nconst EntityResultTitle = ({ name }: IEntityResultName) => {\n  return (\n    <h4>\n      <CollapseCaret style={{ transform: \"rotateZ(90deg)\" }} />\n      {name}\n    </h4>\n  );\n};\n\nconst EntityResultItems = ({ blockName, results }: IEntityResultItem) => {\n  return (\n    <Fragment>\n      <strong>{blockName}:</strong>\n      <ul>\n        {results.map((res, index) => (\n          <li key={`policy-${blockName}-${index}`}>{res}</li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nconst LDAPResultsBlock = ({ entityName, results }: IResultBlock) => {\n  let entityLength = 0;\n\n  switch (entityName) {\n    case \"Group\":\n      entityLength = results.groups?.length || 0;\n      break;\n    case \"Policy\":\n      entityLength = results.policies?.length || 0;\n      break;\n    case \"User\":\n      entityLength = results.users?.length || 0;\n      break;\n  }\n\n  return (\n    <Box\n      className={\"resultElement\"}\n      sx={{\n        marginTop: 50,\n        \"&:first-of-type\": {\n          marginTop: 0,\n        },\n      }}\n    >\n      <SectionTitle\n        separator\n        sx={{ fontSize: 12 }}\n        icon={<GroupsMenuIcon style={{ width: 17, height: 17 }} />}\n        actions={\n          <Box sx={{ fontSize: 14 }}>\n            <strong>{entityLength}</strong> Entit\n            {entityLength === 1 ? \"y\" : \"ies\"} Found\n          </Box>\n        }\n      >\n        {entityName} Mappings\n      </SectionTitle>\n      <Box\n        className={\"resultsList\"}\n        sx={{\n          h4: {\n            borderBottom: \"#e2e2e2 1px solid\",\n            padding: \"12px 0\",\n            margin: 0,\n            marginBottom: 15,\n            display: \"flex\",\n            alignItems: \"center\",\n            \"& svg\": {\n              marginRight: 10,\n              fill: \"#3C77A7\",\n            },\n          },\n        }}\n      >\n        {entityName === \"Group\" &&\n          results.groups?.map((groupData, index) => {\n            return (\n              <Fragment key={`policy-res-${index}`}>\n                <EntityResultTitle name={groupData.group || \"\"} />\n                {groupData.policies && (\n                  <EntityResultItems\n                    blockName={\"Policies\"}\n                    results={groupData.policies}\n                  />\n                )}\n              </Fragment>\n            );\n          })}\n        {entityName === \"User\" &&\n          results.users?.map((groupData, index) => {\n            return (\n              <Fragment key={`users-res-${index}`}>\n                <EntityResultTitle name={groupData.user || \"\"} />\n                {groupData.policies && (\n                  <EntityResultItems\n                    blockName={\"Policies\"}\n                    results={groupData.policies}\n                  />\n                )}\n              </Fragment>\n            );\n          })}\n        {entityName === \"Policy\" &&\n          results.policies?.map((groupData, index) => {\n            return (\n              <Fragment key={`policy-map-${index}`}>\n                <EntityResultTitle name={groupData.policy || \"\"} />\n                {groupData.groups && (\n                  <EntityResultItems\n                    blockName={\"Groups\"}\n                    results={groupData.groups}\n                  />\n                )}\n                {groupData.users && (\n                  <EntityResultItems\n                    blockName={\"Users\"}\n                    results={groupData.users}\n                  />\n                )}\n              </Fragment>\n            );\n          })}\n      </Box>\n    </Box>\n  );\n};\n\nexport default LDAPResultsBlock;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  AddIcon,\n  Box,\n  Button,\n  Grid,\n  InputBox,\n  Loader,\n  RemoveIcon,\n  SearchIcon,\n  SectionTitle,\n  TimeIcon,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { DateTime } from \"luxon\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { LdapEntities } from \"api/consoleApi\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport LDAPResultsBlock from \"./LDAPResultsBlock\";\nimport PolicySelectors from \"../../Policies/PolicySelectors\";\n\nconst LDAPEntitiesQuery = () => {\n  const dispatch = useAppDispatch();\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [users, setUsers] = useState<string[]>([\"\"]);\n  const [groups, setGroups] = useState<string[]>([\"\"]);\n  const [results, setResults] = useState<LdapEntities | null>(null);\n\n  const selectedPolicies = useSelector(\n    (state: AppState) => state.createUser.selectedPolicies,\n  );\n\n  const searchEntities = () => {\n    setLoading(true);\n\n    let data: any = {};\n\n    let cleanPolicies = selectedPolicies.filter((pol) => pol !== \"\");\n    let cleanUsers = users.filter((usr) => usr !== \"\");\n    let cleanGroups = groups.filter((grp) => grp !== \"\");\n\n    if (cleanPolicies.length > 0) {\n      data[\"policies\"] = cleanPolicies;\n    }\n\n    if (cleanUsers.length > 0) {\n      data[\"users\"] = cleanUsers;\n    }\n\n    if (cleanGroups.length > 0) {\n      data[\"groups\"] = cleanGroups;\n    }\n\n    api.ldapEntities\n      .getLdapEntities(data)\n      .then((result) => {\n        setResults(result.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        setLoading(false);\n      });\n  };\n\n  const alterUsersList = (addItem: boolean, index: number) => {\n    if (addItem) {\n      const alterUsers = [...users, \"\"];\n      setUsers(alterUsers);\n\n      return;\n    }\n\n    const filteredUsers = users.filter((_, indx) => indx !== index);\n\n    setUsers(filteredUsers);\n  };\n\n  const alterGroupsList = (addItem: boolean, index: number) => {\n    if (addItem) {\n      const alterGroups = [...groups, \"\"];\n      setGroups(alterGroups);\n\n      return;\n    }\n\n    const filteredGroups = groups.filter((_, indx) => indx !== index);\n\n    setGroups(filteredGroups);\n  };\n\n  return (\n    <Box sx={{ marginTop: 15, paddingTop: 0 }}>\n      <Grid container sx={{ marginTop: 5 }}>\n        <Grid item sm={12} md={6} lg={5} sx={{ padding: 10, paddingTop: 0 }}>\n          <SectionTitle>Query Filters</SectionTitle>\n\n          <Box\n            sx={{\n              padding: \"0 10px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: 40,\n            }}\n          >\n            <Box sx={{ padding: \"10px 26px\" }} withBorders>\n              <Box sx={{ display: \"flex\" }}>\n                <h4 style={{ margin: 0, marginBottom: 10, fontSize: 14 }}>\n                  Users\n                </h4>\n              </Box>\n              <Box\n                sx={{\n                  overflowY: \"auto\",\n                  minHeight: 50,\n                  maxHeight: 250,\n                  \"& > div > div\": {\n                    width: \"100%\",\n                  },\n                }}\n              >\n                {users.map((userDat, index) => {\n                  return (\n                    <InputBox\n                      id={`search-user-${index}`}\n                      key={`search-user-${index}`}\n                      value={userDat}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        const usersElements = [...users];\n                        usersElements[index] = e.target.value;\n                        setUsers(usersElements);\n                      }}\n                      overlayIcon={\n                        users.length === index + 1 ? (\n                          <AddIcon />\n                        ) : (\n                          <RemoveIcon />\n                        )\n                      }\n                      overlayAction={() => {\n                        alterUsersList(users.length === index + 1, index);\n                      }}\n                    />\n                  );\n                })}\n              </Box>\n            </Box>\n            <Box sx={{ padding: \"10px 26px\" }} withBorders>\n              <h4 style={{ margin: 0, marginBottom: 10, fontSize: 14 }}>\n                Groups\n              </h4>\n              <Box\n                sx={{\n                  overflowY: \"auto\",\n                  minHeight: 50,\n                  maxHeight: \"calc(100vh - 340px)\",\n                  \"& > div > div\": {\n                    width: \"100%\",\n                  },\n                }}\n              >\n                {groups.map((groupDat, index) => {\n                  return (\n                    <InputBox\n                      id={`search-group-${index}`}\n                      key={`search-group-${index}`}\n                      value={groupDat}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        const groupsElements = [...groups];\n                        groupsElements[index] = e.target.value;\n                        setGroups(groupsElements);\n                      }}\n                      overlayIcon={\n                        groups.length === index + 1 ? (\n                          <AddIcon />\n                        ) : (\n                          <RemoveIcon />\n                        )\n                      }\n                      overlayAction={() => {\n                        alterGroupsList(groups.length === index + 1, index);\n                      }}\n                    />\n                  );\n                })}\n              </Box>\n            </Box>\n            <Box sx={{ padding: \"10px 26px\" }} withBorders>\n              <h4 style={{ margin: 0, marginBottom: 10, fontSize: 14 }}>\n                Policies\n              </h4>\n              <Box\n                sx={{\n                  minHeight: 265,\n                  maxHeight: \"calc(100vh - 740px)\",\n                }}\n              >\n                <PolicySelectors selectedPolicy={selectedPolicies} noTitle />\n              </Box>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid\n          item\n          sm={12}\n          md={6}\n          lg={7}\n          sx={{\n            padding: 10,\n            paddingTop: 0,\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          {loading ? (\n            <Box sx={{ textAlign: \"center\" }}>\n              <Loader />\n            </Box>\n          ) : (\n            <Fragment>\n              <SectionTitle\n                actions={\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      fontSize: 14,\n                    }}\n                  >\n                    {results?.timestamp ? (\n                      <Fragment>\n                        <TimeIcon\n                          style={{\n                            width: 14,\n                            height: 14,\n                            marginRight: 5,\n                            fill: \"#BEBFBF\",\n                          }}\n                        />\n                        {DateTime.fromISO(results.timestamp).toFormat(\n                          \"D HH:mm:ss\",\n                        )}\n                      </Fragment>\n                    ) : (\n                      \"\"\n                    )}\n                  </Box>\n                }\n              >\n                Query Results\n              </SectionTitle>\n              {results ? (\n                <Box\n                  sx={{\n                    backgroundColor: \"#FBFAFA\",\n                    padding: \"8px 22px\",\n                    flexGrow: 1,\n                    overflowY: \"auto\",\n                  }}\n                >\n                  {!results.groups && !results.users && !results.policies && (\n                    <Box sx={{ textAlign: \"center\" }}>\n                      <h4>No Results Available</h4>\n                    </Box>\n                  )}\n                  {!!results.groups && (\n                    <LDAPResultsBlock results={results} entityName={\"Group\"} />\n                  )}\n                  {!!results.users && (\n                    <LDAPResultsBlock results={results} entityName={\"User\"} />\n                  )}\n                  {!!results.policies && (\n                    <LDAPResultsBlock results={results} entityName={\"Policy\"} />\n                  )}\n                </Box>\n              ) : (\n                <Box sx={{ textAlign: \"center\" }}>No query results yet</Box>\n              )}\n            </Fragment>\n          )}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            marginTop: 45,\n            padding: \"0 20px\",\n          }}\n        >\n          <Button\n            id={\"search-entity\"}\n            type={\"button\"}\n            variant={\"callAction\"}\n            onClick={searchEntities}\n            icon={<SearchIcon />}\n          >\n            Search\n          </Button>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default LDAPEntitiesQuery;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  ConsoleIcon,\n  EditIcon,\n  FormLayout,\n  Grid,\n  HelpBox,\n  InputBox,\n  Loader,\n  PageLayout,\n  RefreshIcon,\n  Switch,\n  Tabs,\n  Tooltip,\n  ValuePair,\n  WarnIcon,\n  ScreenTitle,\n} from \"mds\";\nimport { api } from \"api\";\nimport { ConfigurationKV } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport { useAppDispatch } from \"../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setHelpName,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { ldapFormFields, ldapHelpBoxContents } from \"../utils\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport AddIDPConfigurationHelpBox from \"../AddIDPConfigurationHelpbox\";\nimport LDAPEntitiesQuery from \"./LDAPEntitiesQuery\";\nimport ResetConfigurationModal from \"../../EventDestinations/CustomForms/ResetConfigurationModal\";\nimport HelpMenu from \"../../HelpMenu\";\n\nconst enabledConfigLDAP = [\n  \"server_addr\",\n  \"lookup_bind_dn\",\n  \"user_dn_search_base_dn\",\n  \"user_dn_search_filter\",\n];\n\nconst IDPLDAPConfigurationDetails = () => {\n  const dispatch = useAppDispatch();\n\n  const formFields = ldapFormFields;\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isEnabled, setIsEnabled] = useState<boolean>(false);\n  const [hasConfiguration, setHasConfiguration] = useState<boolean>(false);\n  const [fields, setFields] = useState<any>({});\n  const [overrideFields, setOverrideFields] = useState<any>({});\n  const [record, setRecord] = useState<ConfigurationKV[] | undefined>(\n    undefined,\n  );\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [resetOpen, setResetOpen] = useState<boolean>(false);\n  const [curTab, setCurTab] = useState<string>(\"configuration\");\n  const [envOverride, setEnvOverride] = useState<boolean>(false);\n\n  const toggleEditMode = () => {\n    if (editMode && record) {\n      parseFields(record);\n    }\n    setEditMode(!editMode);\n  };\n\n  const parseFields = (record: ConfigurationKV[]) => {\n    let fields: any = {};\n    let ovrFlds: any = {};\n    if (record && record.length > 0) {\n      const enabled = record.find((item: any) => item.key === \"enable\");\n\n      let totalCoincidences = 0;\n      let totalOverride = 0;\n\n      record.forEach((item: any) => {\n        if (item.env_override) {\n          fields[item.key] = item.env_override.value;\n          ovrFlds[item.key] = item.env_override.name;\n        } else {\n          fields[item.key] = item.value;\n        }\n\n        if (\n          enabledConfigLDAP.includes(item.key) &&\n          ((item.value && item.value !== \"\" && item.value !== \"off\") ||\n            (item.env_override &&\n              item.env_override.value !== \"\" &&\n              item.env_override.value !== \"off\"))\n        ) {\n          totalCoincidences++;\n        }\n\n        if (enabledConfigLDAP.includes(item.key) && item.env_override) {\n          totalOverride++;\n        }\n      });\n\n      const hasConfig = totalCoincidences !== 0;\n\n      if (hasConfig && ((enabled && enabled.value !== \"off\") || !enabled)) {\n        setIsEnabled(true);\n      } else {\n        setIsEnabled(false);\n      }\n\n      if (totalOverride !== 0) {\n        setEnvOverride(true);\n      }\n\n      setHasConfiguration(hasConfig);\n    }\n    setOverrideFields(ovrFlds);\n    setFields(fields);\n  };\n\n  useEffect(() => {\n    const loadRecord = () => {\n      api.configs\n        .configInfo(\"identity_ldap\")\n        .then((res) => {\n          if (res.data.length > 0) {\n            setRecord(res.data[0].key_values);\n            parseFields(res.data[0].key_values || []);\n          }\n          setLoading(false);\n        })\n        .catch((err) => {\n          setLoading(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    };\n\n    if (loading) {\n      loadRecord();\n    }\n  }, [dispatch, loading]);\n\n  const validSave = () => {\n    for (const [key, value] of Object.entries(formFields)) {\n      if (\n        value.required &&\n        !(\n          fields[key] !== undefined &&\n          fields[key] !== null &&\n          fields[key] !== \"\"\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const saveRecord = () => {\n    const keyVals = Object.keys(formFields).map((key) => {\n      return {\n        key,\n        value: fields[key],\n      };\n    });\n\n    api.configs\n      .setConfig(\"identity_ldap\", {\n        key_values: keyVals,\n      })\n      .then((res) => {\n        setEditMode(false);\n        setRecord(keyVals);\n        parseFields(keyVals);\n        dispatch(setServerNeedsRestart(res.data.restart || false));\n        setFields({ ...fields, lookup_bind_password: \"\" });\n\n        if (!res.data.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n      })\n      .catch((err) => {\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const closeDeleteModalAndRefresh = async (refresh: boolean) => {\n    setResetOpen(false);\n\n    if (refresh) {\n      dispatch(setServerNeedsRestart(refresh));\n      setRecord(undefined);\n      setFields({});\n      setIsEnabled(false);\n      setHasConfiguration(false);\n      setEditMode(false);\n    }\n  };\n\n  const toggleConfiguration = (value: boolean) => {\n    const payload = {\n      key_values: [\n        {\n          key: \"enable\",\n          value: value ? \"on\" : \"off\",\n        },\n      ],\n    };\n\n    api.configs\n      .setConfig(\"identity_ldap\", payload)\n      .then((res) => {\n        setIsEnabled(!isEnabled);\n        dispatch(setServerNeedsRestart(res.data.restart || false));\n        if (!res.data.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n      })\n      .catch((err) => {\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const renderFormField = (key: string, value: any) => {\n    switch (value.type) {\n      case \"toggle\":\n        return (\n          <Switch\n            key={key}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={fields[key] === \"on\"}\n            value={\"is-field-enabled\"}\n            id={\"is-field-enabled\"}\n            name={\"is-field-enabled\"}\n            label={value.label}\n            tooltip={value.tooltip}\n            onChange={(e) =>\n              setFields({ ...fields, [key]: e.target.checked ? \"on\" : \"off\" })\n            }\n            description=\"\"\n            disabled={!editMode}\n          />\n        );\n      default:\n        return (\n          <InputBox\n            key={key}\n            id={key}\n            required={value.required}\n            name={key}\n            label={value.label}\n            tooltip={value.tooltip}\n            error={value.hasError(fields[key], editMode)}\n            value={fields[key] ? fields[key] : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setFields({ ...fields, [key]: e.target.value })\n            }\n            placeholder={value.placeholder}\n            disabled={!editMode}\n            type={value.type}\n          />\n        );\n    }\n  };\n\n  useEffect(() => {\n    dispatch(setHelpName(\"LDAP\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Grid item xs={12}>\n      {resetOpen && (\n        <ResetConfigurationModal\n          configurationName={\"identity_ldap\"}\n          closeResetModalAndRefresh={closeDeleteModalAndRefresh}\n          resetOpen={resetOpen}\n        />\n      )}\n      <PageHeaderWrapper label={\"LDAP\"} actions={<HelpMenu />} />\n      <PageLayout variant={\"constrained\"}>\n        <Tabs\n          horizontal\n          options={[\n            {\n              tabConfig: { id: \"configuration\", label: \"Configuration\" },\n              content: (\n                <Fragment>\n                  <ScreenTitle\n                    icon={null}\n                    title={editMode ? \"Edit Configuration\" : \"\"}\n                    actions={\n                      !editMode ? (\n                        <Fragment>\n                          <Tooltip\n                            tooltip={\n                              envOverride\n                                ? \"Configuration cannot be edited in this module as LDAP environment variables are set for this MinIO instance.\"\n                                : \"\"\n                            }\n                          >\n                            <Button\n                              id={\"edit\"}\n                              type=\"button\"\n                              variant={\"callAction\"}\n                              icon={<EditIcon />}\n                              onClick={toggleEditMode}\n                              label={\"Edit Configuration\"}\n                              disabled={loading || envOverride}\n                            />\n                          </Tooltip>\n                          {hasConfiguration && (\n                            <Tooltip\n                              tooltip={\n                                envOverride\n                                  ? \"Configuration cannot be disabled / enabled in this module as LDAP environment variables are set for this MinIO instance.\"\n                                  : \"\"\n                              }\n                            >\n                              <Button\n                                id={\"is-configuration-enabled\"}\n                                onClick={() => toggleConfiguration(!isEnabled)}\n                                label={\n                                  isEnabled ? \"Disable LDAP\" : \"Enable LDAP\"\n                                }\n                                variant={isEnabled ? \"secondary\" : \"regular\"}\n                                disabled={envOverride}\n                              />\n                            </Tooltip>\n                          )}\n                          <Button\n                            id={\"refresh-idp-config\"}\n                            onClick={() => setLoading(true)}\n                            label={\"Refresh\"}\n                            icon={<RefreshIcon />}\n                          />\n                        </Fragment>\n                      ) : null\n                    }\n                  />\n                  <br />\n                  {loading ? (\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        marginTop: 10,\n                      }}\n                    >\n                      <Loader />\n                    </Box>\n                  ) : (\n                    <Fragment>\n                      {editMode ? (\n                        <Fragment>\n                          <FormLayout\n                            helpBox={\n                              <AddIDPConfigurationHelpBox\n                                helpText={\n                                  \"Learn more about LDAP Configurations\"\n                                }\n                                contents={ldapHelpBoxContents}\n                                docLink={\n                                  \"https://min.io/docs/minio/linux/operations/external-iam.html?ref=con#minio-external-iam-ad-ldap\"\n                                }\n                                docText={\"Learn more about LDAP Configurations\"}\n                              />\n                            }\n                          >\n                            {editMode && hasConfiguration ? (\n                              <Box sx={{ marginBottom: 15 }}>\n                                <HelpBox\n                                  title={\n                                    <Box\n                                      style={{\n                                        display: \"flex\",\n                                        justifyContent: \"space-between\",\n                                        alignItems: \"center\",\n                                        flexGrow: 1,\n                                      }}\n                                    >\n                                      Lookup Bind Password must be re-entered to\n                                      change LDAP configurations\n                                    </Box>\n                                  }\n                                  iconComponent={<WarnIcon />}\n                                  help={null}\n                                />\n                              </Box>\n                            ) : null}\n                            {Object.entries(formFields).map(([key, value]) =>\n                              renderFormField(key, value),\n                            )}\n                            <Box\n                              sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"flex-end\",\n                                marginTop: \"20px\",\n                                gap: \"15px\",\n                              }}\n                            >\n                              {editMode && hasConfiguration && (\n                                <Button\n                                  id={\"clear\"}\n                                  type=\"button\"\n                                  variant=\"secondary\"\n                                  onClick={() => setResetOpen(true)}\n                                  label={\"Reset Configuration\"}\n                                />\n                              )}\n                              <Button\n                                id={\"cancel\"}\n                                type=\"button\"\n                                variant=\"regular\"\n                                onClick={toggleEditMode}\n                                label={\"Cancel\"}\n                              />\n                              <Button\n                                id={\"save-key\"}\n                                type=\"submit\"\n                                variant=\"callAction\"\n                                color=\"primary\"\n                                disabled={loading || !validSave()}\n                                label={\"Save\"}\n                                onClick={saveRecord}\n                              />\n                            </Box>\n                          </FormLayout>\n                        </Fragment>\n                      ) : (\n                        <Fragment>\n                          <Box\n                            sx={{\n                              display: \"grid\",\n                              gridTemplateColumns: \"1fr\",\n                              gridAutoFlow: \"dense\",\n                              gap: 3,\n                              padding: \"15px\",\n                              border: \"1px solid #eaeaea\",\n                              [`@media (min-width: 576px)`]: {\n                                gridTemplateColumns: \"2fr 1fr\",\n                                gridAutoFlow: \"row\",\n                              },\n                            }}\n                          >\n                            <ValuePair\n                              label={\"LDAP Enabled\"}\n                              value={isEnabled ? \"Yes\" : \"No\"}\n                            />\n                            {hasConfiguration && (\n                              <Fragment>\n                                {Object.entries(formFields).map(\n                                  ([key, value]) => {\n                                    if (!value.editOnly) {\n                                      let label: React.ReactNode = value.label;\n                                      let val: React.ReactNode = fields[key]\n                                        ? fields[key]\n                                        : \"\";\n\n                                      if (overrideFields[key]) {\n                                        label = (\n                                          <Box\n                                            sx={{\n                                              display: \"flex\",\n                                              alignItems: \"center\",\n                                              gap: 5,\n                                              \"& .min-icon\": {\n                                                height: 20,\n                                                width: 20,\n                                              },\n                                              \"& span\": {\n                                                height: 20,\n                                                display: \"flex\",\n                                                alignItems: \"center\",\n                                              },\n                                            }}\n                                          >\n                                            <span>{value.label}</span>\n                                            <Tooltip\n                                              tooltip={`This value is set from the ${overrideFields[key]} environment variable`}\n                                              placement={\"right\"}\n                                            >\n                                              <span className={\"muted\"}>\n                                                <ConsoleIcon />\n                                              </span>\n                                            </Tooltip>\n                                          </Box>\n                                        );\n\n                                        val = (\n                                          <i>\n                                            <span className={\"muted\"}>\n                                              {val}\n                                            </span>\n                                          </i>\n                                        );\n                                      }\n                                      return (\n                                        <ValuePair\n                                          key={key}\n                                          label={label}\n                                          value={val}\n                                        />\n                                      );\n                                    }\n                                    return null;\n                                  },\n                                )}\n                              </Fragment>\n                            )}\n                          </Box>\n                        </Fragment>\n                      )}\n                    </Fragment>\n                  )}\n                </Fragment>\n              ),\n            },\n            {\n              tabConfig: {\n                id: \"entities\",\n                label: \"Entities\",\n                disabled: !hasConfiguration || !isEnabled,\n              },\n              content: (\n                <Fragment>\n                  {hasConfiguration && (\n                    <Box>\n                      <LDAPEntitiesQuery />\n                    </Box>\n                  )}\n                </Fragment>\n              ),\n            },\n          ]}\n          currentTabOrPath={curTab}\n          onTabClick={(newTab) => {\n            setCurTab(newTab);\n            setEditMode(false);\n          }}\n        />\n      </PageLayout>\n    </Grid>\n  );\n};\n\nexport default IDPLDAPConfigurationDetails;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { LockIcon, LoginIcon } from \"mds\";\n\nexport const ldapHelpBoxContents = [\n  {\n    text: \"MinIO supports using an Active Directory or LDAP (AD/LDAP) service for external management of user identities. Configuring an external IDentity Provider (IDP) enables Single-Sign On (SSO) workflows, where applications authenticate against the external IDP before accessing MinIO.\",\n    icon: <LoginIcon />,\n    iconDescription: \"Create Configurations\",\n  },\n  {\n    text: \"MinIO queries the configured Active Directory / LDAP server to verify the credentials specified by the application and optionally return a list of groups in which the user has membership. MinIO supports two modes (Lookup-Bind Mode and Username-Bind Mode) for performing these queries\",\n    icon: null,\n    iconDescription: \"\",\n  },\n  {\n    text: \"MinIO recommends using Lookup-Bind mode as the preferred method for verifying AD/LDAP credentials. Username-Bind mode is a legacy method retained for backwards compatibility only.\",\n    icon: null,\n    iconDescription: \"\",\n  },\n];\n\nexport const openIDHelpBoxContents = [\n  {\n    text: \"MinIO supports using an OpenID Connect (OIDC) compatible IDentity Provider (IDP) such as Okta, KeyCloak, Dex, Google, or Facebook for external management of user identities.\",\n    icon: <LockIcon />,\n    iconDescription: \"Create Configurations\",\n  },\n  {\n    text: \"Configuring an external IDP enables Single-Sign On workflows, where applications authenticate against the external IDP before accessing MinIO.\",\n    icon: null,\n    iconDescription: \"\",\n  },\n];\n\nexport const openIDFormFields = {\n  config_url: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Config URL is required\" : \"\";\n    },\n    label: \"Config URL\",\n    tooltip: \"Config URL for identity provider configuration\",\n    placeholder:\n      \"https://identity-provider-url/.well-known/openid-configuration\",\n    type: \"text\",\n    editOnly: false,\n  },\n  client_id: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Client ID is required\" : \"\";\n    },\n    label: \"Client ID\",\n    tooltip: \"Identity provider Client ID\",\n    placeholder: \"Enter Client ID\",\n    type: \"text\",\n    editOnly: false,\n  },\n  client_secret: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Client Secret is required\" : \"\";\n    },\n    label: \"Client Secret\",\n    tooltip: \"Identity provider Client Secret\",\n    placeholder: \"Enter Client Secret\",\n    type: \"password\",\n    editOnly: true,\n  },\n  claim_name: {\n    required: false,\n    label: \"Claim Name\",\n    tooltip: \"Claim from which MinIO will read the policy or role to use\",\n    placeholder: \"Enter Claim Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n    editOnly: false,\n  },\n  display_name: {\n    required: false,\n    label: \"Display Name\",\n    tooltip: \"\",\n    placeholder: \"Enter Display Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n    editOnly: false,\n  },\n  claim_prefix: {\n    required: false,\n    label: \"Claim Prefix\",\n    tooltip: \"\",\n    placeholder: \"Enter Claim Prefix\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n    editOnly: false,\n  },\n  scopes: {\n    required: false,\n    label: \"Scopes\",\n    tooltip: \"\",\n    placeholder: \"openid,profile,email\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n    editOnly: false,\n  },\n  redirect_uri: {\n    required: false,\n    label: \"Redirect URI\",\n    tooltip: \"\",\n    placeholder: \"https://console-endpoint-url/oauth_callback\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n    editOnly: false,\n  },\n  role_policy: {\n    required: false,\n    label: \"Role Policy\",\n    tooltip: \"\",\n    placeholder: \"readonly\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n    editOnly: false,\n  },\n  claim_userinfo: {\n    required: false,\n    label: \"Claim User Info\",\n    tooltip: \"\",\n    placeholder: \"Claim User Info\",\n    type: \"toggle\",\n    hasError: (s: string, editMode: boolean) => \"\",\n    editOnly: false,\n  },\n  redirect_uri_dynamic: {\n    required: false,\n    label: \"Redirect URI Dynamic\",\n    tooltip: \"\",\n    placeholder: \"Redirect URI Dynamic\",\n    type: \"toggle\",\n    hasError: (s: string, editMode: boolean) => \"\",\n    editOnly: false,\n  },\n};\n\nexport const ldapFormFields = {\n  server_insecure: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Server Address is required\" : \"\";\n    },\n    label: \"Server Insecure\",\n    tooltip: \"Disable SSL certificate verification \",\n    placeholder: \"myldapserver.com:636\",\n    type: \"toggle\",\n    editOnly: false,\n  },\n  server_addr: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Server Address is required\" : \"\";\n    },\n    label: \"Server Address\",\n    tooltip: 'AD/LDAP server address e.g. \"myldapserver.com:636\"',\n    placeholder: \"myldapserver.com:636\",\n    type: \"text\",\n    editOnly: false,\n  },\n  lookup_bind_dn: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Lookup Bind DN is required\" : \"\";\n    },\n    label: \"Lookup Bind DN\",\n    tooltip:\n      \"DN (Distinguished Name) for LDAP read-only service account used to perform DN and group lookups\",\n    placeholder: \"cn=admin,dc=min,dc=io\",\n    type: \"text\",\n    editOnly: false,\n  },\n  lookup_bind_password: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Lookup Bind Password is required\" : \"\";\n    },\n    label: \"Lookup Bind Password\",\n    tooltip:\n      \"Password for LDAP read-only service account used to perform DN and group lookups\",\n    placeholder: \"admin\",\n    type: \"password\",\n    editOnly: true,\n  },\n  user_dn_search_base_dn: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"User DN Search Base DN is required\" : \"\";\n    },\n    label: \"User DN Search Base\",\n    tooltip: \"\",\n    placeholder: \"DC=example,DC=net\",\n    type: \"text\",\n    editOnly: false,\n  },\n  user_dn_search_filter: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"User DN Search Filter is required\" : \"\";\n    },\n    label: \"User DN Search Filter\",\n    tooltip: \"\",\n    placeholder: \"(sAMAcountName=%s)\",\n    type: \"text\",\n    editOnly: false,\n  },\n  group_search_base_dn: {\n    required: false,\n    hasError: (s: string, editMode: boolean) => \"\",\n    label: \"Group Search Base DN\",\n    tooltip: \"\",\n    placeholder: \"ou=swengg,dc=min,dc=io\",\n    type: \"text\",\n    editOnly: false,\n  },\n  group_search_filter: {\n    required: false,\n    hasError: (s: string, editMode: boolean) => \"\",\n    label: \"Group Search Filter\",\n    tooltip: \"\",\n    placeholder: \"(&(objectclass=groupofnames)(member=%d))\",\n    type: \"text\",\n    editOnly: false,\n  },\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\n\nimport { Box, DataTable, Grid, ProgressBar } from \"mds\";\nimport { policySort } from \"../../../utils/sortFunctions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport SearchBox from \"../Common/SearchBox\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport { setSelectedPolicies } from \"../Users/AddUsersSlice\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"../../../api\";\n\ninterface ISelectPolicyProps {\n  selectedPolicy?: string[];\n  noTitle?: boolean;\n}\n\nconst PolicySelectors = ({ noTitle = false }: ISelectPolicyProps) => {\n  const dispatch = useAppDispatch();\n  // Local State\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const currentPolicies = useSelector(\n    (state: AppState) => state.createUser.selectedPolicies,\n  );\n\n  const fetchPolicies = useCallback(() => {\n    isLoading(true);\n\n    api.policies\n      .listPolicies()\n      .then((res) => {\n        const policies = res.data.policies ?? [];\n        isLoading(false);\n        setRecords(policies.sort(policySort));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        isLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }, [dispatch]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchPolicies();\n    }\n  }, [loading, fetchPolicies]);\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...currentPolicies]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    // remove empty values\n    elements = elements.filter((element) => element !== \"\");\n\n    dispatch(setSelectedPolicies(elements));\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.name.includes(filter),\n  );\n\n  return (\n    <Grid item xs={12} className={\"inputItem\"}>\n      {loading && <ProgressBar />}\n      {records.length > 0 ? (\n        <Fragment>\n          <Grid item xs={12} className={\"inputItem\"}>\n            <SearchBox\n              placeholder=\"Start typing to search for a Policy\"\n              onChange={(value) => {\n                setFilter(value);\n              }}\n              value={filter}\n              label={!noTitle ? \"Assign Policies\" : \"\"}\n            />\n          </Grid>\n\n          <DataTable\n            columns={[{ label: \"Policy\", elementKey: \"name\" }]}\n            onSelect={selectionChanged}\n            selectedItems={currentPolicies}\n            isLoading={loading}\n            records={filteredRecords}\n            entityName=\"Policies\"\n            idField=\"name\"\n            customPaperHeight={\"200px\"}\n          />\n        </Fragment>\n      ) : (\n        <Box\n          sx={{\n            textAlign: \"center\",\n            padding: \"10px 0\",\n          }}\n        >\n          No Policies Available\n        </Box>\n      )}\n    </Grid>\n  );\n};\n\nexport default PolicySelectors;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Policy, User } from \"api/consoleApi\";\n\ninterface policyDetailsInterface {\n  policy: string;\n}\n\nexport const usersSort = (a: User, b: User) => {\n  if (a.accessKey && b.accessKey) {\n    if (a.accessKey > b.accessKey) {\n      return 1;\n    }\n    if (a.accessKey < b.accessKey) {\n      return -1;\n    }\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const policySort = (a: Policy, b: Policy) => {\n  if (a.name! > b.name!) {\n    return 1;\n  }\n  if (a.name! < b.name!) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const stringSort = (a: string, b: string) => {\n  if (a > b) {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const policyDetailsSort = (\n  a: policyDetailsInterface,\n  b: policyDetailsInterface,\n) => {\n  if (a.policy > b.policy) {\n    return 1;\n  }\n  if (a.policy < b.policy) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n"],"names":["_ref","configurationName","closeResetModalAndRefresh","resetOpen","dispatch","useAppDispatch","resetLoading","setResetLoading","useState","useEffect","api","configs","resetConfig","then","catch","err","setErrorSnackMessage","errorToHandler","error","_jsx","ConfirmDialog","title","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","resetConfiguration","onClose","confirmationContent","_jsxs","Fragment","children","ProgressBar","style","maxWidth","whiteSpace","wordWrap","FeatureItem","icon","description","Box","sx","display","marginRight","height","width","marginBottom","fontSize","fontStyle","color","_ref2","helpText","docLink","docText","contents","flex","border","borderRadius","flexFlow","padding","fontWeight","alignItems","paddingBottom","HelpIconFilled","map","content","index","iconDescription","text","href","target","rel","EntityResultTitle","name","CollapseCaret","transform","EntityResultItems","blockName","results","res","_ref3","_results$groups","_results$policies","_results$users","_results$groups2","_results$users2","_results$policies2","entityName","entityLength","groups","length","policies","users","className","marginTop","SectionTitle","separator","GroupsMenuIcon","actions","h4","borderBottom","margin","fill","groupData","group","user","policy","LDAPEntitiesQuery","loading","setLoading","setUsers","setGroups","setResults","selectedPolicies","useSelector","state","createUser","paddingTop","Grid","container","item","sm","md","lg","flexDirection","gap","withBorders","overflowY","minHeight","maxHeight","userDat","InputBox","id","value","onChange","e","usersElements","overlayIcon","AddIcon","RemoveIcon","overlayAction","alterUsersList","addItem","alterUsers","filteredUsers","filter","_","indx","groupDat","groupsElements","alterGroupsList","alterGroups","filteredGroups","PolicySelectors","selectedPolicy","noTitle","textAlign","Loader","timestamp","TimeIcon","DateTime","fromISO","toFormat","backgroundColor","flexGrow","LDAPResultsBlock","xs","justifyContent","Button","type","variant","onClick","searchEntities","data","cleanPolicies","pol","cleanUsers","usr","cleanGroups","grp","ldapEntities","getLdapEntities","result","SearchIcon","enabledConfigLDAP","IDPLDAPConfigurationDetails","formFields","ldapFormFields","isEnabled","setIsEnabled","hasConfiguration","setHasConfiguration","fields","setFields","overrideFields","setOverrideFields","record","setRecord","undefined","editMode","setEditMode","setResetOpen","curTab","setCurTab","envOverride","setEnvOverride","toggleEditMode","parseFields","ovrFlds","enabled","find","key","totalCoincidences","totalOverride","forEach","env_override","includes","hasConfig","configInfo","key_values","setHelpName","ResetConfigurationModal","async","refresh","setServerNeedsRestart","PageHeaderWrapper","label","HelpMenu","PageLayout","Tabs","horizontal","options","tabConfig","ScreenTitle","Tooltip","tooltip","EditIcon","disabled","payload","setConfig","restart","setSnackBarMessage","toggleConfiguration","RefreshIcon","FormLayout","helpBox","AddIDPConfigurationHelpBox","ldapHelpBoxContents","HelpBox","iconComponent","WarnIcon","help","Object","entries","renderFormField","Switch","indicatorLabels","checked","required","hasError","placeholder","validSave","saveRecord","keyVals","keys","lookup_bind_password","gridTemplateColumns","gridAutoFlow","ValuePair","editOnly","val","placement","ConsoleIcon","currentTabOrPath","onTabClick","newTab","LoginIcon","openIDHelpBoxContents","LockIcon","openIDFormFields","config_url","s","client_id","client_secret","claim_name","display_name","claim_prefix","scopes","redirect_uri","role_policy","claim_userinfo","redirect_uri_dynamic","server_insecure","server_addr","lookup_bind_dn","user_dn_search_base_dn","user_dn_search_filter","group_search_base_dn","group_search_filter","records","setRecords","setFilter","currentPolicies","fetchPolicies","useCallback","listPolicies","_res$data$policies","sort","policySort","setModalErrorSnackMessage","filteredRecords","elementItem","SearchBox","DataTable","columns","elementKey","onSelect","targetD","elements","push","element","setSelectedPolicies","selectedItems","idField","customPaperHeight","usersSort","a","b","accessKey","stringSort","policyDetailsSort"],"sourceRoot":""}