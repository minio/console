{"version":3,"file":"static/js/3298.bc647bb4.chunk.js","mappings":"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","sources":["screens/Console/Buckets/ListBuckets/BucketListItem.tsx","screens/Console/Buckets/ListBuckets/BulkReplicationModal.tsx","screens/Console/Buckets/ListBuckets/ListBuckets.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport get from \"lodash/get\";\nimport styled from \"styled-components\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  Box,\n  breakPoints,\n  BucketsIcon,\n  Checkbox,\n  Grid,\n  HelpTip,\n  ReportedUsageIcon,\n  TotalObjectsIcon,\n} from \"mds\";\nimport {\n  calculateBytes,\n  niceBytes,\n  prettyNumber,\n} from \"../../../../common/utils\";\nimport {\n  IAM_PERMISSIONS,\n  IAM_ROLES,\n} from \"../../../../common/SecureComponent/permissions\";\nimport { hasPermission } from \"../../../../common/SecureComponent\";\nimport { Bucket } from \"../../../../api/consoleApi\";\nimport { usageClarifyingContent } from \"screens/Console/Dashboard/BasicDashboard/ReportedUsage\";\n\nconst BucketItemMain = styled.div(({ theme }) => ({\n  border: `${get(theme, \"borderColor\", \"#eaeaea\")} 1px solid`,\n  borderRadius: 3,\n  padding: 15,\n  cursor: \"pointer\",\n  \"&.disabled\": {\n    backgroundColor: get(theme, \"signalColors.danger\", \"red\"),\n  },\n  \"&:hover\": {\n    backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  },\n  \"& .bucketTitle\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    gap: 10,\n    \"& h1\": {\n      padding: 0,\n      margin: 0,\n      marginBottom: 5,\n      fontSize: 22,\n      color: get(theme, \"screenTitle.iconColor\", \"#07193E\"),\n      [`@media (max-width: ${breakPoints.md}px)`]: {\n        marginBottom: 0,\n      },\n    },\n  },\n  \"& .bucketDetails\": {\n    display: \"flex\",\n    gap: 40,\n    \"& span\": {\n      fontSize: 14,\n    },\n    [`@media (max-width: ${breakPoints.md}px)`]: {\n      flexFlow: \"column-reverse\",\n      gap: 5,\n    },\n  },\n  \"& .bucketMetrics\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: 20,\n    gap: 25,\n    borderTop: `${get(theme, \"borderColor\", \"#E2E2E2\")} 1px solid`,\n    paddingTop: 20,\n    \"& svg.bucketIcon\": {\n      color: get(theme, \"screenTitle.iconColor\", \"#07193E\"),\n      fill: get(theme, \"screenTitle.iconColor\", \"#07193E\"),\n    },\n    \"& .metric\": {\n      \"& .min-icon\": {\n        color: get(theme, \"fontColor\", \"#000\"),\n        width: 13,\n        marginRight: 5,\n      },\n    },\n    \"& .metricLabel\": {\n      fontSize: 14,\n      fontWeight: \"bold\",\n      color: get(theme, \"fontColor\", \"#000\"),\n    },\n    \"& .metricText\": {\n      fontSize: 24,\n      fontWeight: \"bold\",\n    },\n    \"& .unit\": {\n      fontSize: 12,\n      fontWeight: \"normal\",\n    },\n    [`@media (max-width: ${breakPoints.md}px)`]: {\n      marginTop: 8,\n      paddingTop: 8,\n    },\n  },\n}));\n\ninterface IBucketListItem {\n  bucket: Bucket;\n  onSelect: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  selected: boolean;\n  bulkSelect: boolean;\n}\n\nconst BucketListItem = ({\n  bucket,\n  onSelect,\n  selected,\n  bulkSelect,\n}: IBucketListItem) => {\n  const navigate = useNavigate();\n\n  const [clickOverride, setClickOverride] = useState<boolean>(false);\n\n  const usage = niceBytes(`${bucket.size}` || \"0\");\n  const usageScalar = usage.split(\" \")[0];\n  const usageUnit = usage.split(\" \")[1];\n\n  const quota = get(bucket, \"details.quota.quota\", \"0\");\n  const quotaForString = calculateBytes(quota, true, false);\n\n  const manageAllowed =\n    hasPermission(bucket.name, IAM_PERMISSIONS[IAM_ROLES.BUCKET_ADMIN]) &&\n    false;\n\n  const accessToStr = (bucket: Bucket): string => {\n    if (bucket.rw_access?.read && !bucket.rw_access?.write) {\n      return \"R\";\n    } else if (!bucket.rw_access?.read && bucket.rw_access?.write) {\n      return \"W\";\n    } else if (bucket.rw_access?.read && bucket.rw_access?.write) {\n      return \"R/W\";\n    }\n    return \"\";\n  };\n  const onCheckboxClick = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onSelect(e);\n  };\n\n  return (\n    <BucketItemMain\n      onClick={() => {\n        !clickOverride && navigate(`/buckets/${bucket.name}/admin`);\n      }}\n      id={`manageBucket-${bucket.name}`}\n      className={`bucket-item ${manageAllowed ? \"disabled\" : \"\"}`}\n    >\n      <Box className={\"bucketTitle\"}>\n        {bulkSelect && (\n          <Box\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n          >\n            <Checkbox\n              checked={selected}\n              id={`select-${bucket.name}`}\n              label={\"\"}\n              name={`select-${bucket.name}`}\n              onChange={onCheckboxClick}\n              value={bucket.name}\n            />\n          </Box>\n        )}\n        <h1>\n          {bucket.name} {manageAllowed}\n        </h1>\n      </Box>\n      <Box className={\"bucketDetails\"}>\n        <span id={`created-${bucket.name}`}>\n          <strong>Created:</strong>{\" \"}\n          {bucket.creation_date\n            ? new Date(bucket.creation_date).toString()\n            : \"n/a\"}\n        </span>\n        <span id={`access-${bucket.name}`}>\n          <strong>Access:</strong> {accessToStr(bucket)}\n        </span>\n      </Box>\n      <Box className={\"bucketMetrics\"}>\n        <Link to={`/buckets/${bucket.name}/admin`}>\n          <BucketsIcon\n            className={\"bucketIcon\"}\n            style={{\n              height: 48,\n              width: 48,\n            }}\n          />\n        </Link>\n\n        <Grid\n          item\n          className={\"metric\"}\n          onMouseEnter={() =>\n            bucket.details?.versioning && setClickOverride(true)\n          }\n          onMouseLeave={() =>\n            bucket.details?.versioning && setClickOverride(false)\n          }\n        >\n          {bucket.details?.versioning && (\n            <HelpTip content={usageClarifyingContent} placement=\"top\">\n              <ReportedUsageIcon />{\" \"}\n            </HelpTip>\n          )}\n          {!bucket.details?.versioning && <ReportedUsageIcon />}\n          <span className={\"metricLabel\"}>Usage</span>\n          <div className={\"metricText\"}>\n            {usageScalar}\n            <span className={\"unit\"}>{usageUnit}</span>\n            {quota !== \"0\" && (\n              <Fragment>\n                {\" \"}\n                / {quotaForString.total}\n                <span className={\"unit\"}>{quotaForString.unit}</span>\n              </Fragment>\n            )}\n          </div>\n        </Grid>\n\n        <Grid item className={\"metric\"}>\n          <TotalObjectsIcon />\n          <span className={\"metricLabel\"}>Objects</span>\n          <div className={\"metricText\"}>\n            {bucket.objects ? prettyNumber(bucket.objects) : 0}\n          </div>\n        </Grid>\n      </Box>\n    </BucketItemMain>\n  );\n};\n\nexport default BucketListItem;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  CheckCircleIcon,\n  FormLayout,\n  InputBox,\n  ReadBox,\n  Select,\n  Switch,\n  Tooltip,\n  WarnIcon,\n  Wizard,\n} from \"mds\";\nimport get from \"lodash/get\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { getBytes, k8sScalarUnitsExcluding } from \"../../../../common/utils\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"api\";\nimport { MultiBucketResponseItem } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport { SelectorTypes } from \"../../../../common/types\";\n\ninterface IBulkReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (clearSelection: boolean) => any;\n  buckets: string[];\n}\n\nconst AddBulkReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  buckets,\n}: IBulkReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const [bucketsToAlter, setBucketsToAlter] = useState<string[]>([]);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [externalLoading, setExternalLoading] = useState<boolean>(false);\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [targetURL, setTargetURL] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [useTLS, setUseTLS] = useState<boolean>(true);\n  const [replicationMode, setReplicationMode] = useState<\"async\" | \"sync\">(\n    \"async\",\n  );\n  const [bandwidthScalar, setBandwidthScalar] = useState<string>(\"100\");\n  const [bandwidthUnit, setBandwidthUnit] = useState<string>(\"Gi\");\n  const [healthCheck, setHealthCheck] = useState<string>(\"60\");\n  const [relationBuckets, setRelationBuckets] = useState<string[]>([]);\n  const [remoteBucketsOpts, setRemoteBucketOpts] = useState<string[]>([]);\n  const [responseItem, setResponseItem] = useState<\n    MultiBucketResponseItem[] | undefined\n  >([]);\n\n  const optionsForBucketsDrop: SelectorTypes[] = remoteBucketsOpts.map(\n    (remoteBucketName: string) => {\n      return {\n        label: remoteBucketName,\n        value: remoteBucketName,\n      };\n    },\n  );\n\n  useEffect(() => {\n    if (relationBuckets.length === 0) {\n      const bucketsAlter: string[] = [];\n      const relationBucketsAlter: string[] = [];\n\n      buckets.forEach((item: string) => {\n        bucketsAlter.push(item);\n        relationBucketsAlter.push(\"\");\n      });\n\n      setRelationBuckets(relationBucketsAlter);\n      setBucketsToAlter(bucketsAlter);\n    }\n  }, [buckets, relationBuckets.length]);\n\n  const addRecord = () => {\n    setAddLoading(true);\n    const replicate = bucketsToAlter.map((bucketName, index) => {\n      return {\n        originBucket: bucketName,\n        destinationBucket: relationBuckets[index],\n      };\n    });\n\n    const endURL = `${useTLS ? \"https://\" : \"http://\"}${targetURL}`;\n    const hc = parseInt(healthCheck);\n\n    const remoteBucketsInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: endURL,\n      region: region,\n      bucketsRelation: replicate,\n      syncMode: replicationMode,\n      bandwidth:\n        replicationMode === \"async\"\n          ? parseInt(getBytes(bandwidthScalar, bandwidthUnit, true))\n          : 0,\n      healthCheckPeriod: hc,\n    };\n\n    api.bucketsReplication\n      .setMultiBucketReplication(remoteBucketsInfo)\n      .then((response) => {\n        setAddLoading(false);\n\n        const states = response.data.replicationState;\n        setResponseItem(states);\n\n        const filterErrors = states?.filter(\n          (itm) => itm.errorString && itm.errorString !== \"\",\n        );\n\n        if (filterErrors?.length === 0) {\n          closeModalAndRefresh(true);\n        } else {\n          setTimeout(() => {\n            removeSuccessItems(states);\n          }, 500);\n        }\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const retrieveRemoteBuckets = (\n    wizardPageJump: (page: number | string) => void,\n  ) => {\n    const remoteConnectInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: targetURL,\n      useTLS,\n    };\n    setExternalLoading(true);\n\n    api.listExternalBuckets\n      .listExternalBuckets(remoteConnectInfo)\n      .then((res) => {\n        const buckets = get(res.data, \"buckets\", []);\n\n        if (buckets && buckets.length > 0) {\n          const arrayReplaceBuckets = buckets.map((element: any) => {\n            return element.name;\n          });\n\n          setRemoteBucketOpts(arrayReplaceBuckets);\n        }\n\n        wizardPageJump(\"++\");\n        setExternalLoading(false);\n      })\n      .catch((err) => {\n        setExternalLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const stateOfItem = (initialBucket: string) => {\n    if (responseItem && responseItem.length > 0) {\n      const bucketResponse = responseItem.find(\n        (item) => item.originBucket === initialBucket,\n      );\n\n      if (bucketResponse) {\n        const errString = get(bucketResponse, \"errorString\", \"\");\n\n        if (errString) {\n          return errString;\n        }\n\n        return \"\";\n      }\n    }\n    return \"n/a\";\n  };\n\n  const LogoToShow = ({ errString }: { errString: string }) => {\n    switch (errString) {\n      case \"\":\n        return (\n          <Box\n            sx={{\n              color: \"#42C91A\",\n            }}\n          >\n            <CheckCircleIcon />\n          </Box>\n        );\n      case \"n/a\":\n        return null;\n      default:\n        if (errString) {\n          return (\n            <Box\n              sx={{\n                color: \"#C72C48\",\n              }}\n            >\n              <Tooltip tooltip={errString} placement=\"top\">\n                <WarnIcon />\n              </Tooltip>\n            </Box>\n          );\n        }\n    }\n    return null;\n  };\n\n  const updateItem = (indexItem: number, value: string) => {\n    const updatedList = [...relationBuckets];\n    updatedList[indexItem] = value;\n    setRelationBuckets(updatedList);\n  };\n\n  const itemDisplayBulk = (indexItem: number) => {\n    if (remoteBucketsOpts.length > 0) {\n      return (\n        <Fragment>\n          <Select\n            label=\"\"\n            id={`assign-bucket-${indexItem}`}\n            name={`assign-bucket-${indexItem}`}\n            value={relationBuckets[indexItem]}\n            onChange={(value) => {\n              updateItem(indexItem, value);\n            }}\n            options={optionsForBucketsDrop}\n            disabled={addLoading}\n          />\n        </Fragment>\n      );\n    }\n    return (\n      <Fragment>\n        <InputBox\n          id={`assign-bucket-${indexItem}`}\n          name={`assign-bucket-${indexItem}`}\n          label=\"\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            updateItem(indexItem, event.target.value);\n          }}\n          value={relationBuckets[indexItem]}\n          disabled={addLoading}\n        />\n      </Fragment>\n    );\n  };\n\n  const removeSuccessItems = (\n    responseItem: MultiBucketResponseItem[] | undefined,\n  ) => {\n    let newBucketsToAlter = [...bucketsToAlter];\n    let newRelationBuckets = [...relationBuckets];\n\n    responseItem?.forEach((successElement) => {\n      const errorString = get(successElement, \"errorString\", \"\");\n\n      if (!errorString || errorString === \"\") {\n        const indexToRemove = newBucketsToAlter.indexOf(\n          successElement.originBucket || \"\",\n        );\n\n        newBucketsToAlter.splice(indexToRemove, 1);\n        newRelationBuckets.splice(indexToRemove, 1);\n      }\n    });\n\n    setBucketsToAlter(newBucketsToAlter);\n    setRelationBuckets(newRelationBuckets);\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Set Multiple Bucket Replication\"\n    >\n      <Wizard\n        loadingStep={addLoading || externalLoading}\n        wizardSteps={[\n          {\n            label: \"Remote Configuration\",\n            componentRender: (\n              <Fragment>\n                <FormLayout containerPadding={false} withBorders={false}>\n                  <ReadBox\n                    label=\"Local Buckets to replicate\"\n                    sx={{ maxWidth: \"440px\", width: \"100%\" }}\n                  >\n                    {bucketsToAlter.join(\", \")}\n                  </ReadBox>\n                  <h4>Remote Endpoint Configuration</h4>\n                  <span style={{ fontSize: 14 }}>\n                    Please avoid the use of root credentials for this feature\n                    <br />\n                    <br />\n                  </span>\n                  <InputBox\n                    id=\"accessKey\"\n                    name=\"accessKey\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setAccessKey(e.target.value);\n                    }}\n                    label=\"Access Key\"\n                    value={accessKey}\n                  />\n                  <InputBox\n                    id=\"secretKey\"\n                    name=\"secretKey\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setSecretKey(e.target.value);\n                    }}\n                    label=\"Secret Key\"\n                    value={secretKey}\n                  />\n                  <InputBox\n                    id=\"targetURL\"\n                    name=\"targetURL\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setTargetURL(e.target.value);\n                    }}\n                    placeholder=\"play.min.io:9000\"\n                    label=\"Target URL\"\n                    value={targetURL}\n                  />\n                  <Switch\n                    checked={useTLS}\n                    id=\"useTLS\"\n                    name=\"useTLS\"\n                    label=\"Use TLS\"\n                    onChange={(e) => {\n                      setUseTLS(e.target.checked);\n                    }}\n                    value=\"yes\"\n                  />\n                  <InputBox\n                    id=\"region\"\n                    name=\"region\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setRegion(e.target.value);\n                    }}\n                    label=\"Region\"\n                    value={region}\n                  />\n                  <Select\n                    id=\"replication_mode\"\n                    name=\"replication_mode\"\n                    onChange={(value) => {\n                      setReplicationMode(value as \"sync\" | \"async\");\n                    }}\n                    label=\"Replication Mode\"\n                    value={replicationMode}\n                    options={[\n                      { label: \"Asynchronous\", value: \"async\" },\n                      { label: \"Synchronous\", value: \"sync\" },\n                    ]}\n                  />\n                  {replicationMode === \"async\" && (\n                    <InputBox\n                      type=\"number\"\n                      id=\"bandwidth_scalar\"\n                      name=\"bandwidth_scalar\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        if (e.target.validity.valid) {\n                          setBandwidthScalar(e.target.value as string);\n                        }\n                      }}\n                      label=\"Bandwidth\"\n                      value={bandwidthScalar}\n                      min=\"0\"\n                      pattern={\"[0-9]*\"}\n                      overlayObject={\n                        <InputUnitMenu\n                          id={\"quota_unit\"}\n                          onUnitChange={(newValue) => {\n                            setBandwidthUnit(newValue);\n                          }}\n                          unitSelected={bandwidthUnit}\n                          unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\n                          disabled={false}\n                        />\n                      }\n                    />\n                  )}\n                  <InputBox\n                    id=\"healthCheck\"\n                    name=\"healthCheck\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setHealthCheck(e.target.value as string);\n                    }}\n                    label=\"Health Check Duration\"\n                    value={healthCheck}\n                  />\n                </FormLayout>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Next\",\n                enabled: !externalLoading,\n                action: retrieveRemoteBuckets,\n              },\n            ],\n          },\n          {\n            label: \"Bucket Assignments\",\n            componentRender: (\n              <Fragment>\n                <h3>Remote Bucket Assignments</h3>\n                <span style={{ fontSize: 14 }}>\n                  Please select / type the desired remote bucket were you want\n                  the local data to be replicated.\n                </span>\n                <Box\n                  sx={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"auto auto 45px\",\n                    alignItems: \"center\",\n                    justifyContent: \"stretch\",\n                    \"& .hide\": {\n                      opacity: 0,\n                      transitionDuration: \"0.3s\",\n                    },\n                  }}\n                >\n                  {bucketsToAlter.map((bucketName: string, index: number) => {\n                    const errorItem = stateOfItem(bucketName);\n                    return (\n                      <Fragment\n                        key={`buckets-assignation-${index.toString()}-${bucketName}`}\n                      >\n                        <div className={errorItem === \"\" ? \"hide\" : \"\"}>\n                          {bucketName}\n                        </div>\n                        <div className={errorItem === \"\" ? \"hide\" : \"\"}>\n                          {itemDisplayBulk(index)}\n                        </div>\n                        <div className={errorItem === \"\" ? \"hide\" : \"\"}>\n                          {responseItem && responseItem.length > 0 && (\n                            <LogoToShow errString={errorItem} />\n                          )}\n                        </div>\n                      </Fragment>\n                    );\n                  })}\n                </Box>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"back\",\n                label: \"Back\",\n                enabled: true,\n              },\n              {\n                type: \"next\",\n                label: \"Create\",\n                enabled: !addLoading,\n                action: addRecord,\n              },\n            ],\n          },\n        ]}\n        forModal\n      />\n    </ModalWrapper>\n  );\n};\n\nexport default AddBulkReplicationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  AddIcon,\n  BucketsIcon,\n  Button,\n  HelpBox,\n  MultipleBucketsIcon,\n  PageLayout,\n  RefreshIcon,\n  SelectAllIcon,\n  SelectMultipleIcon,\n  Grid,\n  breakPoints,\n  ProgressBar,\n  ActionLink,\n} from \"mds\";\n\nimport { actionsTray } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { SecureComponent } from \"../../../../common/SecureComponent\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_SCOPES,\n  permissionTooltipHelper,\n} from \"../../../../common/SecureComponent/permissions\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport { api } from \"../../../../api\";\nimport { Bucket } from \"../../../../api/consoleApi\";\nimport { errorToHandler } from \"../../../../api/errors\";\nimport HelpMenu from \"../../HelpMenu\";\nimport AutoColorIcon from \"../../Common/Components/AutoColorIcon\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport SearchBox from \"../../Common/SearchBox\";\nimport VirtualizedList from \"../../Common/VirtualizedList/VirtualizedList\";\nimport hasPermission from \"../../../../common/SecureComponent/accessControl\";\nimport BucketListItem from \"./BucketListItem\";\nimport BulkReplicationModal from \"./BulkReplicationModal\";\n\nconst ListBuckets = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [records, setRecords] = useState<Bucket[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [filterBuckets, setFilterBuckets] = useState<string>(\"\");\n  const [selectedBuckets, setSelectedBuckets] = useState<string[]>([]);\n  const [replicationModalOpen, setReplicationModalOpen] =\n    useState<boolean>(false);\n  const [bulkSelect, setBulkSelect] = useState<boolean>(false);\n\n  const features = useSelector(selFeatures);\n  const obOnly = !!features?.includes(\"object-browser-only\");\n\n  useEffect(() => {\n    dispatch(setHelpName(\"ob_bucket_list\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (loading) {\n      const fetchRecords = () => {\n        setLoading(true);\n        api.buckets.listBuckets().then((res) => {\n          if (res.data) {\n            setLoading(false);\n            setRecords(res.data.buckets || []);\n          } else if (res.error) {\n            setLoading(false);\n            dispatch(setErrorSnackMessage(errorToHandler(res.error)));\n          }\n        });\n      };\n      fetchRecords();\n    }\n  }, [loading, dispatch]);\n\n  const filteredRecords = records.filter((b: Bucket) => {\n    if (filterBuckets === \"\") {\n      return true;\n    } else {\n      return b.name.indexOf(filterBuckets) >= 0;\n    }\n  });\n\n  const hasBuckets = records.length > 0;\n\n  const selectListBuckets = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selectedBuckets]; // We clone the selectedBuckets array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedBucketsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedBuckets(elements);\n\n    return elements;\n  };\n\n  const closeBulkReplicationModal = (unselectAll: boolean) => {\n    setReplicationModalOpen(false);\n\n    if (unselectAll) {\n      setSelectedBuckets([]);\n    }\n  };\n\n  const renderItemLine = (index: number) => {\n    const bucket = filteredRecords[index] || null;\n    if (bucket) {\n      return (\n        <BucketListItem\n          bucket={bucket}\n          onSelect={selectListBuckets}\n          selected={selectedBuckets.includes(bucket.name)}\n          bulkSelect={bulkSelect}\n        />\n      );\n    }\n    return null;\n  };\n\n  const selectAllBuckets = () => {\n    if (selectedBuckets.length === filteredRecords.length) {\n      setSelectedBuckets([]);\n      return;\n    }\n\n    const selectAllBuckets = filteredRecords.map((bucket) => {\n      return bucket.name;\n    });\n\n    setSelectedBuckets(selectAllBuckets);\n  };\n\n  const canCreateBucket = hasPermission(\"*\", [IAM_SCOPES.S3_CREATE_BUCKET]);\n  const canListBuckets = hasPermission(\"*\", [\n    IAM_SCOPES.S3_LIST_BUCKET,\n    IAM_SCOPES.S3_ALL_LIST_BUCKET,\n  ]);\n\n  return (\n    <Fragment>\n      {replicationModalOpen && (\n        <BulkReplicationModal\n          open={replicationModalOpen}\n          buckets={selectedBuckets}\n          closeModalAndRefresh={closeBulkReplicationModal}\n        />\n      )}\n      {!obOnly && (\n        <PageHeaderWrapper label={\"Buckets\"} actions={<HelpMenu />} />\n      )}\n\n      <PageLayout>\n        <Grid item xs={12} sx={actionsTray.actionsTray}>\n          {obOnly && (\n            <Grid item xs>\n              <AutoColorIcon marginRight={15} marginTop={10} />\n            </Grid>\n          )}\n          {hasBuckets && (\n            <SearchBox\n              onChange={setFilterBuckets}\n              placeholder=\"Search Buckets\"\n              value={filterBuckets}\n              sx={{\n                minWidth: 380,\n                [`@media (max-width: ${breakPoints.md}px)`]: {\n                  minWidth: 220,\n                },\n              }}\n            />\n          )}\n\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              gap: 5,\n            }}\n          >\n            {!obOnly && (\n              <Fragment>\n                <TooltipWrapper\n                  tooltip={\n                    !hasBuckets\n                      ? \"\"\n                      : bulkSelect\n                        ? \"Unselect Buckets\"\n                        : \"Select Multiple Buckets\"\n                  }\n                >\n                  <Button\n                    id={\"multiple-bucket-seection\"}\n                    onClick={() => {\n                      setBulkSelect(!bulkSelect);\n                      setSelectedBuckets([]);\n                    }}\n                    icon={<SelectMultipleIcon />}\n                    variant={bulkSelect ? \"callAction\" : \"regular\"}\n                    disabled={!hasBuckets}\n                  />\n                </TooltipWrapper>\n\n                {bulkSelect && (\n                  <TooltipWrapper\n                    tooltip={\n                      !hasBuckets\n                        ? \"\"\n                        : selectedBuckets.length === filteredRecords.length\n                          ? \"Unselect All Buckets\"\n                          : \"Select All Buckets\"\n                    }\n                  >\n                    <Button\n                      id={\"select-all-buckets\"}\n                      onClick={selectAllBuckets}\n                      icon={<SelectAllIcon />}\n                      variant={\"regular\"}\n                    />\n                  </TooltipWrapper>\n                )}\n\n                <TooltipWrapper\n                  tooltip={\n                    !hasBuckets\n                      ? \"\"\n                      : selectedBuckets.length === 0\n                        ? bulkSelect\n                          ? \"Please select at least one bucket on which to configure Replication\"\n                          : \"Use the Select Multiple Buckets button to choose buckets on which to configure Replication\"\n                        : \"Set Replication\"\n                  }\n                >\n                  <Button\n                    id={\"set-replication\"}\n                    onClick={() => {\n                      setReplicationModalOpen(true);\n                    }}\n                    icon={<MultipleBucketsIcon />}\n                    variant={\"regular\"}\n                    disabled={selectedBuckets.length === 0}\n                  />\n                </TooltipWrapper>\n              </Fragment>\n            )}\n\n            <TooltipWrapper tooltip={\"Refresh\"}>\n              <Button\n                id={\"refresh-buckets\"}\n                onClick={() => {\n                  setLoading(true);\n                }}\n                icon={<RefreshIcon />}\n                variant={\"regular\"}\n              />\n            </TooltipWrapper>\n\n            {!obOnly && (\n              <TooltipWrapper\n                tooltip={\n                  canCreateBucket\n                    ? \"\"\n                    : permissionTooltipHelper(\n                        [IAM_SCOPES.S3_CREATE_BUCKET],\n                        \"create a bucket\",\n                      )\n                }\n              >\n                <Button\n                  id={\"create-bucket\"}\n                  onClick={() => {\n                    navigate(IAM_PAGES.ADD_BUCKETS);\n                  }}\n                  icon={<AddIcon />}\n                  variant={\"callAction\"}\n                  disabled={!canCreateBucket}\n                  label={\"Create Bucket\"}\n                />\n              </TooltipWrapper>\n            )}\n          </Grid>\n        </Grid>\n\n        {loading && <ProgressBar />}\n        {!loading && (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              marginTop: 25,\n              height: \"calc(100vh - 211px)\",\n              \"&.isEmbedded\": {\n                height: \"calc(100vh - 128px)\",\n              },\n            }}\n            className={obOnly ? \"isEmbedded\" : \"\"}\n          >\n            {filteredRecords.length !== 0 && (\n              <VirtualizedList\n                rowRenderFunction={renderItemLine}\n                totalItems={filteredRecords.length}\n              />\n            )}\n            {filteredRecords.length === 0 && filterBuckets !== \"\" && (\n              <Grid container>\n                <Grid item xs={8}>\n                  <HelpBox\n                    iconComponent={<BucketsIcon />}\n                    title={\"No Results\"}\n                    help={\n                      <Fragment>\n                        No buckets match the filtering condition\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n            {!hasBuckets && (\n              <Grid container>\n                <Grid item xs={8}>\n                  <HelpBox\n                    iconComponent={<BucketsIcon />}\n                    title={\"Buckets\"}\n                    help={\n                      <Fragment>\n                        MinIO uses buckets to organize objects. A bucket is\n                        similar to a folder or directory in a filesystem, where\n                        each bucket can hold an arbitrary number of objects.\n                        <br />\n                        {canListBuckets ? (\n                          \"\"\n                        ) : (\n                          <Fragment>\n                            <br />\n                            {permissionTooltipHelper(\n                              [\n                                IAM_SCOPES.S3_LIST_BUCKET,\n                                IAM_SCOPES.S3_ALL_LIST_BUCKET,\n                              ],\n                              \"view the buckets on this server\",\n                            )}\n                            <br />\n                          </Fragment>\n                        )}\n                        <SecureComponent\n                          scopes={[IAM_SCOPES.S3_CREATE_BUCKET]}\n                          resource={CONSOLE_UI_RESOURCE}\n                        >\n                          <br />\n                          To get started,&nbsp;\n                          <ActionLink\n                            onClick={() => {\n                              navigate(IAM_PAGES.ADD_BUCKETS);\n                            }}\n                          >\n                            Create a Bucket.\n                          </ActionLink>\n                        </SecureComponent>\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default ListBuckets;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { DropdownSelector, SelectorType } from \"mds\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\ninterface IInputUnitBox {\n  id: string;\n  unitSelected: string;\n  unitsList: SelectorType[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst UnitMenuButton = styled.button(({ theme }) => ({\n  border: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n  borderRadius: 3,\n  color: get(theme, \"secondaryText\", \"#5B5C5C\"),\n  backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  fontSize: 12,\n}));\n\nconst InputUnitMenu = ({\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <UnitMenuButton\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </UnitMenuButton>\n      <DropdownSelector\n        id={\"upload-main-menu\"}\n        options={unitsList}\n        selectedOption={\"\"}\n        onSelect={(value) => handleClose(value)}\n        hideTriggerAction={() => {\n          handleClose(\"\");\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={\"end\"}\n      />\n    </Fragment>\n  );\n};\n\nexport default InputUnitMenu;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalBox, Snackbar } from \"mds\";\nimport { CSSObject } from \"styled-components\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  titleIcon?: React.ReactNode;\n  iconColor?: \"default\" | \"delete\" | \"accept\";\n  sx?: CSSObject;\n}\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  wideLimit = true,\n  titleIcon = null,\n  iconColor = \"default\",\n  sx,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar,\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (message === \"\" || (message && message.length < 5)) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <ModalBox\n      onClose={onClose}\n      open={modalOpen}\n      title={title}\n      titleIcon={titleIcon}\n      widthLimit={wideLimit}\n      sx={sx}\n      iconColor={iconColor}\n    >\n      <MainError isModal={true} />\n      <Snackbar\n        onClose={closeSnackBar}\n        open={openSnackbar}\n        message={message}\n        mode={\"inline\"}\n        variant={modalSnackMessage.type === \"error\" ? \"error\" : \"default\"}\n        autoHideDuration={modalSnackMessage.type === \"error\" ? 10 : 5}\n        condensed\n      />\n      {children}\n    </ModalBox>\n  );\n};\n\nexport default ModalWrapper;\n"],"names":["BucketItemMain","styled","div","_ref","theme","border","get","borderRadius","padding","cursor","backgroundColor","display","alignItems","justifyContent","gap","margin","marginBottom","fontSize","color","breakPoints","md","flexFlow","marginTop","borderTop","paddingTop","fill","width","marginRight","fontWeight","_ref2","_bucket$details3","_bucket$details4","bucket","onSelect","selected","bulkSelect","navigate","useNavigate","clickOverride","setClickOverride","useState","usage","niceBytes","size","usageScalar","split","usageUnit","quota","quotaForString","calculateBytes","manageAllowed","hasPermission","name","IAM_PERMISSIONS","IAM_ROLES","BUCKET_ADMIN","_jsxs","onClick","id","className","children","Box","_jsx","e","stopPropagation","Checkbox","checked","label","onChange","value","creation_date","Date","toString","_bucket$rw_access","_bucket$rw_access2","_bucket$rw_access3","_bucket$rw_access4","_bucket$rw_access5","_bucket$rw_access6","rw_access","read","write","accessToStr","Link","to","BucketsIcon","style","height","Grid","item","onMouseEnter","_bucket$details","details","versioning","onMouseLeave","_bucket$details2","HelpTip","content","usageClarifyingContent","placement","ReportedUsageIcon","Fragment","total","unit","TotalObjectsIcon","objects","prettyNumber","open","closeModalAndRefresh","buckets","dispatch","useAppDispatch","bucketsToAlter","setBucketsToAlter","addLoading","setAddLoading","externalLoading","setExternalLoading","accessKey","setAccessKey","secretKey","setSecretKey","targetURL","setTargetURL","region","setRegion","useTLS","setUseTLS","replicationMode","setReplicationMode","bandwidthScalar","setBandwidthScalar","bandwidthUnit","setBandwidthUnit","healthCheck","setHealthCheck","relationBuckets","setRelationBuckets","remoteBucketsOpts","setRemoteBucketOpts","responseItem","setResponseItem","optionsForBucketsDrop","map","remoteBucketName","useEffect","length","bucketsAlter","relationBucketsAlter","forEach","push","LogoToShow","errString","sx","CheckCircleIcon","Tooltip","tooltip","WarnIcon","updateItem","indexItem","updatedList","removeSuccessItems","newBucketsToAlter","newRelationBuckets","successElement","errorString","indexToRemove","indexOf","originBucket","splice","ModalWrapper","modalOpen","onClose","title","Wizard","loadingStep","wizardSteps","componentRender","FormLayout","containerPadding","withBorders","ReadBox","maxWidth","join","InputBox","target","placeholder","Switch","Select","options","type","validity","valid","min","pattern","overlayObject","InputUnitMenu","onUnitChange","newValue","unitSelected","unitsList","k8sScalarUnitsExcluding","disabled","buttons","enabled","action","wizardPageJump","remoteConnectInfo","api","listExternalBuckets","then","res","data","arrayReplaceBuckets","element","catch","err","setModalErrorSnackMessage","errorToHandler","error","gridTemplateColumns","opacity","transitionDuration","bucketName","index","errorItem","initialBucket","bucketResponse","find","stateOfItem","event","addRecord","replicate","destinationBucket","endURL","hc","parseInt","remoteBucketsInfo","bucketsRelation","syncMode","bandwidth","getBytes","healthCheckPeriod","bucketsReplication","setMultiBucketReplication","response","states","replicationState","filterErrors","filter","itm","setTimeout","forModal","ListBuckets","records","setRecords","loading","setLoading","filterBuckets","setFilterBuckets","selectedBuckets","setSelectedBuckets","replicationModalOpen","setReplicationModalOpen","setBulkSelect","features","useSelector","selFeatures","obOnly","includes","setHelpName","fetchRecords","listBuckets","setErrorSnackMessage","filteredRecords","b","hasBuckets","selectListBuckets","targetD","elements","canCreateBucket","IAM_SCOPES","S3_CREATE_BUCKET","canListBuckets","S3_LIST_BUCKET","S3_ALL_LIST_BUCKET","BulkReplicationModal","unselectAll","PageHeaderWrapper","actions","HelpMenu","PageLayout","xs","actionsTray","AutoColorIcon","SearchBox","minWidth","TooltipWrapper","Button","icon","SelectMultipleIcon","variant","selectAllBuckets","SelectAllIcon","MultipleBucketsIcon","RefreshIcon","permissionTooltipHelper","IAM_PAGES","ADD_BUCKETS","AddIcon","ProgressBar","VirtualizedList","rowRenderFunction","BucketListItem","totalItems","container","HelpBox","iconComponent","help","SecureComponent","scopes","resource","CONSOLE_UI_RESOURCE","ActionLink","UnitMenuButton","button","anchorEl","setAnchorEl","React","Boolean","handleClose","newUnit","undefined","currentTarget","DropdownSelector","selectedOption","hideTriggerAction","anchorOrigin","wideLimit","titleIcon","iconColor","openSnackbar","setOpenSnackbar","modalSnackMessage","state","system","modalSnackBar","setModalSnackMessage","message","detailedErrorMsg","ModalBox","widthLimit","MainError","isModal","Snackbar","closeSnackBar","mode","autoHideDuration","condensed"],"sourceRoot":""}